basePath: /api/manager
definitions:
  api.GetHarnessInfrastructureResponse:
    properties:
      connectorRef:
        type: string
      correlationID:
        type: string
      environmentRef:
        type: string
      identifier:
        type: string
      isCompatible:
        type: boolean
      isUsed:
        type: boolean
      name:
        type: string
      namespace:
        type: string
      orgIdentifier:
        type: string
      projectIdentifier:
        type: string
      serviceAccount:
        type: string
      type:
        type: string
    type: object
  api.HarnessInfrastructure:
    properties:
      connectorRef:
        type: string
      environmentRef:
        type: string
      identifier:
        type: string
      isCompatible:
        type: boolean
      isUsed:
        type: boolean
      name:
        type: string
      namespace:
        type: string
      orgIdentifier:
        type: string
      projectIdentifier:
        type: string
      serviceAccount:
        type: string
      type:
        type: string
    type: object
  api.ListHarnessInfrastructureResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/api.HarnessInfrastructure'
        type: array
      page:
        $ref: '#/definitions/github_com_harness_hce-saas_graphql_server_api.Pagination'
    type: object
  api.RestError:
    properties:
      description:
        type: string
      message:
        type: string
    type: object
  bulkaction.BulkAddTagsInExperimetsInput:
    properties:
      experimentIDs:
        items:
          type: string
        type: array
      tags:
        items:
          type: string
        type: array
    type: object
  bulkaction.BulkAddTagsInExperimetsResponse:
    type: object
  bulkaction.BulkDeleteExperimetsInput:
    properties:
      experimentIDs:
        items:
          type: string
        type: array
    type: object
  bulkaction.BulkDeleteExperimetsResponse:
    type: object
  chaos_experiment.Recommendation:
    properties:
      bySystem:
        type: boolean
      reasons:
        items:
          type: string
        type: array
      weightage:
        type: integer
    type: object
  chaos_infrastructure_v2.ChaosInfraV2:
    properties:
      accountID:
        type: string
      apiVersion:
        type: string
      createdAt:
        type: integer
      createdBy:
        type: string
      description:
        type: string
      environmentId:
        type: string
      identity:
        type: string
      isRemoved:
        type: boolean
      kind:
        type: string
      name:
        type: string
      orgID:
        type: string
      projectID:
        type: string
      spec:
        $ref: '#/definitions/chaos_infrastructure_v2.ChaosInfraV2Spec'
      tags:
        items:
          type: string
        type: array
      updatedAt:
        type: integer
      updatedBy:
        type: string
    type: object
  chaos_infrastructure_v2.ChaosInfraV2Spec:
    properties:
      k8sInfraV2:
        $ref: '#/definitions/chaos_infrastructure_v2.K8sInfraV2SpecIdentifiers'
    type: object
  chaos_infrastructure_v2.InfraScope:
    enum:
      - NAMESPACE
      - CLUSTER
    type: string
    x-enum-varnames:
      - NamespaceScope
      - ClusterScope
  chaos_infrastructure_v2.InfraType:
    enum:
      - KUBERNETES
      - KUBERNETESV2
    type: string
    x-enum-varnames:
      - KubernetesType
      - KubernetesV2Type
  chaos_infrastructure_v2.K8sInfraV2SpecIdentifiers:
    properties:
      discoveryAgentId:
        type: string
      namespace:
        type: string
      scope:
        $ref: '#/definitions/chaos_infrastructure_v2.InfraScope'
      serviceAccount:
        type: string
      token:
        type: string
      type:
        $ref: '#/definitions/chaos_infrastructure_v2.InfraType'
      version:
        type: string
    type: object
  chaosresourcenotes.NoteType:
    enum:
      - experiment-run
      - gameday-run-summary
      - gameday-run-experiment
    type: string
    x-enum-varnames:
      - ExperimentRun
      - GamedayRunSummary
      - GamedayExperiment
  chaosserviceusage.InfrastructureType:
    enum:
      - Kubernetes
      - KubernetesV2
      - Windows
      - Linux
    type: string
    x-enum-varnames:
      - InfrastructureTypeKubernetes
      - InfrastructureTypeKubernetesV2
      - InfrastructureTypeWindows
      - InfrastructureTypeLinux
  chaosserviceusage.OverallServiceUsageStats:
    properties:
      accountID:
        type: string
      licenseServiceMapping:
        $ref: '#/definitions/chaosserviceusage.ServiceStatsByType'
      serviceStats:
        $ref: '#/definitions/chaosserviceusage.ServiceStatsByType'
      totalUsage:
        type: number
    type: object
  chaosserviceusage.PeriodicStats:
    properties:
      serviceStatsByType:
        $ref: '#/definitions/chaosserviceusage.ServiceStatsByType'
      timestamp:
        type: integer
      totalConsumption:
        type: number
    type: object
  chaosserviceusage.ServiceData:
    properties:
      experimentRuns:
        type: integer
      experiments:
        type: integer
      faultsRan:
        type: integer
      infraStructure:
        type: string
      infraType:
        $ref: '#/definitions/chaosserviceusage.InfrastructureType'
      licenseUtilisation:
        type: number
      namespace:
        type: string
      orgID:
        type: string
      projectID:
        type: string
      resource:
        type: string
      service:
        type: string
      serviceID:
        type: string
      subType:
        type: string
      type:
        $ref: '#/definitions/chaosserviceusage.ServiceType'
    type: object
  chaosserviceusage.ServiceDataResponse:
    properties:
      serviceData:
        items:
          $ref: '#/definitions/chaosserviceusage.ServiceData'
        type: array
      serviceTypes:
        items:
          type: string
        type: array
      total:
        type: integer
    type: object
  chaosserviceusage.ServiceStatsByType:
    properties:
      Cloud Resources:
        type: number
      Container Services:
        type: number
      Kubernetes:
        type: number
      Linux:
        type: number
      Others:
        type: number
      Serverless:
        type: number
      Windows:
        type: number
    type: object
  chaosserviceusage.ServiceType:
    enum:
      - Kubernetes
      - Linux
      - Windows
      - Serverless
      - ContainerServices
      - CloudResources
      - Others
    type: string
    x-enum-varnames:
      - ServiceTypeKubernetes
      - ServiceTypeLinux
      - ServiceTypeWindows
      - ServiceTypeServerless
      - ServiceTypeContainerServices
      - ServiceTypeCloudResources
      - ServiceTypeOthers
  chaosserviceusage.UsageStats:
    properties:
      accountID:
        type: string
      periodicStats:
        items:
          $ref: '#/definitions/chaosserviceusage.PeriodicStats'
        type: array
    type: object
  common_types.ExperimentRunStats:
    properties:
      failed:
        type: integer
      success:
        type: integer
      time:
        type: integer
    type: object
  common_types.ExperimentRunsData:
    properties:
      experimentRunStats:
        items:
          $ref: '#/definitions/common_types.ExperimentRunStats'
        type: array
      totalExperimentChange:
        type: integer
      totalExperimentRuns:
        type: integer
    type: object
  database.AgentConfiguration:
    properties:
      data:
        $ref: '#/definitions/database.DataCollectionConfiguration'
      kubernetes:
        $ref: '#/definitions/database.KubernetesAgentConfiguration'
      mtls:
        $ref: '#/definitions/database.MTLSConfiguration'
      proxy:
        $ref: '#/definitions/database.ProxyConfiguration'
      skipSecureVerify:
        type: boolean
    required:
      - data
    type: object
  database.Connection:
    properties:
      from:
        $ref: '#/definitions/database.NetworkMapEntity'
      manual:
        type: boolean
      params:
        additionalProperties:
          type: string
        type: object
      port:
        type: string
      to:
        $ref: '#/definitions/database.NetworkMapEntity'
      type:
        $ref: '#/definitions/database.ConnectionType'
    type: object
  database.ConnectionType:
    enum:
      - TCP
    type: string
    x-enum-varnames:
      - ConnectionTypeTCP
  database.CronConfig:
    properties:
      expression:
        type: string
    type: object
  database.DataCollectionConfiguration:
    properties:
      blacklistedNamespaces:
        items:
          type: string
        type: array
      collectionWindowInMin:
        type: integer
      cron:
        $ref: '#/definitions/database.CronConfig'
      enableBatchResources:
        type: boolean
      enableNodeAgent:
        type: boolean
      enableOrphanedPod:
        type: boolean
      namespaceSelector:
        type: string
      nodeAgentSelector:
        type: string
      observedNamespaces:
        items:
          type: string
        type: array
    type: object
  database.DiscoveredKubernetesService:
    properties:
      annotations:
        additionalProperties:
          type: string
        type: object
      clusterIP:
        type: string
      clusterIPs:
        items:
          type: string
        type: array
      externalIPs:
        items:
          type: string
        type: array
      externalName:
        type: string
      identity:
        $ref: '#/definitions/v1.ObjectReference'
      labels:
        additionalProperties:
          type: string
        type: object
      loadBalancerIP:
        type: string
      ports:
        items:
          $ref: '#/definitions/v1.ServicePort'
        type: array
      type:
        $ref: '#/definitions/v1.ServiceType'
    type: object
  database.DiscoveredKubernetesWorkload:
    properties:
      annotations:
        additionalProperties:
          type: string
        type: object
      identity:
        $ref: '#/definitions/v1.ObjectReference'
      labels:
        additionalProperties:
          type: string
        type: object
      podAnnotations:
        additionalProperties:
          type: string
        type: object
      podLabels:
        additionalProperties:
          type: string
        type: object
      replicas:
        items:
          $ref: '#/definitions/database.DiscoveredPod'
        type: array
    type: object
  database.DiscoveredPod:
    properties:
      identity:
        $ref: '#/definitions/v1.ObjectReference'
      phase:
        $ref: '#/definitions/v1.PodPhase'
    type: object
  database.DiscoveredServiceCollection:
    properties:
      agentID:
        type: string
      agentIdentity:
        type: string
      createdAt:
        type: string
      createdBy:
        type: string
      id:
        type: string
      name:
        type: string
      removed:
        type: boolean
      removedAt:
        type: string
      spec:
        $ref: '#/definitions/database.DiscoveredServiceSpec'
      type:
        type: string
      updatedAt:
        type: string
      updatedBy:
        type: string
      version:
        type: string
    required:
      - agentID
      - agentIdentity
      - id
      - name
      - spec
      - type
      - version
    type: object
  database.DiscoveredServiceKubernetesSpec:
    properties:
      kind:
        type: string
      name:
        type: string
      namespace:
        type: string
      service:
        $ref: '#/definitions/database.DiscoveredKubernetesService'
      uid:
        type: string
      workloads:
        items:
          $ref: '#/definitions/database.DiscoveredKubernetesWorkload'
        type: array
    type: object
  database.DiscoveredServiceSpec:
    properties:
      fqdn:
        items:
          type: string
        type: array
      harnessEnvironmentIdentity:
        $ref: '#/definitions/database.EnvironmentIdentity'
      harnessServiceIdentity:
        $ref: '#/definitions/database.ServiceIdentity'
      ip:
        items:
          type: string
        type: array
      kubernetes:
        $ref: '#/definitions/database.DiscoveredServiceKubernetesSpec'
      port:
        items:
          type: string
        type: array
    type: object
  database.EnvironmentIdentity:
    properties:
      accountIdentifier:
        type: string
      identifier:
        type: string
      infraIdentifier:
        type: string
      organizationIdentifier:
        type: string
      projectIdentifier:
        type: string
    type: object
  database.KubernetesAgentConfiguration:
    properties:
      imagePullPolicy:
        $ref: '#/definitions/v1.PullPolicy'
      namespace:
        type: string
      namespaced:
        type: boolean
      nodeSelector:
        additionalProperties:
          type: string
        type: object
      resources:
        $ref: '#/definitions/database.ResourceRequirements'
      runAsGroup:
        type: integer
      runAsUser:
        type: integer
      serviceAccount:
        type: string
      tolerations:
        items:
          $ref: '#/definitions/v1.Toleration'
        type: array
    type: object
  database.MTLSConfiguration:
    properties:
      certPath:
        type: string
      keyPath:
        type: string
      secretName:
        type: string
      url:
        type: string
    type: object
  database.NetworkMapEntity:
    properties:
      id:
        type: string
      kind:
        $ref: '#/definitions/database.NetworkMapResourceKind'
      kubernetes:
        $ref: '#/definitions/database.NetworkMapEntityKubernetesInfo'
      name:
        type: string
    required:
      - id
      - kind
      - name
    type: object
  database.NetworkMapEntityKubernetesInfo:
    properties:
      namespace:
        type: string
    type: object
  database.NetworkMapResourceKind:
    enum:
      - K8SCustomService
      - discoveredservice
    type: string
    x-enum-varnames:
      - NetworkMapResourceKindK8SCustomService
      - NetworkMapResourceKindDiscoveredService
  database.ProxyConfiguration:
    properties:
      httpProxy:
        type: string
      httpsProxy:
        type: string
      noProxy:
        description: |-
          SecretName string `bson:"secretName" json:"secretName"`
          CAPath     string `bson:"caPath" json:"caPath"`
        type: string
      url:
        type: string
    type: object
  database.ResourceList:
    properties:
      cpu:
        type: string
      memory:
        type: string
    type: object
  database.ResourceRequirements:
    properties:
      limits:
        $ref: '#/definitions/database.ResourceList'
      requests:
        $ref: '#/definitions/database.ResourceList'
    type: object
  database.ServiceCollection:
    properties:
      agentID:
        type: string
      annotations:
        additionalProperties:
          type: string
        type: object
      apiVersion:
        type: string
      createdAt:
        type: string
      createdBy:
        type: string
      creationTimestamp:
        type: string
      deletionTimestamp:
        type: string
      id:
        type: string
      kind:
        type: string
      labels:
        additionalProperties:
          type: string
        type: object
      name:
        type: string
      namespace:
        type: string
      ownerReference:
        items:
          $ref: '#/definitions/v1.OwnerReference'
        type: array
      removed:
        type: boolean
      removedAt:
        type: string
      resourceVersion:
        type: string
      spec:
        $ref: '#/definitions/v1.ServiceSpec'
      status:
        $ref: '#/definitions/v1.ServiceStatus'
      uid:
        type: string
      updatedAt:
        type: string
      updatedBy:
        type: string
    required:
      - agentID
      - apiVersion
      - id
      - kind
      - name
      - namespace
      - resourceVersion
      - spec
      - uid
    type: object
  database.ServiceIdentity:
    properties:
      accountIdentifier:
        type: string
      identifier:
        type: string
      organizationIdentifier:
        type: string
      projectIdentifier:
        type: string
    type: object
  experiment.SaveChaosExperimentResponse:
    properties:
      auditAction:
        type: string
      response:
        type: string
    type: object
  gamedayrunv2.ApprovalStatus:
    enum:
      - approved
      - rejected
      - pending
    type: string
    x-enum-varnames:
      - Approved
      - Rejected
      - ApprovalPending
  gamedayrunv2.PrerequisiteStatus:
    enum:
      - done
      - pending
    type: string
    x-enum-varnames:
      - Done
      - Pending
  gamedayv2.GamedayRunStatus:
    enum:
      - awaiting_approval
      - preparing_prerequisites
      - running_experiments
      - post_mortem
      - terminated
      - completed
    type: string
    x-enum-varnames:
      - AwaitingApproval
      - PreparingPrerequisites
      - RunningExperiments
      - PostMortem
      - Terminated
      - Completed
  gamedayv2.StakeHolderRole:
    enum:
      - coordinator
      - triage_engineer
      - attendee
      - others
    type: string
    x-enum-varnames:
      - Coordinator
      - TriageEngineer
      - Attendee
      - Others
  github_com_harness_hce-saas_graphql_server_api.Pagination:
    properties:
      index:
        type: integer
      limit:
        type: integer
      totalItems:
        type: integer
      totalPages:
        type: integer
    type: object
  github_com_harness_hce-saas_graphql_server_graph_model.Identifiers:
    properties:
      accountIdentifier:
        description: Harness AccountID
        type: string
      orgIdentifier:
        description: Harness OrgID
        type: string
      projectIdentifier:
        description: Harness projectID
        type: string
    type: object
  github_com_harness_hce-saas_graphql_server_graph_model.InfraFilterInput:
    properties:
      compatibleWithNewExp:
        description: 'To filter out infras that are compatible with the new experiment
          manifest format: without experiment CRs'
        type: boolean
      description:
        description: ID of the infra
        type: string
      infraID:
        description: ID of the infra
        type: string
      infraScope:
        allOf:
          - $ref: '#/definitions/model.InfraScope'
        description: Scope of infra
      isActive:
        description: Status of infra
        type: boolean
      name:
        description: Name of the infra
        type: string
      platformName:
        description: Platform name of infra
        type: string
      tags:
        description: Tags of an infra
        items:
          type: string
        type: array
    type: object
  github_com_harness_hce-saas_graphql_server_graph_model.Pagination:
    properties:
      limit:
        description: Number of data to be fetched
        type: integer
      page:
        description: Page number for which data will be fetched
        type: integer
    type: object
  github_com_harness_hce-saas_graphql_server_graph_model.UserDetails:
    properties:
      email:
        type: string
      userID:
        type: string
      username:
        type: string
    type: object
  handlers.CHAOSLicenseUsageDTO:
    properties:
      accountIdentifier:
        type: string
      experimentRunsPerMonth:
        $ref: '#/definitions/handlers.UsageDataDTO'
      module:
        type: string
      timestamp:
        type: integer
    type: object
  handlers.ChaosExperimentRunsStatsResponse:
    properties:
      data:
        $ref: '#/definitions/common_types.ExperimentRunsData'
    type: object
  handlers.Dashboard:
    properties:
      description:
        type: string
      id:
        type: integer
      title:
        type: string
    type: object
  handlers.ExperimentHelperImageVersion:
    properties:
      experimentHelperImageVersion:
        type: string
    type: object
  handlers.ImageRegistryDetails:
    properties:
      imageRegistryRepo:
        type: string
      imageRegistrySecret:
        type: string
    type: object
  handlers.ListExperimentsWithActiveInfrasMinimalNotificationResponse:
    properties:
      experiments:
        description: Details related to the workflows
        items:
          $ref: '#/definitions/handlers.MinimalNotificationWorkflow'
        type: array
      totalNoOfExperiments:
        description: Total number of workflows
        type: integer
    type: object
  handlers.MinimalNotificationWorkflow:
    properties:
      infraID:
        description: ID of the infra
        type: string
      infraName:
        description: Name of the infrastructure
        type: string
      name:
        description: Name of the workflow
        type: string
      tags:
        description: Tags of the workflow
        items:
          type: string
        type: array
      workflowID:
        description: ID of the workflow
        type: string
    type: object
  handlers.ReferenceDTO:
    properties:
      accountIdentifier:
        type: string
      identifier:
        type: string
      name:
        type: string
      orgIdentifier:
        type: string
      projectIdentifier:
        type: string
    type: object
  handlers.UsageDataDTO:
    properties:
      count:
        type: integer
      displayName:
        type: string
      references:
        items:
          $ref: '#/definitions/handlers.ReferenceDTO'
        type: array
    type: object
  infra_v2.DeleteKubernetesInfraV2Response:
    properties:
      correlationId:
        type: string
      identity:
        type: string
      message:
        type: string
    type: object
  infra_v2.Identifiers:
    properties:
      accountIdentifier:
        type: string
      orgIdentifier:
        type: string
      projectIdentifier:
        type: string
    type: object
  infra_v2.InfraScope:
    enum:
      - NAMESPACE
      - CLUSTER
    type: string
    x-enum-varnames:
      - InfraScopeNamespace
      - InfraScopeCluster
  infra_v2.InfraStatus:
    enum:
      - ACTIVE
      - INACTIVE
      - PENDING
      - UPGRADING
      - UPGRADE_REQUIRED
    type: string
    x-enum-varnames:
      - InfraStatusActive
      - InfraStatusInactive
      - InfraStatusPending
      - InfraStatusUpgrading
      - InfraStatusUpgradeRequired
  infra_v2.InfraType:
    enum:
      - KUBERNETES
      - KUBERNETESV2
    type: string
    x-enum-varnames:
      - InfraTypeKubernetes
      - InfraTypeKubernetesV2
  infra_v2.InfraTypeFilter:
    enum:
      - KUBERNETES
      - KUBERNETESV2
      - ALL
    type: string
    x-enum-varnames:
      - InfraTypeFilterKubernetes
      - InfraTypeFilterKubernetesV2
      - InfraTypeFilterAll
  infra_v2.InstallationType:
    enum:
      - CONNECTOR
      - MANIFEST
      - CONNECTOR_V2
    type: string
    x-enum-varnames:
      - InstallationTypeConnector
      - InstallationTypeManifest
      - InstallationTypeConnectorV2
  infra_v2.KubernetesInfraV2FilterInput:
    properties:
      infraScope:
        $ref: '#/definitions/infra_v2.InfraScope'
      infraTypeFilter:
        $ref: '#/definitions/infra_v2.InfraTypeFilter'
      tags:
        items:
          type: string
        type: array
    type: object
  infra_v2.KubernetesInfrastructureV2Details:
    properties:
      createdAt:
        type: string
      createdBy:
        $ref: '#/definitions/infra_v2.UserDetails'
      deploymentType:
        type: string
      description:
        type: string
      discoveryAgentID:
        type: string
      environmentID:
        type: string
      harnessInfraType:
        type: string
      identifier:
        $ref: '#/definitions/infra_v2.Identifiers'
      identity:
        type: string
      infraID:
        type: string
      infraNamespace:
        type: string
      infraScope:
        $ref: '#/definitions/infra_v2.InfraScope'
      infraType:
        $ref: '#/definitions/infra_v2.InfraType'
      insecureSkipVerify:
        type: boolean
      installationType:
        $ref: '#/definitions/infra_v2.InstallationType'
      isChaosEnabled:
        type: boolean
      k8sConnectorID:
        type: string
      lastHeartbeat:
        type: integer
      lastWorkflowTimestamp:
        type: string
      mtls:
        $ref: '#/definitions/infra_v2.MTLSConfiguration'
      name:
        type: string
      noOfSchedules:
        type: integer
      noOfWorkflows:
        type: integer
      nodeSelector:
        additionalProperties:
          type: string
        type: object
      platformName:
        type: string
      proxy:
        $ref: '#/definitions/infra_v2.ProxyConfiguration'
      runAsGroup:
        type: integer
      runAsUser:
        type: integer
      serviceAccount:
        type: string
      status:
        $ref: '#/definitions/infra_v2.InfraStatus'
      tags:
        items:
          type: string
        type: array
      tolerations:
        items:
          $ref: '#/definitions/v1.Toleration'
        type: array
      updateStatus:
        $ref: '#/definitions/infra_v2.UpdateStatus'
      updatedAt:
        type: string
      updatedBy:
        $ref: '#/definitions/infra_v2.UserDetails'
      upgrade:
        $ref: '#/definitions/infra_v2.Upgrade'
      version:
        type: string
    type: object
  infra_v2.ListKubernetesInfraV2Request:
    properties:
      filter:
        $ref: '#/definitions/infra_v2.KubernetesInfraV2FilterInput'
      identifier:
        $ref: '#/definitions/infra_v2.Identifiers'
    type: object
  infra_v2.ListKubernetesInfraV2Response:
    properties:
      infras:
        items:
          $ref: '#/definitions/infra_v2.KubernetesInfrastructureV2Details'
        type: array
      pagination:
        $ref: '#/definitions/infra_v2.Pagination'
      totalNoOfInfrastructures:
        type: integer
    type: object
  infra_v2.MTLSConfiguration:
    properties:
      certPath:
        type: string
      keyPath:
        type: string
      secretName:
        type: string
      url:
        type: string
    type: object
  infra_v2.Pagination:
    properties:
      limit:
        type: integer
      page:
        type: integer
    type: object
  infra_v2.ProxyConfiguration:
    properties:
      httpProxy:
        type: string
      httpsProxy:
        type: string
      noProxy:
        type: string
      url:
        type: string
    type: object
  infra_v2.RegisterInfrastructureV2Request:
    properties:
      annotation:
        additionalProperties:
          type: string
        type: object
      correlationId:
        type: string
      description:
        type: string
      discoveryAgentID:
        type: string
      env:
        items:
          $ref: '#/definitions/v1.EnvVar'
        type: array
      envFrom:
        items:
          $ref: '#/definitions/v1.EnvFromSource'
        type: array
      environmentID:
        type: string
      identity:
        type: string
      infraID:
        type: string
      infraNamespace:
        type: string
      infraScope:
        $ref: '#/definitions/infra_v2.InfraScope'
      infraType:
        $ref: '#/definitions/infra_v2.InfraType'
      initContainers:
        type: string
      insecureSkipVerify:
        type: boolean
      k8sConnectorID:
        type: string
      label:
        additionalProperties:
          type: string
        type: object
      mtls:
        $ref: '#/definitions/infra_v2.MTLSConfiguration'
      name:
        type: string
      nodeSelector:
        additionalProperties:
          type: string
        type: object
      proxy:
        $ref: '#/definitions/infra_v2.ProxyConfiguration'
      runAsGroup:
        type: integer
      runAsUser:
        type: integer
      serviceAccount:
        type: string
      sidecarContainers:
        type: string
      tags:
        items:
          type: string
        type: array
      tolerations:
        items:
          $ref: '#/definitions/v1.Toleration'
        type: array
      volumeMounts:
        items:
          $ref: '#/definitions/v1.VolumeMount'
        type: array
      volumes:
        items:
          $ref: '#/definitions/v1.Volume'
        type: array
    type: object
  infra_v2.RegisterInfrastructureV2Response:
    properties:
      identity:
        type: string
      name:
        type: string
      token:
        type: string
    type: object
  infra_v2.UpdateKubernetesInfrastructureV2Request:
    properties:
      annotation:
        additionalProperties:
          type: string
        type: object
      correlationId:
        type: string
      description:
        type: string
      env:
        items:
          $ref: '#/definitions/v1.EnvVar'
        type: array
      envFrom:
        items:
          $ref: '#/definitions/v1.EnvFromSource'
        type: array
      environmentID:
        type: string
      identity:
        type: string
      infraNamespace:
        type: string
      initContainers:
        type: string
      insecureSkipVerify:
        type: boolean
      label:
        additionalProperties:
          type: string
        type: object
      mtls:
        $ref: '#/definitions/infra_v2.MTLSConfiguration'
      name:
        type: string
      nodeSelector:
        additionalProperties:
          type: string
        type: object
      proxy:
        $ref: '#/definitions/infra_v2.ProxyConfiguration'
      runAsGroup:
        type: integer
      runAsUser:
        type: integer
      serviceAccount:
        type: string
      sidecarContainers:
        type: string
      tags:
        items:
          type: string
        type: array
      tolerations:
        items:
          $ref: '#/definitions/v1.Toleration'
        type: array
      volumeMounts:
        items:
          $ref: '#/definitions/v1.VolumeMount'
        type: array
      volumes:
        items:
          $ref: '#/definitions/v1.Volume'
        type: array
    type: object
  infra_v2.UpdateKubernetesInfrastructureV2Response:
    properties:
      correlationId:
        type: string
      message:
        type: string
    type: object
  infra_v2.UpdateStatus:
    enum:
      - AVAILABLE
      - MANDATORY
      - NOT_REQUIRED
    type: string
    x-enum-varnames:
      - UpdateStatusAvailable
      - UpdateStatusMandatory
      - UpdateStatusNotRequired
  infra_v2.Upgrade:
    properties:
      isAutoUpgradeEnabled:
        type: boolean
      status:
        $ref: '#/definitions/infra_v2.UpgradeStatus'
    type: object
  infra_v2.UpgradeStatus:
    enum:
      - UPGRADING_INFRA
      - UPGRADE_SKIPPED
      - UPGRADE_SUCCESSFUL
      - UPGRADE_FAILED
      - DETECTING_UPGRADER
      - UPGRADER_DISABLED
    type: string
    x-enum-varnames:
      - UpgradeStatusUpgrading
      - UpgradeStatusSkipped
      - UpgradeStatusSuccessful
      - UpgradeStatusFailed
      - UpgradeStatusDetecting
      - UpgradeStatusDisabled
  infra_v2.UserDetails:
    properties:
      email:
        type: string
      name:
        type: string
      username:
        type: string
    type: object
  intstr.IntOrString:
    properties:
      intVal:
        type: integer
      strVal:
        type: string
      type:
        $ref: '#/definitions/intstr.Type'
    type: object
  intstr.Type:
    enum:
      - 0
      - 1
    type: integer
    x-enum-comments:
      Int: The IntOrString holds an int.
      String: The IntOrString holds a string.
    x-enum-varnames:
      - Int
      - String
  k8s_io_apimachinery_pkg_apis_meta_v1.ConditionStatus:
    enum:
      - "True"
      - "False"
      - Unknown
    type: string
    x-enum-varnames:
      - ConditionTrue
      - ConditionFalse
      - ConditionUnknown
  model.ClusterType:
    enum:
      - KUBERNETES
      - OPENSHIFT
      - HELM
    type: string
    x-enum-varnames:
      - ClusterTypeKubernetes
      - ClusterTypeOpenshift
      - ClusterTypeHelm
  model.EventMetadata:
    properties:
      environmentIdentifier:
        items:
          type: string
        type: array
      faultName:
        type: string
      serviceIdentifier:
        items:
          type: string
        type: array
    type: object
  model.InfraScope:
    enum:
      - namespace
      - cluster
    type: string
    x-enum-varnames:
      - InfraScopeNamespace
      - InfraScopeCluster
  model.InfrastructureType:
    enum:
      - Kubernetes
      - KubernetesV2
      - Windows
      - Linux
      - CloudFoundry
    type: string
    x-enum-varnames:
      - InfrastructureTypeKubernetes
      - InfrastructureTypeKubernetesV2
      - InfrastructureTypeWindows
      - InfrastructureTypeLinux
      - InfrastructureTypeCloudFoundry
  model.InstallationType:
    enum:
      - CONNECTOR
      - MANIFEST
      - CONNECTORV2
    type: string
    x-enum-varnames:
      - InstallationTypeConnector
      - InstallationTypeManifest
      - InstallationTypeConnectorv2
  model.KubernetesInfra:
    properties:
      clusterType:
        allOf:
          - $ref: '#/definitions/model.ClusterType'
        description: Cluster type Indicates the type on infrastructure (Kubernetes/openshift)
      createdAt:
        description: Timestamp when the infra was created
        type: string
      createdBy:
        allOf:
          - $ref: '#/definitions/github_com_harness_hce-saas_graphql_server_graph_model.UserDetails'
        description: User who created the infra
      description:
        description: Description of the infra
        type: string
      environmentID:
        description: Environment ID for the infra
        type: string
      infraID:
        description: ID of the infra
        type: string
      infraNamespace:
        description: Namespace where the infra is being installed
        type: string
      infraNsExists:
        description: Bool value indicating whether infra ns used already exists on
          infra or not
        type: boolean
      infraSaExists:
        description: Bool value indicating whether service account used already exists
          on infra or not
        type: boolean
      infraScope:
        allOf:
          - $ref: '#/definitions/model.InfraScope'
        description: 'Scope of the infra : ns or cluster'
      infraType:
        allOf:
          - $ref: '#/definitions/model.InfrastructureType'
        description: Type of the infrastructure
      installationType:
        allOf:
          - $ref: '#/definitions/model.InstallationType'
        description: InstallationType connector/manifest
      isActive:
        description: Boolean value indicating if chaos infrastructure is active or
          not
        type: boolean
      isInfraConfirmed:
        description: Boolean value indicating if chaos infrastructure is confirmed
          or not
        type: boolean
      isRemoved:
        description: Boolean value indicating if chaos infrastructure is removed or
          not
        type: boolean
      isSecretEnabled:
        description: Tune secret for infra
        type: boolean
      k8sConnectorID:
        description: K8sConnectorID
        type: string
      lastHeartbeat:
        description: Last Heartbeat status sent by the infra
        type: string
      lastWorkflowTimestamp:
        description: Timestamp of the last workflow run in the infra
        type: string
      name:
        description: Name of the infra
        type: string
      noOfSchedules:
        description: Number of schedules created in the infra
        type: integer
      noOfWorkflows:
        description: Number of workflows run in the infra
        type: integer
      platformName:
        description: Infra Platform Name eg. GKE,AWS, Others
        type: string
      runAsGroup:
        description: set the user group for security context in pod
        type: integer
      runAsUser:
        description: set the user for security context in pod
        type: integer
      serviceAccount:
        description: Name of service account used by infra
        type: string
      startTime:
        description: Timestamp when the infra got connected
        type: string
      tags:
        description: Tags of the infra
        items:
          type: string
        type: array
      token:
        description: Token used to verify and retrieve the infra manifest
        type: string
      updateStatus:
        allOf:
          - $ref: '#/definitions/model.UpdateStatus'
        description: update status of infra
      updatedAt:
        description: Timestamp when the infra was last updated
        type: string
      updatedBy:
        allOf:
          - $ref: '#/definitions/github_com_harness_hce-saas_graphql_server_graph_model.UserDetails'
        description: User who has updated the infra
      upgrade:
        allOf:
          - $ref: '#/definitions/model.Upgrade'
        description: Upgrade struct for the chaos infrastructure
      version:
        description: Version of the infra
        type: string
    type: object
  model.ListInfraRequest:
    properties:
      environmentIDs:
        description: Environment ID
        items:
          type: string
        type: array
      filter:
        allOf:
          - $ref: '#/definitions/github_com_harness_hce-saas_graphql_server_graph_model.InfraFilterInput'
        description: Details for fetching filtered data
      infraIDs:
        description: Array of infra IDs for which details will be fetched
        items:
          type: string
        type: array
      k8sConnectorIDs:
        description: Connector ID
        items:
          type: string
        type: array
      pagination:
        allOf:
          - $ref: '#/definitions/github_com_harness_hce-saas_graphql_server_graph_model.Pagination'
        description: Details for fetching paginated data
    type: object
  model.ListInfraResponse:
    properties:
      infras:
        description: Details related to the infras
        items:
          $ref: '#/definitions/model.KubernetesInfra'
        type: array
      totalNoOfInfras:
        description: Total number of infras
        type: integer
    type: object
  model.ReRunChaosWorkflowResponse:
    properties:
      notifyID:
        type: string
    type: object
  model.RecentWorkflowRun:
    properties:
      createdAt:
        description: Timestamp when the workflow was created
        type: string
      createdBy:
        allOf:
          - $ref: '#/definitions/github_com_harness_hce-saas_graphql_server_graph_model.UserDetails'
        description: User who created the workflow run
      notifyID:
        description: Notify ID for workflow run
        type: string
      phase:
        description: Phase of the workflow run
        type: string
      resiliencyScore:
        description: Resiliency score of the workflow
        type: number
      runSequence:
        description: runSequence is the sequence number of experiment run
        type: integer
      updatedAt:
        description: Timestamp when the workflow was last updated
        type: string
      updatedBy:
        allOf:
          - $ref: '#/definitions/github_com_harness_hce-saas_graphql_server_graph_model.UserDetails'
        description: User who updated the workflow run
      workflowRunID:
        description: ID of the workflow run which is to be queried
        type: string
    type: object
  model.UpdateStatus:
    enum:
      - AVAILABLE
      - MANDATORY
      - NOT_REQUIRED
    type: string
    x-enum-varnames:
      - UpdateStatusAvailable
      - UpdateStatusMandatory
      - UpdateStatusNotRequired
  model.Upgrade:
    properties:
      isAutoUpgradeEnabled:
        type: boolean
      status:
        $ref: '#/definitions/model.UpgradeStatus'
    type: object
  model.UpgradeStatus:
    enum:
      - UPGRADING_INFRA
      - UPGRADE_SKIPPED
      - UPGRADE_SUCCESSFUL
      - UPGRADE_FAILED
      - DETECTING_UPGRADER
      - UPGRADER_DISABLED
    type: string
    x-enum-varnames:
      - UpgradeStatusUpgradingInfra
      - UpgradeStatusUpgradeSkipped
      - UpgradeStatusUpgradeSuccessful
      - UpgradeStatusUpgradeFailed
      - UpgradeStatusDetectingUpgrader
      - UpgradeStatusUpgraderDisabled
  model.WorkflowRunStatus:
    enum:
      - All
      - Running
      - Completed
      - Completed_With_Error
      - Completed_With_Probe_Failure
      - Stopped
      - Skipped
      - Error
      - Timeout
      - NA
      - Queued
      - Blocked
    type: string
    x-enum-varnames:
      - WorkflowRunStatusAll
      - WorkflowRunStatusRunning
      - WorkflowRunStatusCompleted
      - WorkflowRunStatusCompletedWithError
      - WorkflowRunStatusCompletedWithProbeFailure
      - WorkflowRunStatusStopped
      - WorkflowRunStatusSkipped
      - WorkflowRunStatusError
      - WorkflowRunStatusTimeout
      - WorkflowRunStatusNa
      - WorkflowRunStatusQueued
      - WorkflowRunStatusBlocked
  model.WorkflowType:
    enum:
      - All
      - GamedayWorkflow
      - Workflow
      - CronWorkflow
      - ChaosEngine
      - ChaosSchedule
    type: string
    x-enum-varnames:
      - WorkflowTypeAll
      - WorkflowTypeGamedayWorkflow
      - WorkflowTypeWorkflow
      - WorkflowTypeCronWorkflow
      - WorkflowTypeChaosEngine
      - WorkflowTypeChaosSchedule
  networkmap.CanRetryExperimentCreationResponse:
    properties:
      result:
        type: boolean
    type: object
  networkmap.GetTargetNetworkMapResponse:
    properties:
      accountID:
        type: string
      agentIdentity:
        type: string
      averageResiliencyScore:
        type: number
      connections:
        items:
          $ref: '#/definitions/database.Connection'
        type: array
      createdAt:
        type: integer
      createdBy:
        type: string
      environmentRef:
        type: string
      errorMessage:
        type: string
      experimentCreationMode:
        $ref: '#/definitions/targetnetworkmap.ExperimentCreationMode'
      id:
        type: string
      identity:
        type: string
      infrastructureId:
        type: string
      isRemoved:
        type: boolean
      name:
        type: string
      onboardingID:
        type: string
      orgID:
        type: string
      projectID:
        type: string
      recentExperimentRunsDetails:
        items:
          $ref: '#/definitions/targetnetworkmap.ExperimentRunDetail'
        type: array
      resiliencyCoverage:
        type: number
      serviceIDs:
        items:
          type: string
        type: array
      services:
        items:
          $ref: '#/definitions/networkmap.TargetServiceDetails'
        type: array
      status:
        $ref: '#/definitions/targetnetworkmap.Status'
      targetNetworkMapID:
        type: string
      totalExperimentCount:
        type: integer
      totalExperimentRunCount:
        type: integer
      updatedAt:
        type: integer
      updatedBy:
        type: string
    type: object
  networkmap.GetTargetServiceResponse:
    properties:
      chaosDetails:
        $ref: '#/definitions/targetservice.TargetService'
      discoveryDetails:
        $ref: '#/definitions/database.ServiceCollection'
      workloadDetails:
        $ref: '#/definitions/database.DiscoveredServiceKubernetesSpec'
    type: object
  networkmap.ListTargetNetworkMapRequest:
    type: object
  networkmap.ListTargetNetworkMapResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/targetnetworkmap.TargetNetworkMap'
        type: array
      page:
        $ref: '#/definitions/github_com_harness_hce-saas_graphql_server_api.Pagination'
    type: object
  networkmap.ListTargetService:
    properties:
      chaosDetails:
        $ref: '#/definitions/targetservice.TargetService'
      discoveryDetails:
        $ref: '#/definitions/database.DiscoveredServiceCollection'
    type: object
  networkmap.ListTargetServiceResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/networkmap.ListTargetService'
        type: array
      page:
        $ref: '#/definitions/github_com_harness_hce-saas_graphql_server_api.Pagination'
    type: object
  networkmap.RetryExperimentCreationRequest:
    properties:
      mode:
        $ref: '#/definitions/targetnetworkmap.ExperimentCreationMode'
    type: object
  networkmap.RetryExperimentCreationResponse:
    type: object
  networkmap.TargetServiceDetails:
    properties:
      averageResiliencyScore:
        type: number
      id:
        type: string
      name:
        type: string
      namespace:
        type: string
      resiliencyCoverage:
        type: number
    type: object
  pipelines.ChaosPipelineInput:
    properties:
      description:
        type: string
      experimentSpec:
        items:
          $ref: '#/definitions/pipelines.ExperimentSpec'
        type: array
      identifier:
        type: string
      name:
        type: string
      tags:
        additionalProperties:
          type: string
        type: object
    type: object
  pipelines.CreatePipelineResponse:
    properties:
      code:
        type: string
      correlationId:
        type: string
      data:
        properties:
          identifier:
            type: string
        type: object
      message:
        type: string
      metaData: {}
      status:
        type: string
    type: object
  pipelines.ExperimentSpec:
    properties:
      expectedResilienceScore:
        type: number
      experimentID:
        type: string
      experimentName:
        type: string
    type: object
  resource.Quantity:
    properties:
      Format:
        enum:
          - DecimalExponent
          - BinarySI
          - DecimalSI
        type: string
        x-enum-comments:
          BinarySI: e.g., 12Mi (12 * 2^20)
          DecimalExponent: e.g., 12e6
          DecimalSI: e.g., 12M  (12 * 10^6)
        x-enum-varnames:
          - DecimalExponent
          - BinarySI
          - DecimalSI
    type: object
  security_governance.ApplicationSpec:
    properties:
      operator:
        $ref: '#/definitions/security_governance.Operator'
      workloads:
        items:
          $ref: '#/definitions/security_governance.Workload'
        type: array
    type: object
  security_governance.ChaosServiceAccountSpec:
    properties:
      operator:
        $ref: '#/definitions/security_governance.Operator'
      serviceAccounts:
        items:
          type: string
        type: array
    type: object
  security_governance.Condition:
    properties:
      conditionId:
        type: string
      description:
        type: string
      faultSpec:
        $ref: '#/definitions/security_governance.FaultSpec'
      infraType:
        $ref: '#/definitions/security_governance.InfraType'
      k8sSpec:
        $ref: '#/definitions/security_governance.K8sSpec'
      machineSpec:
        $ref: '#/definitions/security_governance.MachineSpec'
      name:
        type: string
      tags:
        items:
          type: string
        type: array
    type: object
  security_governance.Fault:
    properties:
      faultType:
        $ref: '#/definitions/security_governance.FaultType'
      name:
        type: string
    type: object
  security_governance.FaultSpec:
    properties:
      faults:
        items:
          $ref: '#/definitions/security_governance.Fault'
        type: array
      operator:
        $ref: '#/definitions/security_governance.Operator'
    type: object
  security_governance.FaultType:
    enum:
      - FAULT_GROUP
      - FAULT_NAME
    type: string
    x-enum-varnames:
      - FAULT_GROUP
      - FAULT_NAME
  security_governance.InfraSpec:
    properties:
      infraIds:
        items:
          type: string
        type: array
      operator:
        $ref: '#/definitions/security_governance.Operator'
    type: object
  security_governance.InfraType:
    enum:
      - Kubernetes
      - KubernetesV2
      - Linux
      - Windows
    type: string
    x-enum-varnames:
      - KUBERNETES
      - KUBERNETESV2
      - Linux
      - Windows
  security_governance.K8sSpec:
    properties:
      applicationSpec:
        $ref: '#/definitions/security_governance.ApplicationSpec'
      chaosServiceAccountSpec:
        $ref: '#/definitions/security_governance.ChaosServiceAccountSpec'
      infraSpec:
        $ref: '#/definitions/security_governance.InfraSpec'
    type: object
  security_governance.MachineSpec:
    properties:
      infraSpec:
        $ref: '#/definitions/security_governance.InfraSpec'
    type: object
  security_governance.Operator:
    enum:
      - EQUAL_TO
      - NOT_EQUAL_TO
    type: string
    x-enum-varnames:
      - EQUAL_TO
      - NOT_EQUAL_TO
  security_governance.Workload:
    properties:
      applicationMapId:
        type: string
      kind:
        type: string
      label:
        type: string
      namespace:
        type: string
      services:
        items:
          type: string
        type: array
    type: object
  targetnetworkmap.ExperimentCreationMode:
    enum:
      - Basic
      - Intermediate
      - Advanced
    type: string
    x-enum-varnames:
      - BasicExperimentCreation
      - IntermediateExperimentCreation
      - AdvancedExperimentCreation
  targetnetworkmap.ExperimentRunDetail:
    properties:
      completed:
        type: boolean
      createdAt:
        type: integer
      createdBy:
        type: string
      experimentRunID:
        type: string
      isRemoved:
        type: boolean
      name:
        type: string
      notifyID:
        type: string
      phase:
        type: string
      resiliencyScore:
        type: number
      targetService:
        items:
          $ref: '#/definitions/targetservice.ServiceMetadata'
        type: array
      updatedAt:
        type: integer
      updatedBy:
        type: string
    type: object
  targetnetworkmap.Status:
    enum:
      - COMPLETED
      - RUNNING
      - PENDING
      - ERRORED
    type: string
    x-enum-varnames:
      - COMPLETED
      - RUNNING
      - PENDING
      - ERRORED
  targetnetworkmap.TargetNetworkMap:
    properties:
      accountID:
        type: string
      agentIdentity:
        type: string
      averageResiliencyScore:
        type: number
      createdAt:
        type: integer
      createdBy:
        type: string
      environmentRef:
        type: string
      errorMessage:
        type: string
      experimentCreationMode:
        $ref: '#/definitions/targetnetworkmap.ExperimentCreationMode'
      id:
        type: string
      identity:
        type: string
      infrastructureId:
        type: string
      isRemoved:
        type: boolean
      name:
        type: string
      onboardingID:
        type: string
      orgID:
        type: string
      projectID:
        type: string
      recentExperimentRunsDetails:
        items:
          $ref: '#/definitions/targetnetworkmap.ExperimentRunDetail'
        type: array
      resiliencyCoverage:
        type: number
      serviceIDs:
        items:
          type: string
        type: array
      status:
        $ref: '#/definitions/targetnetworkmap.Status'
      targetNetworkMapID:
        type: string
      totalExperimentCount:
        type: integer
      totalExperimentRunCount:
        type: integer
      updatedAt:
        type: integer
      updatedBy:
        type: string
    type: object
  targetservice.DiscoveredServiceSpec:
    properties:
      id:
        type: string
      kind:
        type: string
      label:
        additionalProperties:
          type: string
        type: object
      name:
        type: string
      namespace:
        type: string
      uuid:
        type: string
    type: object
  targetservice.ServiceMetadata:
    properties:
      id:
        type: string
      name:
        type: string
      namespace:
        type: string
      uid:
        type: string
    type: object
  targetservice.ServiceSpec:
    properties:
      discoveredService:
        $ref: '#/definitions/targetservice.DiscoveredServiceSpec'
    type: object
  targetservice.ServiceType:
    enum:
      - DiscoveredService
      - UnAccounted
    type: string
    x-enum-varnames:
      - DiscoveredService
      - UnAccounted
  targetservice.TargetService:
    properties:
      accountID:
        type: string
      averageResiliencyScore:
        type: number
      createdAt:
        type: integer
      createdBy:
        type: string
      environmentRef:
        type: string
      externalId:
        type: string
      id:
        type: string
      infrastructureId:
        type: string
      isRemoved:
        type: boolean
      licenseId:
        type: string
      name:
        type: string
      orgID:
        type: string
      projectID:
        type: string
      resiliencyCoverage:
        type: number
      spec:
        $ref: '#/definitions/targetservice.ServiceSpec'
      totalExperimentCount:
        type: integer
      type:
        $ref: '#/definitions/targetservice.ServiceType'
      updatedAt:
        type: integer
      updatedBy:
        type: string
    type: object
  types.ActionItem:
    properties:
      createdAt:
        type: integer
      id:
        type: string
      item:
        type: string
      user:
        $ref: '#/definitions/github_com_harness_hce-saas_graphql_server_graph_model.UserDetails'
    type: object
  types.CreateGamedayRequest:
    properties:
      experiments:
        items:
          $ref: '#/definitions/types.ExperimentRequest'
        type: array
      gameDayID:
        type: string
      gamedayDescription:
        type: string
      gamedayName:
        type: string
      objective:
        type: string
      prerequisites:
        items:
          $ref: '#/definitions/types.Prerequisite'
        type: array
      stakeholders:
        items:
          $ref: '#/definitions/types.StakeHolderInput'
        type: array
    type: object
  types.CreateGamedayResponse:
    properties:
      data:
        $ref: '#/definitions/types.CreateGamedayRequest'
    type: object
  types.CreateGamedayRunResponse:
    properties:
      data:
        $ref: '#/definitions/types.Run'
      experimentError:
        items:
          $ref: '#/definitions/types.ExperimentCreationError'
        type: array
    type: object
  types.CreateNoteRequest:
    properties:
      comment:
        type: string
      experimentID:
        type: string
      experimentRunID:
        type: string
      gamedayRunID:
        type: string
      type:
        $ref: '#/definitions/chaosresourcenotes.NoteType'
    type: object
  types.CreateNoteResponse:
    properties:
      data:
        $ref: '#/definitions/types.CreateNoteRequest'
    type: object
  types.DeleteChaosV2ExperimentResponse:
    properties:
      experimentId:
        type: string
      experimentName:
        type: string
      isDeleted:
        type: boolean
    type: object
  types.ExperimentCreationError:
    properties:
      error:
        type: string
      experimentName:
        type: string
    type: object
  types.ExperimentCreationRequest:
    properties:
      cronSyntax:
        type: string
      description:
        type: string
      eventsMetadata:
        items:
          $ref: '#/definitions/model.EventMetadata'
        type: array
      experimentType:
        $ref: '#/definitions/model.WorkflowType'
      id:
        type: string
      infraId:
        type: string
      infraType:
        $ref: '#/definitions/model.InfrastructureType'
      manifest:
        type: string
      name:
        type: string
      recommendation:
        $ref: '#/definitions/chaos_experiment.Recommendation'
      tags:
        items:
          type: string
        type: array
      validateManifest:
        type: boolean
    type: object
  types.ExperimentCreationResponse:
    properties:
      auditAction:
        $ref: '#/definitions/experiment.SaveChaosExperimentResponse'
      data:
        $ref: '#/definitions/types.ExperimentCreationRequest'
    type: object
  types.ExperimentRequest:
    properties:
      environmentID:
        type: string
      experimentID:
        type: string
      experimentTemplateName:
        type: string
      hubID:
        type: string
      infraID:
        type: string
      infraType:
        $ref: '#/definitions/model.InfrastructureType'
    type: object
  types.ExperimentRuns:
    properties:
      chaosInfraID:
        type: string
      environmentID:
        type: string
      experimentCsv:
        type: string
      experimentID:
        type: string
      experimentManifest:
        type: string
      experimentTemplateName:
        type: string
      hubID:
        type: string
      infraType:
        $ref: '#/definitions/model.InfrastructureType'
      lastRunNotifyID:
        type: string
    type: object
  types.ExperimentV2:
    properties:
      createdAt:
        type: string
      createdBy:
        $ref: '#/definitions/github_com_harness_hce-saas_graphql_server_graph_model.UserDetails'
      cronSyntax:
        type: string
      description:
        type: string
      eventsMetadata:
        items:
          $ref: '#/definitions/model.EventMetadata'
        type: array
      identifiers:
        $ref: '#/definitions/github_com_harness_hce-saas_graphql_server_graph_model.Identifiers'
      infra:
        $ref: '#/definitions/chaos_infrastructure_v2.ChaosInfraV2'
      isCronEnabled:
        type: boolean
      isCustomWorkflow:
        type: boolean
      isRemoved:
        type: boolean
      lastExecutedAt:
        type: string
      name:
        type: string
      recentWorkflowRunDetails:
        items:
          $ref: '#/definitions/model.RecentWorkflowRun'
        type: array
      recommendation:
        $ref: '#/definitions/chaos_experiment.Recommendation'
      tags:
        items:
          type: string
        type: array
      targetNetworkService:
        items:
          $ref: '#/definitions/targetservice.ServiceMetadata'
        type: array
      updatedAt:
        type: string
      updatedBy:
        $ref: '#/definitions/github_com_harness_hce-saas_graphql_server_graph_model.UserDetails'
      weightages:
        items:
          $ref: '#/definitions/types.Weightages'
        type: array
      workflowID:
        type: string
      workflowManifest:
        type: string
      workflowType:
        type: string
    type: object
  types.GamedayInfraDetails:
    properties:
      environmentID:
        type: string
      infraID:
        type: string
      infraType:
        $ref: '#/definitions/model.InfrastructureType'
      name:
        type: string
    type: object
  types.GamedayV2:
    properties:
      createdAt:
        type: string
      createdBy:
        $ref: '#/definitions/github_com_harness_hce-saas_graphql_server_graph_model.UserDetails'
      description:
        type: string
      experiments:
        items:
          $ref: '#/definitions/types.ListGamedayExperimentResponse'
        type: array
      gameDayID:
        type: string
      identifiers:
        $ref: '#/definitions/github_com_harness_hce-saas_graphql_server_graph_model.Identifiers'
      isRemoved:
        type: boolean
      name:
        type: string
      objective:
        type: string
      prerequisites:
        items:
          $ref: '#/definitions/types.Prerequisite'
        type: array
      recentGamedayRuns:
        items:
          $ref: '#/definitions/types.RecentGamedayRun'
        type: array
      stakeholders:
        items:
          $ref: '#/definitions/types.StakeHolderResponse'
        type: array
      tags:
        items:
          type: string
        type: array
      updatedAt:
        type: string
      updatedBy:
        $ref: '#/definitions/github_com_harness_hce-saas_graphql_server_graph_model.UserDetails'
    type: object
  types.GetExperimentV2Response:
    properties:
      averageResiliencyScore:
        type: number
      experimentDetails:
        $ref: '#/definitions/types.ExperimentV2'
    type: object
  types.GetGamedayExperimentResponse:
    properties:
      experimentCsv:
        type: string
      experimentID:
        type: string
      experimentManifest:
        type: string
      experimentTemplateName:
        type: string
      hubID:
        type: string
      infra:
        $ref: '#/definitions/types.GamedayInfraDetails'
    type: object
  types.GetGamedayResponse:
    properties:
      createdAt:
        type: string
      createdBy:
        $ref: '#/definitions/github_com_harness_hce-saas_graphql_server_graph_model.UserDetails'
      description:
        type: string
      experiments:
        items:
          $ref: '#/definitions/types.GetGamedayExperimentResponse'
        type: array
      gameDayID:
        type: string
      identifiers:
        $ref: '#/definitions/github_com_harness_hce-saas_graphql_server_graph_model.Identifiers'
      isRemoved:
        type: boolean
      name:
        type: string
      objective:
        type: string
      prerequisites:
        items:
          $ref: '#/definitions/types.Prerequisite'
        type: array
      stakeholders:
        items:
          $ref: '#/definitions/types.StakeHolderResponse'
        type: array
      tags:
        items:
          type: string
        type: array
      totalGamedayRuns:
        type: integer
      updatedAt:
        type: string
      updatedBy:
        $ref: '#/definitions/github_com_harness_hce-saas_graphql_server_graph_model.UserDetails'
    type: object
  types.ListExperimentV2Response:
    properties:
      data:
        items:
          $ref: '#/definitions/types.ExperimentV2'
        type: array
      pagination:
        $ref: '#/definitions/github_com_harness_hce-saas_graphql_server_api.Pagination'
    type: object
  types.ListGamedayExperimentResponse:
    properties:
      environmentID:
        type: string
      experimentID:
        type: string
      experimentTemplateName:
        type: string
      hubID:
        type: string
      infraID:
        type: string
      infraType:
        $ref: '#/definitions/model.InfrastructureType'
    type: object
  types.ListGamedayRunV2Response:
    properties:
      data:
        items:
          $ref: '#/definitions/types.Run'
        type: array
    type: object
  types.ListGamedayV2Response:
    properties:
      data:
        items:
          $ref: '#/definitions/types.GamedayV2'
        type: array
      pagination:
        $ref: '#/definitions/github_com_harness_hce-saas_graphql_server_api.Pagination'
    type: object
  types.Note:
    properties:
      comment:
        type: string
      createdAt:
        type: integer
      noteId:
        type: string
      updatedAt:
        type: integer
      user:
        $ref: '#/definitions/github_com_harness_hce-saas_graphql_server_graph_model.UserDetails'
    type: object
  types.Notes:
    properties:
      experimentID:
        type: string
      experimentRunID:
        type: string
      gamedayRunID:
        type: string
      id:
        type: string
      identifiers:
        $ref: '#/definitions/github_com_harness_hce-saas_graphql_server_graph_model.Identifiers'
      notes:
        items:
          $ref: '#/definitions/types.Note'
        type: array
      type:
        $ref: '#/definitions/chaosresourcenotes.NoteType'
    type: object
  types.Prerequisite:
    properties:
      actionItem:
        type: string
      description:
        type: string
      id:
        type: string
    type: object
  types.PrerequisiteForRun:
    properties:
      ID:
        type: string
      actionItem:
        type: string
      comment:
        type: string
      description:
        type: string
      status:
        $ref: '#/definitions/gamedayrunv2.PrerequisiteStatus'
    type: object
  types.RecentGamedayRun:
    properties:
      gameDayRunID:
        type: string
      name:
        type: string
      runAt:
        type: string
      runBy:
        $ref: '#/definitions/github_com_harness_hce-saas_graphql_server_graph_model.UserDetails'
      status:
        $ref: '#/definitions/gamedayv2.GamedayRunStatus'
    type: object
  types.Run:
    properties:
      createdAt:
        type: string
      createdBy:
        $ref: '#/definitions/github_com_harness_hce-saas_graphql_server_graph_model.UserDetails'
      experiments:
        items:
          $ref: '#/definitions/types.ExperimentRuns'
        type: array
      gameDayID:
        type: string
      gameDayRunID:
        type: string
      identifiers:
        $ref: '#/definitions/github_com_harness_hce-saas_graphql_server_graph_model.Identifiers'
      isRemoved:
        type: boolean
      name:
        type: string
      prerequisites:
        items:
          $ref: '#/definitions/types.PrerequisiteForRun'
        type: array
      stakeHolders:
        items:
          $ref: '#/definitions/types.StakeHolderDetailsForRuns'
        type: array
      startTime:
        description: after approval
        type: integer
      status:
        $ref: '#/definitions/gamedayv2.GamedayRunStatus'
      summary:
        $ref: '#/definitions/types.Summary'
      updatedAt:
        type: string
      updatedBy:
        $ref: '#/definitions/github_com_harness_hce-saas_graphql_server_graph_model.UserDetails'
    type: object
  types.StakeHolderDetailsForRuns:
    properties:
      approvalRequired:
        type: boolean
      approvalStatus:
        $ref: '#/definitions/gamedayrunv2.ApprovalStatus'
      lastUpdatedAt:
        type: integer
      lastUpdatedBy:
        $ref: '#/definitions/github_com_harness_hce-saas_graphql_server_graph_model.UserDetails'
      notes:
        type: string
      role:
        $ref: '#/definitions/gamedayv2.StakeHolderRole'
      user:
        $ref: '#/definitions/github_com_harness_hce-saas_graphql_server_graph_model.UserDetails'
    type: object
  types.StakeHolderInput:
    properties:
      approvalRequired:
        type: boolean
      role:
        $ref: '#/definitions/types.StakeHolderRole'
      userID:
        type: string
    type: object
  types.StakeHolderResponse:
    properties:
      approvalRequired:
        type: boolean
      role:
        $ref: '#/definitions/types.StakeHolderRole'
      user:
        $ref: '#/definitions/github_com_harness_hce-saas_graphql_server_graph_model.UserDetails'
    type: object
  types.StakeHolderRole:
    enum:
      - coordinator
      - triage_engineer
      - attendee
      - others
    type: string
    x-enum-varnames:
      - Coordinator
      - TriageEngineer
      - Attendee
      - Others
  types.StopChaosV2ExperimentResponse:
    properties:
      experimentId:
        type: string
      experimentName:
        type: string
      isStopped:
        type: boolean
    type: object
  types.Summary:
    properties:
      actionItems:
        items:
          $ref: '#/definitions/types.ActionItem'
        type: array
      avgResiliencyScore:
        type: number
      totalCompletedRuns:
        type: integer
      totalCompletedWithErrRuns:
        type: integer
      totalSuspendedRuns:
        type: integer
    type: object
  types.UpdateCronExperimentAction:
    enum:
      - Enable
      - Disable
      - Update
    type: string
    x-enum-varnames:
      - UpdateCronExperimentActionEnable
      - UpdateCronExperimentActionDisable
      - UpdateCronExperimentActionUpdate
  types.UpdateCronExperimentStateRequest:
    properties:
      action:
        $ref: '#/definitions/types.UpdateCronExperimentAction'
      cronSyntax:
        type: string
      experimentIDs:
        items:
          type: string
        type: array
    type: object
  types.UpdateCronExperimentStateResponse:
    properties:
      failedIDs:
        items:
          type: string
        type: array
      successIDs:
        items:
          type: string
        type: array
    type: object
  types.UpdateGameDayRunRequest:
    properties:
      actionItems:
        items:
          type: string
        type: array
      gameDayRunID:
        type: string
      status:
        $ref: '#/definitions/gamedayv2.GamedayRunStatus'
    type: object
  types.UpdateGamedayRequest:
    properties:
      experiments:
        items:
          $ref: '#/definitions/types.ExperimentRequest'
        type: array
      gameDayID:
        type: string
      gamedayDescription:
        type: string
      gamedayName:
        type: string
      isRemoved:
        type: boolean
      objective:
        type: string
      prerequisites:
        items:
          $ref: '#/definitions/types.Prerequisite'
        type: array
      stakeholders:
        items:
          $ref: '#/definitions/types.StakeHolderInput'
        type: array
    type: object
  types.UpdateNoteRequest:
    properties:
      comment:
        type: string
      experimentID:
        type: string
      experimentRunID:
        type: string
      gamedayRunID:
        type: string
      noteId:
        type: string
      operation:
        $ref: '#/definitions/types.UpdateOperation'
      type:
        $ref: '#/definitions/chaosresourcenotes.NoteType'
    type: object
  types.UpdateOperation:
    enum:
      - delete
      - update
    type: string
    x-enum-varnames:
      - OperationDelete
      - OperationUpdate
  types.UpdatePrerequisiteRequest:
    properties:
      ID:
        type: string
      comment:
        type: string
      status:
        $ref: '#/definitions/gamedayrunv2.PrerequisiteStatus'
    type: object
  types.UpdateStakeHolderActionRequest:
    properties:
      approvalStatus:
        $ref: '#/definitions/gamedayrunv2.ApprovalStatus'
      notes:
        type: string
      userID:
        type: string
    type: object
  types.Weightages:
    properties:
      experimentName:
        type: string
      weightage:
        type: integer
    type: object
  v1.AWSElasticBlockStoreVolumeSource:
    properties:
      fsType:
        description: |-
          Filesystem type of the volume that you want to mount.
          Tip: Ensure that the filesystem type is supported by the host operating system.
          Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
          TODO: how do we prevent errors in the filesystem from compromising the machine
          +optional
        type: string
      partition:
        description: |-
          The partition in the volume that you want to mount.
          If omitted, the default is to mount by volume name.
          Examples: For volume /dev/sda1, you specify the partition as "1".
          Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
          +optional
        type: integer
      readOnly:
        description: |-
          Specify "true" to force and set the ReadOnly property in VolumeMounts to "true".
          If omitted, the default is "false".
          More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
          +optional
        type: boolean
      volumeID:
        description: |-
          Unique ID of the persistent disk resource in AWS (Amazon EBS volume).
          More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
        type: string
    type: object
  v1.AzureDataDiskCachingMode:
    enum:
      - None
      - ReadOnly
      - ReadWrite
    type: string
    x-enum-varnames:
      - AzureDataDiskCachingNone
      - AzureDataDiskCachingReadOnly
      - AzureDataDiskCachingReadWrite
  v1.AzureDataDiskKind:
    enum:
      - Shared
      - Dedicated
      - Managed
    type: string
    x-enum-varnames:
      - AzureSharedBlobDisk
      - AzureDedicatedBlobDisk
      - AzureManagedDisk
  v1.AzureDiskVolumeSource:
    properties:
      cachingMode:
        allOf:
          - $ref: '#/definitions/v1.AzureDataDiskCachingMode'
        description: |-
          Host Caching mode: None, Read Only, Read Write.
          +optional
      diskName:
        description: The Name of the data disk in the blob storage
        type: string
      diskURI:
        description: The URI the data disk in the blob storage
        type: string
      fsType:
        description: |-
          Filesystem type to mount.
          Must be a filesystem type supported by the host operating system.
          Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
          +optional
        type: string
      kind:
        allOf:
          - $ref: '#/definitions/v1.AzureDataDiskKind'
        description: 'Expected values Shared: multiple blob disks per storage account  Dedicated:
          single blob disk per storage account  Managed: azure managed data disk (only
          in managed availability set). defaults to shared'
      readOnly:
        description: |-
          Defaults to false (read/write). ReadOnly here will force
          the ReadOnly setting in VolumeMounts.
          +optional
        type: boolean
    type: object
  v1.AzureFileVolumeSource:
    properties:
      readOnly:
        description: |-
          Defaults to false (read/write). ReadOnly here will force
          the ReadOnly setting in VolumeMounts.
          +optional
        type: boolean
      secretName:
        description: the name of secret that contains Azure Storage Account Name and
          Key
        type: string
      shareName:
        description: Share Name
        type: string
    type: object
  v1.CSIVolumeSource:
    properties:
      driver:
        description: |-
          Driver is the name of the CSI driver that handles this volume.
          Consult with your admin for the correct name as registered in the cluster.
        type: string
      fsType:
        description: |-
          Filesystem type to mount. Ex. "ext4", "xfs", "ntfs".
          If not provided, the empty value is passed to the associated CSI driver
          which will determine the default filesystem to apply.
          +optional
        type: string
      nodePublishSecretRef:
        allOf:
          - $ref: '#/definitions/v1.LocalObjectReference'
        description: |-
          NodePublishSecretRef is a reference to the secret object containing
          sensitive information to pass to the CSI driver to complete the CSI
          NodePublishVolume and NodeUnpublishVolume calls.
          This field is optional, and  may be empty if no secret is required. If the
          secret object contains more than one secret, all secret references are passed.
          +optional
      readOnly:
        description: |-
          Specifies a read-only configuration for the volume.
          Defaults to false (read/write).
          +optional
        type: boolean
      volumeAttributes:
        additionalProperties:
          type: string
        description: |-
          VolumeAttributes stores driver-specific properties that are passed to the CSI
          driver. Consult your driver's documentation for supported values.
          +optional
        type: object
    type: object
  v1.CephFSVolumeSource:
    properties:
      monitors:
        description: |-
          Required: Monitors is a collection of Ceph monitors
          More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
        items:
          type: string
        type: array
      path:
        description: |-
          Optional: Used as the mounted root, rather than the full Ceph tree, default is /
          +optional
        type: string
      readOnly:
        description: |-
          Optional: Defaults to false (read/write). ReadOnly here will force
          the ReadOnly setting in VolumeMounts.
          More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
          +optional
        type: boolean
      secretFile:
        description: |-
          Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret
          More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
          +optional
        type: string
      secretRef:
        allOf:
          - $ref: '#/definitions/v1.LocalObjectReference'
        description: |-
          Optional: SecretRef is reference to the authentication secret for User, default is empty.
          More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
          +optional
      user:
        description: |-
          Optional: User is the rados user name, default is admin
          More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
          +optional
        type: string
    type: object
  v1.CinderVolumeSource:
    properties:
      fsType:
        description: |-
          Filesystem type to mount.
          Must be a filesystem type supported by the host operating system.
          Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
          More info: https://examples.k8s.io/mysql-cinder-pd/README.md
          +optional
        type: string
      readOnly:
        description: |-
          Optional: Defaults to false (read/write). ReadOnly here will force
          the ReadOnly setting in VolumeMounts.
          More info: https://examples.k8s.io/mysql-cinder-pd/README.md
          +optional
        type: boolean
      secretRef:
        allOf:
          - $ref: '#/definitions/v1.LocalObjectReference'
        description: |-
          Optional: points to a secret object containing parameters used to connect
          to OpenStack.
          +optional
      volumeID:
        description: |-
          volume id used to identify the volume in cinder.
          More info: https://examples.k8s.io/mysql-cinder-pd/README.md
        type: string
    type: object
  v1.ClientIPConfig:
    properties:
      timeoutSeconds:
        description: |-
          timeoutSeconds specifies the seconds of ClientIP type session sticky time.
          The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP".
          Default value is 10800(for 3 hours).
          +optional
        type: integer
    type: object
  v1.Condition:
    properties:
      lastTransitionTime:
        description: |-
          lastTransitionTime is the last time the condition transitioned from one status to another.
          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
          +required
          +kubebuilder:validation:Required
          +kubebuilder:validation:Type=string
          +kubebuilder:validation:Format=date-time
        type: string
      message:
        description: |-
          message is a human readable message indicating details about the transition.
          This may be an empty string.
          +required
          +kubebuilder:validation:Required
          +kubebuilder:validation:MaxLength=32768
        type: string
      observedGeneration:
        description: |-
          observedGeneration represents the .metadata.generation that the condition was set based upon.
          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
          with respect to the current state of the instance.
          +optional
          +kubebuilder:validation:Minimum=0
        type: integer
      reason:
        description: |-
          reason contains a programmatic identifier indicating the reason for the condition's last transition.
          Producers of specific condition types may define expected values and meanings for this field,
          and whether the values are considered a guaranteed API.
          The value should be a CamelCase string.
          This field may not be empty.
          +required
          +kubebuilder:validation:Required
          +kubebuilder:validation:MaxLength=1024
          +kubebuilder:validation:MinLength=1
          +kubebuilder:validation:Pattern=`^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$`
        type: string
      status:
        allOf:
          - $ref: '#/definitions/k8s_io_apimachinery_pkg_apis_meta_v1.ConditionStatus'
        description: |-
          status of the condition, one of True, False, Unknown.
          +required
          +kubebuilder:validation:Required
          +kubebuilder:validation:Enum=True;False;Unknown
      type:
        description: |-
          type of condition in CamelCase or in foo.example.com/CamelCase.
          ---
          Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
          useful (see .node.status.conditions), the ability to deconflict is important.
          The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
          +required
          +kubebuilder:validation:Required
          +kubebuilder:validation:Pattern=`^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$`
          +kubebuilder:validation:MaxLength=316
        type: string
    type: object
  v1.ConfigMapEnvSource:
    properties:
      name:
        description: |-
          Name of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
          TODO: Add other useful fields. apiVersion, kind, uid?
          +optional
        type: string
      optional:
        description: |-
          Specify whether the ConfigMap must be defined
          +optional
        type: boolean
    type: object
  v1.ConfigMapKeySelector:
    properties:
      key:
        description: The key to select.
        type: string
      name:
        description: |-
          Name of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
          TODO: Add other useful fields. apiVersion, kind, uid?
          +optional
        type: string
      optional:
        description: |-
          Specify whether the ConfigMap or its key must be defined
          +optional
        type: boolean
    type: object
  v1.ConfigMapProjection:
    properties:
      items:
        description: |-
          If unspecified, each key-value pair in the Data field of the referenced
          ConfigMap will be projected into the volume as a file whose name is the
          key and content is the value. If specified, the listed keys will be
          projected into the specified paths, and unlisted keys will not be
          present. If a key is specified which is not present in the ConfigMap,
          the volume setup will error unless it is marked optional. Paths must be
          relative and may not contain the '..' path or start with '..'.
          +optional
        items:
          $ref: '#/definitions/v1.KeyToPath'
        type: array
      name:
        description: |-
          Name of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
          TODO: Add other useful fields. apiVersion, kind, uid?
          +optional
        type: string
      optional:
        description: |-
          Specify whether the ConfigMap or its keys must be defined
          +optional
        type: boolean
    type: object
  v1.ConfigMapVolumeSource:
    properties:
      defaultMode:
        description: |-
          Optional: mode bits used to set permissions on created files by default.
          Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
          YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
          Defaults to 0644.
          Directories within the path are not affected by this setting.
          This might be in conflict with other options that affect the file
          mode, like fsGroup, and the result can be other mode bits set.
          +optional
        type: integer
      items:
        description: |-
          If unspecified, each key-value pair in the Data field of the referenced
          ConfigMap will be projected into the volume as a file whose name is the
          key and content is the value. If specified, the listed keys will be
          projected into the specified paths, and unlisted keys will not be
          present. If a key is specified which is not present in the ConfigMap,
          the volume setup will error unless it is marked optional. Paths must be
          relative and may not contain the '..' path or start with '..'.
          +optional
        items:
          $ref: '#/definitions/v1.KeyToPath'
        type: array
      name:
        description: |-
          Name of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
          TODO: Add other useful fields. apiVersion, kind, uid?
          +optional
        type: string
      optional:
        description: |-
          Specify whether the ConfigMap or its keys must be defined
          +optional
        type: boolean
    type: object
  v1.DownwardAPIProjection:
    properties:
      items:
        description: |-
          Items is a list of DownwardAPIVolume file
          +optional
        items:
          $ref: '#/definitions/v1.DownwardAPIVolumeFile'
        type: array
    type: object
  v1.DownwardAPIVolumeFile:
    properties:
      fieldRef:
        allOf:
          - $ref: '#/definitions/v1.ObjectFieldSelector'
        description: |-
          Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.
          +optional
      mode:
        description: |-
          Optional: mode bits used to set permissions on this file, must be an octal value
          between 0000 and 0777 or a decimal value between 0 and 511.
          YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
          If not specified, the volume defaultMode will be used.
          This might be in conflict with other options that affect the file
          mode, like fsGroup, and the result can be other mode bits set.
          +optional
        type: integer
      path:
        description: 'Required: Path is  the relative path name of the file to be
          created. Must not be absolute or contain the ''..'' path. Must be utf-8
          encoded. The first item of the relative path must not start with ''..'''
        type: string
      resourceFieldRef:
        allOf:
          - $ref: '#/definitions/v1.ResourceFieldSelector'
        description: |-
          Selects a resource of the container: only resources limits and requests
          (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
          +optional
    type: object
  v1.DownwardAPIVolumeSource:
    properties:
      defaultMode:
        description: |-
          Optional: mode bits to use on created files by default. Must be a
          Optional: mode bits used to set permissions on created files by default.
          Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
          YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
          Defaults to 0644.
          Directories within the path are not affected by this setting.
          This might be in conflict with other options that affect the file
          mode, like fsGroup, and the result can be other mode bits set.
          +optional
        type: integer
      items:
        description: |-
          Items is a list of downward API volume file
          +optional
        items:
          $ref: '#/definitions/v1.DownwardAPIVolumeFile'
        type: array
    type: object
  v1.EmptyDirVolumeSource:
    properties:
      medium:
        allOf:
          - $ref: '#/definitions/v1.StorageMedium'
        description: |-
          What type of storage medium should back this directory.
          The default is "" which means to use the node's default medium.
          Must be an empty string (default) or Memory.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
          +optional
      sizeLimit:
        allOf:
          - $ref: '#/definitions/resource.Quantity'
        description: |-
          Total amount of local storage required for this EmptyDir volume.
          The size limit is also applicable for memory medium.
          The maximum usage on memory medium EmptyDir would be the minimum value between
          the SizeLimit specified here and the sum of memory limits of all containers in a pod.
          The default is nil which means that the limit is undefined.
          More info: http://kubernetes.io/docs/user-guide/volumes#emptydir
          +optional
    type: object
  v1.EnvFromSource:
    properties:
      configMapRef:
        allOf:
          - $ref: '#/definitions/v1.ConfigMapEnvSource'
        description: |-
          The ConfigMap to select from
          +optional
      prefix:
        description: |-
          An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
          +optional
        type: string
      secretRef:
        allOf:
          - $ref: '#/definitions/v1.SecretEnvSource'
        description: |-
          The Secret to select from
          +optional
    type: object
  v1.EnvVar:
    properties:
      name:
        description: Name of the environment variable. Must be a C_IDENTIFIER.
        type: string
      value:
        description: |-
          Variable references $(VAR_NAME) are expanded
          using the previous defined environment variables in the container and
          any service environment variables. If a variable cannot be resolved,
          the reference in the input string will be unchanged. The $(VAR_NAME)
          syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped
          references will never be expanded, regardless of whether the variable
          exists or not.
          Defaults to "".
          +optional
        type: string
      valueFrom:
        allOf:
          - $ref: '#/definitions/v1.EnvVarSource'
        description: |-
          Source for the environment variable's value. Cannot be used if value is not empty.
          +optional
    type: object
  v1.EnvVarSource:
    properties:
      configMapKeyRef:
        allOf:
          - $ref: '#/definitions/v1.ConfigMapKeySelector'
        description: |-
          Selects a key of a ConfigMap.
          +optional
      fieldRef:
        allOf:
          - $ref: '#/definitions/v1.ObjectFieldSelector'
        description: |-
          Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
          spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
          +optional
      resourceFieldRef:
        allOf:
          - $ref: '#/definitions/v1.ResourceFieldSelector'
        description: |-
          Selects a resource of the container: only resources limits and requests
          (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
          +optional
      secretKeyRef:
        allOf:
          - $ref: '#/definitions/v1.SecretKeySelector'
        description: |-
          Selects a key of a secret in the pod's namespace
          +optional
    type: object
  v1.EphemeralVolumeSource:
    properties:
      volumeClaimTemplate:
        allOf:
          - $ref: '#/definitions/v1.PersistentVolumeClaimTemplate'
        description: |-
          Will be used to create a stand-alone PVC to provision the volume.
          The pod in which this EphemeralVolumeSource is embedded will be the
          owner of the PVC, i.e. the PVC will be deleted together with the
          pod.  The name of the PVC will be `<pod name>-<volume name>` where
          `<volume name>` is the name from the `PodSpec.Volumes` array
          entry. Pod validation will reject the pod if the concatenated name
          is not valid for a PVC (for example, too long).

          An existing PVC with that name that is not owned by the pod
          will *not* be used for the pod to avoid using an unrelated
          volume by mistake. Starting the pod is then blocked until
          the unrelated PVC is removed. If such a pre-created PVC is
          meant to be used by the pod, the PVC has to updated with an
          owner reference to the pod once the pod exists. Normally
          this should not be necessary, but it may be useful when
          manually reconstructing a broken cluster.

          This field is read-only and no changes will be made by Kubernetes
          to the PVC after it has been created.

          Required, must not be nil.
    type: object
  v1.FCVolumeSource:
    properties:
      fsType:
        description: |-
          Filesystem type to mount.
          Must be a filesystem type supported by the host operating system.
          Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
          TODO: how do we prevent errors in the filesystem from compromising the machine
          +optional
        type: string
      lun:
        description: |-
          Optional: FC target lun number
          +optional
        type: integer
      readOnly:
        description: |-
          Optional: Defaults to false (read/write). ReadOnly here will force
          the ReadOnly setting in VolumeMounts.
          +optional
        type: boolean
      targetWWNs:
        description: |-
          Optional: FC target worldwide names (WWNs)
          +optional
        items:
          type: string
        type: array
      wwids:
        description: |-
          Optional: FC volume world wide identifiers (wwids)
          Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
          +optional
        items:
          type: string
        type: array
    type: object
  v1.FieldsV1:
    type: object
  v1.FlexVolumeSource:
    properties:
      driver:
        description: Driver is the name of the driver to use for this volume.
        type: string
      fsType:
        description: |-
          Filesystem type to mount.
          Must be a filesystem type supported by the host operating system.
          Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
          +optional
        type: string
      options:
        additionalProperties:
          type: string
        description: |-
          Optional: Extra command options if any.
          +optional
        type: object
      readOnly:
        description: |-
          Optional: Defaults to false (read/write). ReadOnly here will force
          the ReadOnly setting in VolumeMounts.
          +optional
        type: boolean
      secretRef:
        allOf:
          - $ref: '#/definitions/v1.LocalObjectReference'
        description: |-
          Optional: SecretRef is reference to the secret object containing
          sensitive information to pass to the plugin scripts. This may be
          empty if no secret object is specified. If the secret object
          contains more than one secret, all secrets are passed to the plugin
          scripts.
          +optional
    type: object
  v1.FlockerVolumeSource:
    properties:
      datasetName:
        description: |-
          Name of the dataset stored as metadata -> name on the dataset for Flocker
          should be considered as deprecated
          +optional
        type: string
      datasetUUID:
        description: |-
          UUID of the dataset. This is unique identifier of a Flocker dataset
          +optional
        type: string
    type: object
  v1.GCEPersistentDiskVolumeSource:
    properties:
      fsType:
        description: |-
          Filesystem type of the volume that you want to mount.
          Tip: Ensure that the filesystem type is supported by the host operating system.
          Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
          TODO: how do we prevent errors in the filesystem from compromising the machine
          +optional
        type: string
      partition:
        description: |-
          The partition in the volume that you want to mount.
          If omitted, the default is to mount by volume name.
          Examples: For volume /dev/sda1, you specify the partition as "1".
          Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
          More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
          +optional
        type: integer
      pdName:
        description: |-
          Unique name of the PD resource in GCE. Used to identify the disk in GCE.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
        type: string
      readOnly:
        description: |-
          ReadOnly here will force the ReadOnly setting in VolumeMounts.
          Defaults to false.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
          +optional
        type: boolean
    type: object
  v1.GitRepoVolumeSource:
    properties:
      directory:
        description: |-
          Target directory name.
          Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the
          git repository.  Otherwise, if specified, the volume will contain the git repository in
          the subdirectory with the given name.
          +optional
        type: string
      repository:
        description: Repository URL
        type: string
      revision:
        description: |-
          Commit hash for the specified revision.
          +optional
        type: string
    type: object
  v1.GlusterfsVolumeSource:
    properties:
      endpoints:
        description: |-
          EndpointsName is the endpoint name that details Glusterfs topology.
          More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
        type: string
      path:
        description: |-
          Path is the Glusterfs volume path.
          More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
        type: string
      readOnly:
        description: |-
          ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions.
          Defaults to false.
          More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
          +optional
        type: boolean
    type: object
  v1.HostPathType:
    enum:
      - ""
      - DirectoryOrCreate
      - Directory
      - FileOrCreate
      - File
      - Socket
      - CharDevice
      - BlockDevice
    type: string
    x-enum-varnames:
      - HostPathUnset
      - HostPathDirectoryOrCreate
      - HostPathDirectory
      - HostPathFileOrCreate
      - HostPathFile
      - HostPathSocket
      - HostPathCharDev
      - HostPathBlockDev
  v1.HostPathVolumeSource:
    properties:
      path:
        description: |-
          Path of the directory on the host.
          If the path is a symlink, it will follow the link to the real path.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
        type: string
      type:
        allOf:
          - $ref: '#/definitions/v1.HostPathType'
        description: |-
          Type for HostPath Volume
          Defaults to ""
          More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
          +optional
    type: object
  v1.IPFamily:
    enum:
      - IPv4
      - IPv6
    type: string
    x-enum-varnames:
      - IPv4Protocol
      - IPv6Protocol
  v1.IPFamilyPolicyType:
    enum:
      - SingleStack
      - PreferDualStack
      - RequireDualStack
    type: string
    x-enum-varnames:
      - IPFamilyPolicySingleStack
      - IPFamilyPolicyPreferDualStack
      - IPFamilyPolicyRequireDualStack
  v1.ISCSIVolumeSource:
    properties:
      chapAuthDiscovery:
        description: |-
          whether support iSCSI Discovery CHAP authentication
          +optional
        type: boolean
      chapAuthSession:
        description: |-
          whether support iSCSI Session CHAP authentication
          +optional
        type: boolean
      fsType:
        description: |-
          Filesystem type of the volume that you want to mount.
          Tip: Ensure that the filesystem type is supported by the host operating system.
          Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
          TODO: how do we prevent errors in the filesystem from compromising the machine
          +optional
        type: string
      initiatorName:
        description: |-
          Custom iSCSI Initiator Name.
          If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface
          <target portal>:<volume name> will be created for the connection.
          +optional
        type: string
      iqn:
        description: Target iSCSI Qualified Name.
        type: string
      iscsiInterface:
        description: |-
          iSCSI Interface Name that uses an iSCSI transport.
          Defaults to 'default' (tcp).
          +optional
        type: string
      lun:
        description: iSCSI Target Lun number.
        type: integer
      portals:
        description: |-
          iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port
          is other than default (typically TCP ports 860 and 3260).
          +optional
        items:
          type: string
        type: array
      readOnly:
        description: |-
          ReadOnly here will force the ReadOnly setting in VolumeMounts.
          Defaults to false.
          +optional
        type: boolean
      secretRef:
        allOf:
          - $ref: '#/definitions/v1.LocalObjectReference'
        description: |-
          CHAP Secret for iSCSI target and initiator authentication
          +optional
      targetPortal:
        description: |-
          iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port
          is other than default (typically TCP ports 860 and 3260).
        type: string
    type: object
  v1.KeyToPath:
    properties:
      key:
        description: The key to project.
        type: string
      mode:
        description: |-
          Optional: mode bits used to set permissions on this file.
          Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
          YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
          If not specified, the volume defaultMode will be used.
          This might be in conflict with other options that affect the file
          mode, like fsGroup, and the result can be other mode bits set.
          +optional
        type: integer
      path:
        description: |-
          The relative path of the file to map the key to.
          May not be an absolute path.
          May not contain the path element '..'.
          May not start with the string '..'.
        type: string
    type: object
  v1.LabelSelector:
    properties:
      matchExpressions:
        description: |-
          matchExpressions is a list of label selector requirements. The requirements are ANDed.
          +optional
        items:
          $ref: '#/definitions/v1.LabelSelectorRequirement'
        type: array
      matchLabels:
        additionalProperties:
          type: string
        description: |-
          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
          map is equivalent to an element of matchExpressions, whose key field is "key", the
          operator is "In", and the values array contains only "value". The requirements are ANDed.
          +optional
        type: object
    type: object
  v1.LabelSelectorOperator:
    enum:
      - In
      - NotIn
      - Exists
      - DoesNotExist
    type: string
    x-enum-varnames:
      - LabelSelectorOpIn
      - LabelSelectorOpNotIn
      - LabelSelectorOpExists
      - LabelSelectorOpDoesNotExist
  v1.LabelSelectorRequirement:
    properties:
      key:
        description: |-
          key is the label key that the selector applies to.
          +patchMergeKey=key
          +patchStrategy=merge
        type: string
      operator:
        allOf:
          - $ref: '#/definitions/v1.LabelSelectorOperator'
        description: |-
          operator represents a key's relationship to a set of values.
          Valid operators are In, NotIn, Exists and DoesNotExist.
      values:
        description: |-
          values is an array of string values. If the operator is In or NotIn,
          the values array must be non-empty. If the operator is Exists or DoesNotExist,
          the values array must be empty. This array is replaced during a strategic
          merge patch.
          +optional
        items:
          type: string
        type: array
    type: object
  v1.LoadBalancerIngress:
    properties:
      hostname:
        description: |-
          Hostname is set for load-balancer ingress points that are DNS based
          (typically AWS load-balancers)
          +optional
        type: string
      ip:
        description: |-
          IP is set for load-balancer ingress points that are IP based
          (typically GCE or OpenStack load-balancers)
          +optional
        type: string
      ports:
        description: |-
          Ports is a list of records of service ports
          If used, every port defined in the service should have an entry in it
          +listType=atomic
          +optional
        items:
          $ref: '#/definitions/v1.PortStatus'
        type: array
    type: object
  v1.LoadBalancerStatus:
    properties:
      ingress:
        description: |-
          Ingress is a list containing ingress points for the load-balancer.
          Traffic intended for the service should be sent to these ingress points.
          +optional
        items:
          $ref: '#/definitions/v1.LoadBalancerIngress'
        type: array
    type: object
  v1.LocalObjectReference:
    properties:
      name:
        description: |-
          Name of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
          TODO: Add other useful fields. apiVersion, kind, uid?
          +optional
        type: string
    type: object
  v1.ManagedFieldsEntry:
    properties:
      apiVersion:
        description: |-
          APIVersion defines the version of this resource that this field set
          applies to. The format is "group/version" just like the top-level
          APIVersion field. It is necessary to track the version of a field
          set because it cannot be automatically converted.
        type: string
      fieldsType:
        description: |-
          FieldsType is the discriminator for the different fields format and version.
          There is currently only one possible value: "FieldsV1"
        type: string
      fieldsV1:
        allOf:
          - $ref: '#/definitions/v1.FieldsV1'
        description: |-
          FieldsV1 holds the first JSON version format as described in the "FieldsV1" type.
          +optional
      manager:
        description: Manager is an identifier of the workflow managing these fields.
        type: string
      operation:
        allOf:
          - $ref: '#/definitions/v1.ManagedFieldsOperationType'
        description: |-
          Operation is the type of operation which lead to this ManagedFieldsEntry being created.
          The only valid values for this field are 'Apply' and 'Update'.
      time:
        description: |-
          Time is timestamp of when these fields were set. It should always be empty if Operation is 'Apply'
          +optional
        type: string
    type: object
  v1.ManagedFieldsOperationType:
    enum:
      - Apply
      - Update
    type: string
    x-enum-varnames:
      - ManagedFieldsOperationApply
      - ManagedFieldsOperationUpdate
  v1.MountPropagationMode:
    enum:
      - None
      - HostToContainer
      - Bidirectional
    type: string
    x-enum-varnames:
      - MountPropagationNone
      - MountPropagationHostToContainer
      - MountPropagationBidirectional
  v1.NFSVolumeSource:
    properties:
      path:
        description: |-
          Path that is exported by the NFS server.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
        type: string
      readOnly:
        description: |-
          ReadOnly here will force
          the NFS export to be mounted with read-only permissions.
          Defaults to false.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
          +optional
        type: boolean
      server:
        description: |-
          Server is the hostname or IP address of the NFS server.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
        type: string
    type: object
  v1.ObjectFieldSelector:
    properties:
      apiVersion:
        description: |-
          Version of the schema the FieldPath is written in terms of, defaults to "v1".
          +optional
        type: string
      fieldPath:
        description: Path of the field to select in the specified API version.
        type: string
    type: object
  v1.ObjectMeta:
    properties:
      annotations:
        additionalProperties:
          type: string
        description: |-
          Annotations is an unstructured key value map stored with a resource that may be
          set by external tools to store and retrieve arbitrary metadata. They are not
          queryable and should be preserved when modifying objects.
          More info: http://kubernetes.io/docs/user-guide/annotations
          +optional
        type: object
      clusterName:
        description: |-
          The name of the cluster which the object belongs to.
          This is used to distinguish resources with same name and namespace in different clusters.
          This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.
          +optional
        type: string
      creationTimestamp:
        description: |-
          CreationTimestamp is a timestamp representing the server time when this object was
          created. It is not guaranteed to be set in happens-before order across separate operations.
          Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system.
          Read-only.
          Null for lists.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
          +optional
        type: string
      deletionGracePeriodSeconds:
        description: |-
          Number of seconds allowed for this object to gracefully terminate before
          it will be removed from the system. Only set when deletionTimestamp is also set.
          May only be shortened.
          Read-only.
          +optional
        type: integer
      deletionTimestamp:
        description: |-
          DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
          field is set by the server when a graceful deletion is requested by the user, and is not
          directly settable by a client. The resource is expected to be deleted (no longer visible
          from resource lists, and not reachable by name) after the time in this field, once the
          finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
          Once the deletionTimestamp is set, this value may not be unset or be set further into the
          future, although it may be shortened or the resource may be deleted prior to this time.
          For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
          by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
          the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
          remove the pod from the API. In the presence of network partitions, this object may still
          exist after this timestamp, until an administrator or automated process can determine the
          resource is fully terminated.
          If not set, graceful deletion of the object has not been requested.

          Populated by the system when a graceful deletion is requested.
          Read-only.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
          +optional
        type: string
      finalizers:
        description: |-
          Must be empty before the object is deleted from the registry. Each entry
          is an identifier for the responsible component that will remove the entry
          from the list. If the deletionTimestamp of the object is non-nil, entries
          in this list can only be removed.
          Finalizers may be processed and removed in any order.  Order is NOT enforced
          because it introduces significant risk of stuck finalizers.
          finalizers is a shared field, any actor with permission can reorder it.
          If the finalizer list is processed in order, then this can lead to a situation
          in which the component responsible for the first finalizer in the list is
          waiting for a signal (field value, external system, or other) produced by a
          component responsible for a finalizer later in the list, resulting in a deadlock.
          Without enforced ordering finalizers are free to order amongst themselves and
          are not vulnerable to ordering changes in the list.
          +optional
          +patchStrategy=merge
        items:
          type: string
        type: array
      generateName:
        description: |-
          GenerateName is an optional prefix, used by the server, to generate a unique
          name ONLY IF the Name field has not been provided.
          If this field is used, the name returned to the client will be different
          than the name passed. This value will also be combined with a unique suffix.
          The provided value has the same validation rules as the Name field,
          and may be truncated by the length of the suffix required to make the value
          unique on the server.

          If this field is specified and the generated name exists, the server will
          NOT return a 409 - instead, it will either return 201 Created or 500 with Reason
          ServerTimeout indicating a unique name could not be found in the time allotted, and the client
          should retry (optionally after the time indicated in the Retry-After header).

          Applied only if Name is not specified.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
          +optional
        type: string
      generation:
        description: |-
          A sequence number representing a specific generation of the desired state.
          Populated by the system. Read-only.
          +optional
        type: integer
      labels:
        additionalProperties:
          type: string
        description: |-
          Map of string keys and values that can be used to organize and categorize
          (scope and select) objects. May match selectors of replication controllers
          and services.
          More info: http://kubernetes.io/docs/user-guide/labels
          +optional
        type: object
      managedFields:
        description: |-
          ManagedFields maps workflow-id and version to the set of fields
          that are managed by that workflow. This is mostly for internal
          housekeeping, and users typically shouldn't need to set or
          understand this field. A workflow can be the user's name, a
          controller's name, or the name of a specific apply path like
          "ci-cd". The set of fields is always in the version that the
          workflow used when modifying the object.

          +optional
        items:
          $ref: '#/definitions/v1.ManagedFieldsEntry'
        type: array
      name:
        description: |-
          Name must be unique within a namespace. Is required when creating resources, although
          some resources may allow a client to request the generation of an appropriate name
          automatically. Name is primarily intended for creation idempotence and configuration
          definition.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/identifiers#names
          +optional
        type: string
      namespace:
        description: |-
          Namespace defines the space within which each name must be unique. An empty namespace is
          equivalent to the "default" namespace, but "default" is the canonical representation.
          Not all objects are required to be scoped to a namespace - the value of this field for
          those objects will be empty.

          Must be a DNS_LABEL.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/namespaces
          +optional
        type: string
      ownerReferences:
        description: |-
          List of objects depended by this object. If ALL objects in the list have
          been deleted, this object will be garbage collected. If this object is managed by a controller,
          then an entry in this list will point to this controller, with the controller field set to true.
          There cannot be more than one managing controller.
          +optional
          +patchMergeKey=uid
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.OwnerReference'
        type: array
      resourceVersion:
        description: |-
          An opaque value that represents the internal version of this object that can
          be used by clients to determine when objects have changed. May be used for optimistic
          concurrency, change detection, and the watch operation on a resource or set of resources.
          Clients must treat these values as opaque and passed unmodified back to the server.
          They may only be valid for a particular resource or set of resources.

          Populated by the system.
          Read-only.
          Value must be treated as opaque by clients and .
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
          +optional
        type: string
      selfLink:
        description: |-
          SelfLink is a URL representing this object.
          Populated by the system.
          Read-only.

          DEPRECATED
          Kubernetes will stop propagating this field in 1.20 release and the field is planned
          to be removed in 1.21 release.
          +optional
        type: string
      uid:
        description: |-
          UID is the unique in time and space value for this object. It is typically generated by
          the server on successful creation of a resource and is not allowed to change on PUT
          operations.

          Populated by the system.
          Read-only.
          More info: http://kubernetes.io/docs/user-guide/identifiers#uids
          +optional
        type: string
    type: object
  v1.ObjectReference:
    properties:
      apiVersion:
        description: |-
          API version of the referent.
          +optional
        type: string
      fieldPath:
        description: |-
          If referring to a piece of an object instead of an entire object, this string
          should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
          For example, if the object reference is to a container within a pod, this would take on a value like:
          "spec.containers{name}" (where "name" refers to the name of the container that triggered
          the event) or if no container name is specified "spec.containers[2]" (container with
          index 2 in this pod). This syntax is chosen only to have some well-defined way of
          referencing a part of an object.
          TODO: this design is not final and this field is subject to change in the future.
          +optional
        type: string
      kind:
        description: |-
          Kind of the referent.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          +optional
        type: string
      name:
        description: |-
          Name of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
          +optional
        type: string
      namespace:
        description: |-
          Namespace of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
          +optional
        type: string
      resourceVersion:
        description: |-
          Specific resourceVersion to which this reference is made, if any.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
          +optional
        type: string
      uid:
        description: |-
          UID of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
          +optional
        type: string
    type: object
  v1.OwnerReference:
    properties:
      apiVersion:
        description: API version of the referent.
        type: string
      blockOwnerDeletion:
        description: |-
          If true, AND if the owner has the "foregroundDeletion" finalizer, then
          the owner cannot be deleted from the key-value store until this
          reference is removed.
          Defaults to false.
          To set this field, a user needs "delete" permission of the owner,
          otherwise 422 (Unprocessable Entity) will be returned.
          +optional
        type: boolean
      controller:
        description: |-
          If true, this reference points to the managing controller.
          +optional
        type: boolean
      kind:
        description: |-
          Kind of the referent.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
        type: string
      name:
        description: |-
          Name of the referent.
          More info: http://kubernetes.io/docs/user-guide/identifiers#names
        type: string
      uid:
        description: |-
          UID of the referent.
          More info: http://kubernetes.io/docs/user-guide/identifiers#uids
        type: string
    type: object
  v1.PersistentVolumeAccessMode:
    enum:
      - ReadWriteOnce
      - ReadOnlyMany
      - ReadWriteMany
    type: string
    x-enum-varnames:
      - ReadWriteOnce
      - ReadOnlyMany
      - ReadWriteMany
  v1.PersistentVolumeClaimSpec:
    properties:
      accessModes:
        description: |-
          AccessModes contains the desired access modes the volume should have.
          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
          +optional
        items:
          $ref: '#/definitions/v1.PersistentVolumeAccessMode'
        type: array
      dataSource:
        allOf:
          - $ref: '#/definitions/v1.TypedLocalObjectReference'
        description: |-
          This field can be used to specify either:
          * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
          * An existing PVC (PersistentVolumeClaim)
          * An existing custom resource that implements data population (Alpha)
          In order to use custom resource types that implement data population,
          the AnyVolumeDataSource feature gate must be enabled.
          If the provisioner or an external controller can support the specified data source,
          it will create a new volume based on the contents of the specified data source.
          +optional
      resources:
        allOf:
          - $ref: '#/definitions/v1.ResourceRequirements'
        description: |-
          Resources represents the minimum resources the volume should have.
          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
          +optional
      selector:
        allOf:
          - $ref: '#/definitions/v1.LabelSelector'
        description: |-
          A label query over volumes to consider for binding.
          +optional
      storageClassName:
        description: |-
          Name of the StorageClass required by the claim.
          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
          +optional
        type: string
      volumeMode:
        allOf:
          - $ref: '#/definitions/v1.PersistentVolumeMode'
        description: |-
          volumeMode defines what type of volume is required by the claim.
          Value of Filesystem is implied when not included in claim spec.
          +optional
      volumeName:
        description: |-
          VolumeName is the binding reference to the PersistentVolume backing this claim.
          +optional
        type: string
    type: object
  v1.PersistentVolumeClaimTemplate:
    properties:
      metadata:
        allOf:
          - $ref: '#/definitions/v1.ObjectMeta'
        description: |-
          May contain labels and annotations that will be copied into the PVC
          when creating it. No other fields are allowed and will be rejected during
          validation.

          +optional
      spec:
        allOf:
          - $ref: '#/definitions/v1.PersistentVolumeClaimSpec'
        description: |-
          The specification for the PersistentVolumeClaim. The entire content is
          copied unchanged into the PVC that gets created from this
          template. The same fields as in a PersistentVolumeClaim
          are also valid here.
    type: object
  v1.PersistentVolumeClaimVolumeSource:
    properties:
      claimName:
        description: |-
          ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
        type: string
      readOnly:
        description: |-
          Will force the ReadOnly setting in VolumeMounts.
          Default false.
          +optional
        type: boolean
    type: object
  v1.PersistentVolumeMode:
    enum:
      - Block
      - Filesystem
    type: string
    x-enum-varnames:
      - PersistentVolumeBlock
      - PersistentVolumeFilesystem
  v1.PhotonPersistentDiskVolumeSource:
    properties:
      fsType:
        description: |-
          Filesystem type to mount.
          Must be a filesystem type supported by the host operating system.
          Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
        type: string
      pdID:
        description: ID that identifies Photon Controller persistent disk
        type: string
    type: object
  v1.PodPhase:
    enum:
      - Pending
      - Running
      - Succeeded
      - Failed
      - Unknown
    type: string
    x-enum-varnames:
      - PodPending
      - PodRunning
      - PodSucceeded
      - PodFailed
      - PodUnknown
  v1.PortStatus:
    properties:
      error:
        description: |-
          Error is to record the problem with the service port
          The format of the error shall comply with the following rules:
          - built-in error values shall be specified in this file and those shall use
            CamelCase names
          - cloud provider specific error values must have names that comply with the
            format foo.example.com/CamelCase.
          ---
          The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
          +optional
          +kubebuilder:validation:Required
          +kubebuilder:validation:Pattern=`^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$`
          +kubebuilder:validation:MaxLength=316
        type: string
      port:
        description: Port is the port number of the service port of which status is
          recorded here
        type: integer
      protocol:
        allOf:
          - $ref: '#/definitions/v1.Protocol'
        description: |-
          Protocol is the protocol of the service port of which status is recorded here
          The supported values are: "TCP", "UDP", "SCTP"
    type: object
  v1.PortworxVolumeSource:
    properties:
      fsType:
        description: |-
          FSType represents the filesystem type to mount
          Must be a filesystem type supported by the host operating system.
          Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
        type: string
      readOnly:
        description: |-
          Defaults to false (read/write). ReadOnly here will force
          the ReadOnly setting in VolumeMounts.
          +optional
        type: boolean
      volumeID:
        description: VolumeID uniquely identifies a Portworx volume
        type: string
    type: object
  v1.ProjectedVolumeSource:
    properties:
      defaultMode:
        description: |-
          Mode bits used to set permissions on created files by default.
          Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
          YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
          Directories within the path are not affected by this setting.
          This might be in conflict with other options that affect the file
          mode, like fsGroup, and the result can be other mode bits set.
          +optional
        type: integer
      sources:
        description: |-
          list of volume projections
          +optional
        items:
          $ref: '#/definitions/v1.VolumeProjection'
        type: array
    type: object
  v1.Protocol:
    enum:
      - TCP
      - UDP
      - SCTP
    type: string
    x-enum-varnames:
      - ProtocolTCP
      - ProtocolUDP
      - ProtocolSCTP
  v1.PullPolicy:
    enum:
      - Always
      - Never
      - IfNotPresent
    type: string
    x-enum-varnames:
      - PullAlways
      - PullNever
      - PullIfNotPresent
  v1.QuobyteVolumeSource:
    properties:
      group:
        description: |-
          Group to map volume access to
          Default is no group
          +optional
        type: string
      readOnly:
        description: |-
          ReadOnly here will force the Quobyte volume to be mounted with read-only permissions.
          Defaults to false.
          +optional
        type: boolean
      registry:
        description: |-
          Registry represents a single or multiple Quobyte Registry services
          specified as a string as host:port pair (multiple entries are separated with commas)
          which acts as the central registry for volumes
        type: string
      tenant:
        description: |-
          Tenant owning the given Quobyte volume in the Backend
          Used with dynamically provisioned Quobyte volumes, value is set by the plugin
          +optional
        type: string
      user:
        description: |-
          User to map volume access to
          Defaults to serivceaccount user
          +optional
        type: string
      volume:
        description: Volume is a string that references an already created Quobyte
          volume by name.
        type: string
    type: object
  v1.RBDVolumeSource:
    properties:
      fsType:
        description: |-
          Filesystem type of the volume that you want to mount.
          Tip: Ensure that the filesystem type is supported by the host operating system.
          Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
          TODO: how do we prevent errors in the filesystem from compromising the machine
          +optional
        type: string
      image:
        description: |-
          The rados image name.
          More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
        type: string
      keyring:
        description: |-
          Keyring is the path to key ring for RBDUser.
          Default is /etc/ceph/keyring.
          More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
          +optional
        type: string
      monitors:
        description: |-
          A collection of Ceph monitors.
          More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
        items:
          type: string
        type: array
      pool:
        description: |-
          The rados pool name.
          Default is rbd.
          More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
          +optional
        type: string
      readOnly:
        description: |-
          ReadOnly here will force the ReadOnly setting in VolumeMounts.
          Defaults to false.
          More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
          +optional
        type: boolean
      secretRef:
        allOf:
          - $ref: '#/definitions/v1.LocalObjectReference'
        description: |-
          SecretRef is name of the authentication secret for RBDUser. If provided
          overrides keyring.
          Default is nil.
          More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
          +optional
      user:
        description: |-
          The rados user name.
          Default is admin.
          More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
          +optional
        type: string
    type: object
  v1.ResourceFieldSelector:
    properties:
      containerName:
        description: |-
          Container name: required for volumes, optional for env vars
          +optional
        type: string
      divisor:
        allOf:
          - $ref: '#/definitions/resource.Quantity'
        description: |-
          Specifies the output format of the exposed resources, defaults to "1"
          +optional
      resource:
        description: 'Required: resource to select'
        type: string
    type: object
  v1.ResourceList:
    additionalProperties:
      $ref: '#/definitions/resource.Quantity'
    type: object
  v1.ResourceRequirements:
    properties:
      limits:
        allOf:
          - $ref: '#/definitions/v1.ResourceList'
        description: |-
          Limits describes the maximum amount of compute resources allowed.
          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
          +optional
      requests:
        allOf:
          - $ref: '#/definitions/v1.ResourceList'
        description: |-
          Requests describes the minimum amount of compute resources required.
          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
          otherwise to an implementation-defined value.
          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
          +optional
    type: object
  v1.ScaleIOVolumeSource:
    properties:
      fsType:
        description: |-
          Filesystem type to mount.
          Must be a filesystem type supported by the host operating system.
          Ex. "ext4", "xfs", "ntfs".
          Default is "xfs".
          +optional
        type: string
      gateway:
        description: The host address of the ScaleIO API Gateway.
        type: string
      protectionDomain:
        description: |-
          The name of the ScaleIO Protection Domain for the configured storage.
          +optional
        type: string
      readOnly:
        description: |-
          Defaults to false (read/write). ReadOnly here will force
          the ReadOnly setting in VolumeMounts.
          +optional
        type: boolean
      secretRef:
        allOf:
          - $ref: '#/definitions/v1.LocalObjectReference'
        description: |-
          SecretRef references to the secret for ScaleIO user and other
          sensitive information. If this is not provided, Login operation will fail.
      sslEnabled:
        description: |-
          Flag to enable/disable SSL communication with Gateway, default false
          +optional
        type: boolean
      storageMode:
        description: |-
          Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.
          Default is ThinProvisioned.
          +optional
        type: string
      storagePool:
        description: |-
          The ScaleIO Storage Pool associated with the protection domain.
          +optional
        type: string
      system:
        description: The name of the storage system as configured in ScaleIO.
        type: string
      volumeName:
        description: |-
          The name of a volume already created in the ScaleIO system
          that is associated with this volume source.
        type: string
    type: object
  v1.SecretEnvSource:
    properties:
      name:
        description: |-
          Name of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
          TODO: Add other useful fields. apiVersion, kind, uid?
          +optional
        type: string
      optional:
        description: |-
          Specify whether the Secret must be defined
          +optional
        type: boolean
    type: object
  v1.SecretKeySelector:
    properties:
      key:
        description: The key of the secret to select from.  Must be a valid secret
          key.
        type: string
      name:
        description: |-
          Name of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
          TODO: Add other useful fields. apiVersion, kind, uid?
          +optional
        type: string
      optional:
        description: |-
          Specify whether the Secret or its key must be defined
          +optional
        type: boolean
    type: object
  v1.SecretProjection:
    properties:
      items:
        description: |-
          If unspecified, each key-value pair in the Data field of the referenced
          Secret will be projected into the volume as a file whose name is the
          key and content is the value. If specified, the listed keys will be
          projected into the specified paths, and unlisted keys will not be
          present. If a key is specified which is not present in the Secret,
          the volume setup will error unless it is marked optional. Paths must be
          relative and may not contain the '..' path or start with '..'.
          +optional
        items:
          $ref: '#/definitions/v1.KeyToPath'
        type: array
      name:
        description: |-
          Name of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
          TODO: Add other useful fields. apiVersion, kind, uid?
          +optional
        type: string
      optional:
        description: |-
          Specify whether the Secret or its key must be defined
          +optional
        type: boolean
    type: object
  v1.SecretVolumeSource:
    properties:
      defaultMode:
        description: |-
          Optional: mode bits used to set permissions on created files by default.
          Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
          YAML accepts both octal and decimal values, JSON requires decimal values
          for mode bits. Defaults to 0644.
          Directories within the path are not affected by this setting.
          This might be in conflict with other options that affect the file
          mode, like fsGroup, and the result can be other mode bits set.
          +optional
        type: integer
      items:
        description: |-
          If unspecified, each key-value pair in the Data field of the referenced
          Secret will be projected into the volume as a file whose name is the
          key and content is the value. If specified, the listed keys will be
          projected into the specified paths, and unlisted keys will not be
          present. If a key is specified which is not present in the Secret,
          the volume setup will error unless it is marked optional. Paths must be
          relative and may not contain the '..' path or start with '..'.
          +optional
        items:
          $ref: '#/definitions/v1.KeyToPath'
        type: array
      optional:
        description: |-
          Specify whether the Secret or its keys must be defined
          +optional
        type: boolean
      secretName:
        description: |-
          Name of the secret in the pod's namespace to use.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
          +optional
        type: string
    type: object
  v1.ServiceAccountTokenProjection:
    properties:
      audience:
        description: |-
          Audience is the intended audience of the token. A recipient of a token
          must identify itself with an identifier specified in the audience of the
          token, and otherwise should reject the token. The audience defaults to the
          identifier of the apiserver.
          +optional
        type: string
      expirationSeconds:
        description: |-
          ExpirationSeconds is the requested duration of validity of the service
          account token. As the token approaches expiration, the kubelet volume
          plugin will proactively rotate the service account token. The kubelet will
          start trying to rotate the token if the token is older than 80 percent of
          its time to live or if the token is older than 24 hours.Defaults to 1 hour
          and must be at least 10 minutes.
          +optional
        type: integer
      path:
        description: |-
          Path is the path relative to the mount point of the file to project the
          token into.
        type: string
    type: object
  v1.ServiceAffinity:
    enum:
      - ClientIP
      - None
    type: string
    x-enum-varnames:
      - ServiceAffinityClientIP
      - ServiceAffinityNone
  v1.ServiceExternalTrafficPolicyType:
    enum:
      - Local
      - Cluster
    type: string
    x-enum-varnames:
      - ServiceExternalTrafficPolicyTypeLocal
      - ServiceExternalTrafficPolicyTypeCluster
  v1.ServiceInternalTrafficPolicyType:
    enum:
      - Cluster
      - Local
    type: string
    x-enum-varnames:
      - ServiceInternalTrafficPolicyCluster
      - ServiceInternalTrafficPolicyLocal
  v1.ServicePort:
    properties:
      appProtocol:
        description: |-
          The application protocol for this port.
          This field follows standard Kubernetes label syntax.
          Un-prefixed names are reserved for IANA standard service names (as per
          RFC-6335 and http://www.iana.org/assignments/service-names).
          Non-standard protocols should use prefixed names such as
          mycompany.com/my-custom-protocol.
          This is a beta field that is guarded by the ServiceAppProtocol feature
          gate and enabled by default.
          +optional
        type: string
      name:
        description: |-
          The name of this port within the service. This must be a DNS_LABEL.
          All ports within a ServiceSpec must have unique names. When considering
          the endpoints for a Service, this must match the 'name' field in the
          EndpointPort.
          Optional if only one ServicePort is defined on this service.
          +optional
        type: string
      nodePort:
        description: |-
          The port on each node on which this service is exposed when type is
          NodePort or LoadBalancer.  Usually assigned by the system. If a value is
          specified, in-range, and not in use it will be used, otherwise the
          operation will fail.  If not specified, a port will be allocated if this
          Service requires one.  If this field is specified when creating a
          Service which does not need it, creation will fail. This field will be
          wiped when updating a Service to no longer need it (e.g. changing type
          from NodePort to ClusterIP).
          More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
          +optional
        type: integer
      port:
        description: The port that will be exposed by this service.
        type: integer
      protocol:
        allOf:
          - $ref: '#/definitions/v1.Protocol'
        description: |-
          The IP protocol for this port. Supports "TCP", "UDP", and "SCTP".
          Default is TCP.
          +default="TCP"
          +optional
      targetPort:
        allOf:
          - $ref: '#/definitions/intstr.IntOrString'
        description: |-
          Number or name of the port to access on the pods targeted by the service.
          Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
          If this is a string, it will be looked up as a named port in the
          target Pod's container ports. If this is not specified, the value
          of the 'port' field is used (an identity map).
          This field is ignored for services with clusterIP=None, and should be
          omitted or set equal to the 'port' field.
          More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
          +optional
    type: object
  v1.ServiceSpec:
    properties:
      allocateLoadBalancerNodePorts:
        description: |-
          allocateLoadBalancerNodePorts defines if NodePorts will be automatically
          allocated for services with type LoadBalancer.  Default is "true". It may be
          set to "false" if the cluster load-balancer does not rely on NodePorts.
          allocateLoadBalancerNodePorts may only be set for services with type LoadBalancer
          and will be cleared if the type is changed to any other type.
          This field is alpha-level and is only honored by servers that enable the ServiceLBNodePortControl feature.
          +optional
        type: boolean
      clusterIP:
        description: |-
          clusterIP is the IP address of the service and is usually assigned
          randomly. If an address is specified manually, is in-range (as per
          system configuration), and is not in use, it will be allocated to the
          service; otherwise creation of the service will fail. This field may not
          be changed through updates unless the type field is also being changed
          to ExternalName (which requires this field to be blank) or the type
          field is being changed from ExternalName (in which case this field may
          optionally be specified, as describe above).  Valid values are "None",
          empty string (""), or a valid IP address. Setting this to "None" makes a
          "headless service" (no virtual IP), which is useful when direct endpoint
          connections are preferred and proxying is not required.  Only applies to
          types ClusterIP, NodePort, and LoadBalancer. If this field is specified
          when creating a Service of type ExternalName, creation will fail. This
          field will be wiped when updating a Service to type ExternalName.
          More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
          +optional
        type: string
      clusterIPs:
        description: |-
          ClusterIPs is a list of IP addresses assigned to this service, and are
          usually assigned randomly.  If an address is specified manually, is
          in-range (as per system configuration), and is not in use, it will be
          allocated to the service; otherwise creation of the service will fail.
          This field may not be changed through updates unless the type field is
          also being changed to ExternalName (which requires this field to be
          empty) or the type field is being changed from ExternalName (in which
          case this field may optionally be specified, as describe above).  Valid
          values are "None", empty string (""), or a valid IP address.  Setting
          this to "None" makes a "headless service" (no virtual IP), which is
          useful when direct endpoint connections are preferred and proxying is
          not required.  Only applies to types ClusterIP, NodePort, and
          LoadBalancer. If this field is specified when creating a Service of type
          ExternalName, creation will fail. This field will be wiped when updating
          a Service to type ExternalName.  If this field is not specified, it will
          be initialized from the clusterIP field.  If this field is specified,
          clients must ensure that clusterIPs[0] and clusterIP have the same
          value.

          Unless the "IPv6DualStack" feature gate is enabled, this field is
          limited to one value, which must be the same as the clusterIP field.  If
          the feature gate is enabled, this field may hold a maximum of two
          entries (dual-stack IPs, in either order).  These IPs must correspond to
          the values of the ipFamilies field. Both clusterIPs and ipFamilies are
          governed by the ipFamilyPolicy field.
          More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
          +listType=atomic
          +optional
        items:
          type: string
        type: array
      externalIPs:
        description: |-
          externalIPs is a list of IP addresses for which nodes in the cluster
          will also accept traffic for this service.  These IPs are not managed by
          Kubernetes.  The user is responsible for ensuring that traffic arrives
          at a node with this IP.  A common example is external load-balancers
          that are not part of the Kubernetes system.
          +optional
        items:
          type: string
        type: array
      externalName:
        description: |-
          externalName is the external reference that discovery mechanisms will
          return as an alias for this service (e.g. a DNS CNAME record). No
          proxying will be involved.  Must be a lowercase RFC-1123 hostname
          (https://tools.ietf.org/html/rfc1123) and requires `type` to be "ExternalName".
          +optional
        type: string
      externalTrafficPolicy:
        allOf:
          - $ref: '#/definitions/v1.ServiceExternalTrafficPolicyType'
        description: |-
          externalTrafficPolicy denotes if this Service desires to route external
          traffic to node-local or cluster-wide endpoints. "Local" preserves the
          client source IP and avoids a second hop for LoadBalancer and Nodeport
          type services, but risks potentially imbalanced traffic spreading.
          "Cluster" obscures the client source IP and may cause a second hop to
          another node, but should have good overall load-spreading.
          +optional
      healthCheckNodePort:
        description: |-
          healthCheckNodePort specifies the healthcheck nodePort for the service.
          This only applies when type is set to LoadBalancer and
          externalTrafficPolicy is set to Local. If a value is specified, is
          in-range, and is not in use, it will be used.  If not specified, a value
          will be automatically allocated.  External systems (e.g. load-balancers)
          can use this port to determine if a given node holds endpoints for this
          service or not.  If this field is specified when creating a Service
          which does not need it, creation will fail. This field will be wiped
          when updating a Service to no longer need it (e.g. changing type).
          +optional
        type: integer
      internalTrafficPolicy:
        allOf:
          - $ref: '#/definitions/v1.ServiceInternalTrafficPolicyType'
        description: |-
          InternalTrafficPolicy specifies if the cluster internal traffic
          should be routed to all endpoints or node-local endpoints only.
          "Cluster" routes internal traffic to a Service to all endpoints.
          "Local" routes traffic to node-local endpoints only, traffic is
          dropped if no node-local endpoints are ready.
          The default value is "Cluster".
          +featureGate=ServiceInternalTrafficPolicy
          +optional
      ipFamilies:
        description: |-
          IPFamilies is a list of IP families (e.g. IPv4, IPv6) assigned to this
          service, and is gated by the "IPv6DualStack" feature gate.  This field
          is usually assigned automatically based on cluster configuration and the
          ipFamilyPolicy field. If this field is specified manually, the requested
          family is available in the cluster, and ipFamilyPolicy allows it, it
          will be used; otherwise creation of the service will fail.  This field
          is conditionally mutable: it allows for adding or removing a secondary
          IP family, but it does not allow changing the primary IP family of the
          Service.  Valid values are "IPv4" and "IPv6".  This field only applies
          to Services of types ClusterIP, NodePort, and LoadBalancer, and does
          apply to "headless" services.  This field will be wiped when updating a
          Service to type ExternalName.

          This field may hold a maximum of two entries (dual-stack families, in
          either order).  These families must correspond to the values of the
          clusterIPs field, if specified. Both clusterIPs and ipFamilies are
          governed by the ipFamilyPolicy field.
          +listType=atomic
          +optional
        items:
          $ref: '#/definitions/v1.IPFamily'
        type: array
      ipFamilyPolicy:
        allOf:
          - $ref: '#/definitions/v1.IPFamilyPolicyType'
        description: |-
          IPFamilyPolicy represents the dual-stack-ness requested or required by
          this Service, and is gated by the "IPv6DualStack" feature gate.  If
          there is no value provided, then this field will be set to SingleStack.
          Services can be "SingleStack" (a single IP family), "PreferDualStack"
          (two IP families on dual-stack configured clusters or a single IP family
          on single-stack clusters), or "RequireDualStack" (two IP families on
          dual-stack configured clusters, otherwise fail). The ipFamilies and
          clusterIPs fields depend on the value of this field.  This field will be
          wiped when updating a service to type ExternalName.
          +optional
      loadBalancerClass:
        description: |-
          loadBalancerClass is the class of the load balancer implementation this Service belongs to.
          If specified, the value of this field must be a label-style identifier, with an optional prefix,
          e.g. "internal-vip" or "example.com/internal-vip". Unprefixed names are reserved for end-users.
          This field can only be set when the Service type is 'LoadBalancer'. If not set, the default load
          balancer implementation is used, today this is typically done through the cloud provider integration,
          but should apply for any default implementation. If set, it is assumed that a load balancer
          implementation is watching for Services with a matching class. Any default load balancer
          implementation (e.g. cloud providers) should ignore Services that set this field.
          This field can only be set when creating or updating a Service to type 'LoadBalancer'.
          Once set, it can not be changed. This field will be wiped when a service is updated to a non 'LoadBalancer' type.
          +featureGate=LoadBalancerClass
          +optional
        type: string
      loadBalancerIP:
        description: |-
          Only applies to Service Type: LoadBalancer
          LoadBalancer will get created with the IP specified in this field.
          This feature depends on whether the underlying cloud-provider supports specifying
          the loadBalancerIP when a load balancer is created.
          This field will be ignored if the cloud-provider does not support the feature.
          +optional
        type: string
      loadBalancerSourceRanges:
        description: |-
          If specified and supported by the platform, this will restrict traffic through the cloud-provider
          load-balancer will be restricted to the specified client IPs. This field will be ignored if the
          cloud-provider does not support the feature."
          More info: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/
          +optional
        items:
          type: string
        type: array
      ports:
        description: |-
          The list of ports that are exposed by this service.
          More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
          +patchMergeKey=port
          +patchStrategy=merge
          +listType=map
          +listMapKey=port
          +listMapKey=protocol
        items:
          $ref: '#/definitions/v1.ServicePort'
        type: array
      publishNotReadyAddresses:
        description: |-
          publishNotReadyAddresses indicates that any agent which deals with endpoints for this
          Service should disregard any indications of ready/not-ready.
          The primary use case for setting this field is for a StatefulSet's Headless Service to
          propagate SRV DNS records for its Pods for the purpose of peer discovery.
          The Kubernetes controllers that generate Endpoints and EndpointSlice resources for
          Services interpret this to mean that all endpoints are considered "ready" even if the
          Pods themselves are not. Agents which consume only Kubernetes generated endpoints
          through the Endpoints or EndpointSlice resources can safely assume this behavior.
          +optional
        type: boolean
      selector:
        additionalProperties:
          type: string
        description: |-
          Route service traffic to pods with label keys and values matching this
          selector. If empty or not present, the service is assumed to have an
          external process managing its endpoints, which Kubernetes will not
          modify. Only applies to types ClusterIP, NodePort, and LoadBalancer.
          Ignored if type is ExternalName.
          More info: https://kubernetes.io/docs/concepts/services-networking/service/
          +optional
        type: object
      sessionAffinity:
        allOf:
          - $ref: '#/definitions/v1.ServiceAffinity'
        description: |-
          Supports "ClientIP" and "None". Used to maintain session affinity.
          Enable client IP based session affinity.
          Must be ClientIP or None.
          Defaults to None.
          More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
          +optional
      sessionAffinityConfig:
        allOf:
          - $ref: '#/definitions/v1.SessionAffinityConfig'
        description: |-
          sessionAffinityConfig contains the configurations of session affinity.
          +optional
      topologyKeys:
        description: |-
          topologyKeys is a preference-order list of topology keys which
          implementations of services should use to preferentially sort endpoints
          when accessing this Service, it can not be used at the same time as
          externalTrafficPolicy=Local.
          Topology keys must be valid label keys and at most 16 keys may be specified.
          Endpoints are chosen based on the first topology key with available backends.
          If this field is specified and all entries have no backends that match
          the topology of the client, the service has no backends for that client
          and connections should fail.
          The special value "*" may be used to mean "any topology". This catch-all
          value, if used, only makes sense as the last value in the list.
          If this is not specified or empty, no topology constraints will be applied.
          This field is alpha-level and is only honored by servers that enable the ServiceTopology feature.
          This field is deprecated and will be removed in a future version.
          +optional
        items:
          type: string
        type: array
      type:
        allOf:
          - $ref: '#/definitions/v1.ServiceType'
        description: |-
          type determines how the Service is exposed. Defaults to ClusterIP. Valid
          options are ExternalName, ClusterIP, NodePort, and LoadBalancer.
          "ClusterIP" allocates a cluster-internal IP address for load-balancing
          to endpoints. Endpoints are determined by the selector or if that is not
          specified, by manual construction of an Endpoints object or
          EndpointSlice objects. If clusterIP is "None", no virtual IP is
          allocated and the endpoints are published as a set of endpoints rather
          than a virtual IP.
          "NodePort" builds on ClusterIP and allocates a port on every node which
          routes to the same endpoints as the clusterIP.
          "LoadBalancer" builds on NodePort and creates an external load-balancer
          (if supported in the current cloud) which routes to the same endpoints
          as the clusterIP.
          "ExternalName" aliases this service to the specified externalName.
          Several other fields do not apply to ExternalName services.
          More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
          +optional
    type: object
  v1.ServiceStatus:
    properties:
      conditions:
        description: |-
          Current service state
          +optional
          +patchMergeKey=type
          +patchStrategy=merge
          +listType=map
          +listMapKey=type
        items:
          $ref: '#/definitions/v1.Condition'
        type: array
      loadBalancer:
        allOf:
          - $ref: '#/definitions/v1.LoadBalancerStatus'
        description: |-
          LoadBalancer contains the current status of the load-balancer,
          if one is present.
          +optional
    type: object
  v1.ServiceType:
    enum:
      - ClusterIP
      - NodePort
      - LoadBalancer
      - ExternalName
    type: string
    x-enum-varnames:
      - ServiceTypeClusterIP
      - ServiceTypeNodePort
      - ServiceTypeLoadBalancer
      - ServiceTypeExternalName
  v1.SessionAffinityConfig:
    properties:
      clientIP:
        allOf:
          - $ref: '#/definitions/v1.ClientIPConfig'
        description: |-
          clientIP contains the configurations of Client IP based session affinity.
          +optional
    type: object
  v1.StorageMedium:
    enum:
      - ""
      - Memory
      - HugePages
      - HugePages-
    type: string
    x-enum-comments:
      StorageMediumDefault: use whatever the default is for the node, assume anything
        we don't explicitly handle is this
      StorageMediumHugePages: use hugepages
      StorageMediumHugePagesPrefix: prefix for full medium notation HugePages-<size>
      StorageMediumMemory: use memory (e.g. tmpfs on linux)
    x-enum-varnames:
      - StorageMediumDefault
      - StorageMediumMemory
      - StorageMediumHugePages
      - StorageMediumHugePagesPrefix
  v1.StorageOSVolumeSource:
    properties:
      fsType:
        description: |-
          Filesystem type to mount.
          Must be a filesystem type supported by the host operating system.
          Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
          +optional
        type: string
      readOnly:
        description: |-
          Defaults to false (read/write). ReadOnly here will force
          the ReadOnly setting in VolumeMounts.
          +optional
        type: boolean
      secretRef:
        allOf:
          - $ref: '#/definitions/v1.LocalObjectReference'
        description: |-
          SecretRef specifies the secret to use for obtaining the StorageOS API
          credentials.  If not specified, default values will be attempted.
          +optional
      volumeName:
        description: |-
          VolumeName is the human-readable name of the StorageOS volume.  Volume
          names are only unique within a namespace.
        type: string
      volumeNamespace:
        description: |-
          VolumeNamespace specifies the scope of the volume within StorageOS.  If no
          namespace is specified then the Pod's namespace will be used.  This allows the
          Kubernetes name scoping to be mirrored within StorageOS for tighter integration.
          Set VolumeName to any name to override the default behaviour.
          Set to "default" if you are not using namespaces within StorageOS.
          Namespaces that do not pre-exist within StorageOS will be created.
          +optional
        type: string
    type: object
  v1.TaintEffect:
    enum:
      - NoSchedule
      - PreferNoSchedule
      - NoExecute
    type: string
    x-enum-varnames:
      - TaintEffectNoSchedule
      - TaintEffectPreferNoSchedule
      - TaintEffectNoExecute
  v1.Toleration:
    properties:
      effect:
        allOf:
          - $ref: '#/definitions/v1.TaintEffect'
        description: |-
          Effect indicates the taint effect to match. Empty means match all taint effects.
          When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
          +optional
      key:
        description: |-
          Key is the taint key that the toleration applies to. Empty means match all taint keys.
          If the key is empty, operator must be Exists; this combination means to match all values and all keys.
          +optional
        type: string
      operator:
        allOf:
          - $ref: '#/definitions/v1.TolerationOperator'
        description: |-
          Operator represents a key's relationship to the value.
          Valid operators are Exists and Equal. Defaults to Equal.
          Exists is equivalent to wildcard for value, so that a pod can
          tolerate all taints of a particular category.
          +optional
      tolerationSeconds:
        description: |-
          TolerationSeconds represents the period of time the toleration (which must be
          of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
          it is not set, which means tolerate the taint forever (do not evict). Zero and
          negative values will be treated as 0 (evict immediately) by the system.
          +optional
        type: integer
      value:
        description: |-
          Value is the taint value the toleration matches to.
          If the operator is Exists, the value should be empty, otherwise just a regular string.
          +optional
        type: string
    type: object
  v1.TolerationOperator:
    enum:
      - Exists
      - Equal
    type: string
    x-enum-varnames:
      - TolerationOpExists
      - TolerationOpEqual
  v1.TypedLocalObjectReference:
    properties:
      apiGroup:
        description: |-
          APIGroup is the group for the resource being referenced.
          If APIGroup is not specified, the specified Kind must be in the core API group.
          For any other third-party types, APIGroup is required.
          +optional
        type: string
      kind:
        description: Kind is the type of resource being referenced
        type: string
      name:
        description: Name is the name of resource being referenced
        type: string
    type: object
  v1.Volume:
    properties:
      awsElasticBlockStore:
        allOf:
          - $ref: '#/definitions/v1.AWSElasticBlockStoreVolumeSource'
        description: |-
          AWSElasticBlockStore represents an AWS Disk resource that is attached to a
          kubelet's host machine and then exposed to the pod.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
          +optional
      azureDisk:
        allOf:
          - $ref: '#/definitions/v1.AzureDiskVolumeSource'
        description: |-
          AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
          +optional
      azureFile:
        allOf:
          - $ref: '#/definitions/v1.AzureFileVolumeSource'
        description: |-
          AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
          +optional
      cephfs:
        allOf:
          - $ref: '#/definitions/v1.CephFSVolumeSource'
        description: |-
          CephFS represents a Ceph FS mount on the host that shares a pod's lifetime
          +optional
      cinder:
        allOf:
          - $ref: '#/definitions/v1.CinderVolumeSource'
        description: |-
          Cinder represents a cinder volume attached and mounted on kubelets host machine.
          More info: https://examples.k8s.io/mysql-cinder-pd/README.md
          +optional
      configMap:
        allOf:
          - $ref: '#/definitions/v1.ConfigMapVolumeSource'
        description: |-
          ConfigMap represents a configMap that should populate this volume
          +optional
      csi:
        allOf:
          - $ref: '#/definitions/v1.CSIVolumeSource'
        description: |-
          CSI (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).
          +optional
      downwardAPI:
        allOf:
          - $ref: '#/definitions/v1.DownwardAPIVolumeSource'
        description: |-
          DownwardAPI represents downward API about the pod that should populate this volume
          +optional
      emptyDir:
        allOf:
          - $ref: '#/definitions/v1.EmptyDirVolumeSource'
        description: |-
          EmptyDir represents a temporary directory that shares a pod's lifetime.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
          +optional
      ephemeral:
        allOf:
          - $ref: '#/definitions/v1.EphemeralVolumeSource'
        description: |-
          Ephemeral represents a volume that is handled by a cluster storage driver.
          The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,
          and deleted when the pod is removed.

          Use this if:
          a) the volume is only needed while the pod runs,
          b) features of normal volumes like restoring from snapshot or capacity
             tracking are needed,
          c) the storage driver is specified through a storage class, and
          d) the storage driver supports dynamic volume provisioning through
             a PersistentVolumeClaim (see EphemeralVolumeSource for more
             information on the connection between this volume type
             and PersistentVolumeClaim).

          Use PersistentVolumeClaim or one of the vendor-specific
          APIs for volumes that persist for longer than the lifecycle
          of an individual pod.

          Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to
          be used that way - see the documentation of the driver for
          more information.

          A pod can use both types of ephemeral volumes and
          persistent volumes at the same time.

          This is a beta feature and only available when the GenericEphemeralVolume
          feature gate is enabled.

          +optional
      fc:
        allOf:
          - $ref: '#/definitions/v1.FCVolumeSource'
        description: |-
          FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
          +optional
      flexVolume:
        allOf:
          - $ref: '#/definitions/v1.FlexVolumeSource'
        description: |-
          FlexVolume represents a generic volume resource that is
          provisioned/attached using an exec based plugin.
          +optional
      flocker:
        allOf:
          - $ref: '#/definitions/v1.FlockerVolumeSource'
        description: |-
          Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running
          +optional
      gcePersistentDisk:
        allOf:
          - $ref: '#/definitions/v1.GCEPersistentDiskVolumeSource'
        description: |-
          GCEPersistentDisk represents a GCE Disk resource that is attached to a
          kubelet's host machine and then exposed to the pod.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
          +optional
      gitRepo:
        allOf:
          - $ref: '#/definitions/v1.GitRepoVolumeSource'
        description: |-
          GitRepo represents a git repository at a particular revision.
          DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an
          EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir
          into the Pod's container.
          +optional
      glusterfs:
        allOf:
          - $ref: '#/definitions/v1.GlusterfsVolumeSource'
        description: |-
          Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.
          More info: https://examples.k8s.io/volumes/glusterfs/README.md
          +optional
      hostPath:
        allOf:
          - $ref: '#/definitions/v1.HostPathVolumeSource'
        description: |-
          HostPath represents a pre-existing file or directory on the host
          machine that is directly exposed to the container. This is generally
          used for system agents or other privileged things that are allowed
          to see the host machine. Most containers will NOT need this.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
          ---
          TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not
          mount host directories as read/write.
          +optional
      iscsi:
        allOf:
          - $ref: '#/definitions/v1.ISCSIVolumeSource'
        description: |-
          ISCSI represents an ISCSI Disk resource that is attached to a
          kubelet's host machine and then exposed to the pod.
          More info: https://examples.k8s.io/volumes/iscsi/README.md
          +optional
      name:
        description: |-
          Volume's name.
          Must be a DNS_LABEL and unique within the pod.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        type: string
      nfs:
        allOf:
          - $ref: '#/definitions/v1.NFSVolumeSource'
        description: |-
          NFS represents an NFS mount on the host that shares a pod's lifetime
          More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
          +optional
      persistentVolumeClaim:
        allOf:
          - $ref: '#/definitions/v1.PersistentVolumeClaimVolumeSource'
        description: |-
          PersistentVolumeClaimVolumeSource represents a reference to a
          PersistentVolumeClaim in the same namespace.
          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
          +optional
      photonPersistentDisk:
        allOf:
          - $ref: '#/definitions/v1.PhotonPersistentDiskVolumeSource'
        description: PhotonPersistentDisk represents a PhotonController persistent
          disk attached and mounted on kubelets host machine
      portworxVolume:
        allOf:
          - $ref: '#/definitions/v1.PortworxVolumeSource'
        description: |-
          PortworxVolume represents a portworx volume attached and mounted on kubelets host machine
          +optional
      projected:
        allOf:
          - $ref: '#/definitions/v1.ProjectedVolumeSource'
        description: Items for all in one resources secrets, configmaps, and downward
          API
      quobyte:
        allOf:
          - $ref: '#/definitions/v1.QuobyteVolumeSource'
        description: |-
          Quobyte represents a Quobyte mount on the host that shares a pod's lifetime
          +optional
      rbd:
        allOf:
          - $ref: '#/definitions/v1.RBDVolumeSource'
        description: |-
          RBD represents a Rados Block Device mount on the host that shares a pod's lifetime.
          More info: https://examples.k8s.io/volumes/rbd/README.md
          +optional
      scaleIO:
        allOf:
          - $ref: '#/definitions/v1.ScaleIOVolumeSource'
        description: |-
          ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
          +optional
      secret:
        allOf:
          - $ref: '#/definitions/v1.SecretVolumeSource'
        description: |-
          Secret represents a secret that should populate this volume.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
          +optional
      storageos:
        allOf:
          - $ref: '#/definitions/v1.StorageOSVolumeSource'
        description: |-
          StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
          +optional
      vsphereVolume:
        allOf:
          - $ref: '#/definitions/v1.VsphereVirtualDiskVolumeSource'
        description: |-
          VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
          +optional
    type: object
  v1.VolumeMount:
    properties:
      mountPath:
        description: |-
          Path within the container at which the volume should be mounted.  Must
          not contain ':'.
        type: string
      mountPropagation:
        allOf:
          - $ref: '#/definitions/v1.MountPropagationMode'
        description: |-
          mountPropagation determines how mounts are propagated from the host
          to container and the other way around.
          When not set, MountPropagationNone is used.
          This field is beta in 1.10.
          +optional
      name:
        description: This must match the Name of a Volume.
        type: string
      readOnly:
        description: |-
          Mounted read-only if true, read-write otherwise (false or unspecified).
          Defaults to false.
          +optional
        type: boolean
      subPath:
        description: |-
          Path within the volume from which the container's volume should be mounted.
          Defaults to "" (volume's root).
          +optional
        type: string
      subPathExpr:
        description: |-
          Expanded path within the volume from which the container's volume should be mounted.
          Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
          Defaults to "" (volume's root).
          SubPathExpr and SubPath are mutually exclusive.
          +optional
        type: string
    type: object
  v1.VolumeProjection:
    properties:
      configMap:
        allOf:
          - $ref: '#/definitions/v1.ConfigMapProjection'
        description: |-
          information about the configMap data to project
          +optional
      downwardAPI:
        allOf:
          - $ref: '#/definitions/v1.DownwardAPIProjection'
        description: |-
          information about the downwardAPI data to project
          +optional
      secret:
        allOf:
          - $ref: '#/definitions/v1.SecretProjection'
        description: |-
          information about the secret data to project
          +optional
      serviceAccountToken:
        allOf:
          - $ref: '#/definitions/v1.ServiceAccountTokenProjection'
        description: |-
          information about the serviceAccountToken data to project
          +optional
    type: object
  v1.VsphereVirtualDiskVolumeSource:
    properties:
      fsType:
        description: |-
          Filesystem type to mount.
          Must be a filesystem type supported by the host operating system.
          Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
          +optional
        type: string
      storagePolicyID:
        description: |-
          Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
          +optional
        type: string
      storagePolicyName:
        description: |-
          Storage Policy Based Management (SPBM) profile name.
          +optional
        type: string
      volumePath:
        description: Path that identifies vSphere volume vmdk
        type: string
    type: object
  v2_onboarding.AgentData:
    properties:
      clusterAgent:
        $ref: '#/definitions/v2_onboarding.AgentDetails'
      nodeAgent:
        items:
          $ref: '#/definitions/v2_onboarding.AgentDetails'
        type: array
    type: object
  v2_onboarding.AgentDetails:
    properties:
      name:
        type: string
      status:
        $ref: '#/definitions/v1.PodPhase'
    type: object
  v2_onboarding.AutoCreatedNetworkMapStatus:
    properties:
      status:
        $ref: '#/definitions/v2_onboarding.V2OnboardingStatus'
      totalNetworkMaps:
        type: integer
    type: object
  v2_onboarding.ChaosInfraAdvanceConfiguration:
    properties:
      imagePullPolicy:
        $ref: '#/definitions/v1.PullPolicy'
      insecureSkipVerify:
        type: boolean
      mtls:
        $ref: '#/definitions/infra_v2.MTLSConfiguration'
      nodeSelector:
        additionalProperties:
          type: string
        type: object
      proxy:
        $ref: '#/definitions/infra_v2.ProxyConfiguration'
      runAsGroup:
        type: integer
      runAsUser:
        type: integer
      tolerations:
        items:
          $ref: '#/definitions/v1.Toleration'
        type: array
    type: object
  v2_onboarding.ConfirmDiscoveryResponse:
    properties:
      agentCreated:
        type: boolean
      agentLinked:
        type: boolean
      discoveryCompleted:
        type: boolean
    type: object
  v2_onboarding.ConfirmExperimentCreationRequest:
    properties:
      mode:
        $ref: '#/definitions/targetnetworkmap.ExperimentCreationMode'
    type: object
  v2_onboarding.ConfirmExperimentCreationResponse:
    properties:
      completed:
        type: boolean
      targetNetworkMapStatus:
        additionalProperties:
          $ref: '#/definitions/targetnetworkmap.Status'
        type: object
    type: object
  v2_onboarding.ConfirmExperimentRunResponse:
    properties:
      completed:
        type: boolean
    type: object
  v2_onboarding.ConfirmNetworkMapRequest:
    properties:
      mode:
        $ref: '#/definitions/v2_onboarding.NetworkMapCreationMode'
    type: object
  v2_onboarding.ConfirmNetworkMapResponse:
    properties:
      networkMapCount:
        type: integer
      serviceCount:
        type: integer
    type: object
  v2_onboarding.DiscoveredService:
    properties:
      agentDetails:
        $ref: '#/definitions/v2_onboarding.AgentData'
      completedAgentCount:
        type: integer
      discoveredServiceCount:
        type: integer
      erroredAgentCount:
        type: integer
      isTracingEnabled:
        type: boolean
      pendingAgentCount:
        type: integer
      sDAgentID:
        type: string
      sDAgentIdentity:
        type: string
      status:
        $ref: '#/definitions/v2_onboarding.V2OnboardingStatus'
      totalAgentCount:
        type: integer
    type: object
  v2_onboarding.Experiments:
    properties:
      category:
        type: string
      delegateTaskId:
        type: string
      description:
        type: string
      experimentID:
        type: string
      name:
        type: string
      notifyID:
        type: string
      status:
        $ref: '#/definitions/model.WorkflowRunStatus'
      targetNetworkMapID:
        type: string
      targetNetworkMapName:
        type: string
      targetServices:
        items:
          $ref: '#/definitions/v2_onboarding.TargetServiceDetails'
        type: array
    type: object
  v2_onboarding.NetworkMapCreationMode:
    enum:
      - Manual
      - Automatic
    type: string
    x-enum-varnames:
      - NetworkMapCreationManual
      - NetworkMapCreationAutomatic
  v2_onboarding.OnboardingExperimentResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/v2_onboarding.OnboardingTargetExperiment'
        type: array
      isProcessed:
        type: boolean
      pagination:
        $ref: '#/definitions/github_com_harness_hce-saas_graphql_server_api.Pagination'
    type: object
  v2_onboarding.OnboardingMode:
    enum:
      - Manual
      - Automatic
    type: string
    x-enum-varnames:
      - ManualMode
      - AutomaticMode
  v2_onboarding.OnboardingTargetExperiment:
    properties:
      identity:
        type: string
      isProcessed:
        type: boolean
      name:
        type: string
      totalChaosExperiments:
        type: integer
      totalServiceCount:
        type: integer
    type: object
  v2_onboarding.RunSafeExperimentStatus:
    properties:
      experiments:
        items:
          $ref: '#/definitions/v2_onboarding.Experiments'
        type: array
      status:
        $ref: '#/definitions/v2_onboarding.V2OnboardingStatus'
      totalSafeExperiment:
        type: integer
    type: object
  v2_onboarding.TargetNetworkMapStatus:
    properties:
      status:
        $ref: '#/definitions/v2_onboarding.V2OnboardingStatus'
      targetNetworkMapStatus:
        additionalProperties:
          $ref: '#/definitions/targetnetworkmap.Status'
        type: object
      totalTargetNetworkMaps:
        type: integer
      totalTargetNetworkMapsExperiments:
        type: integer
    type: object
  v2_onboarding.TargetServiceDetails:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  v2_onboarding.V2Onboarding:
    properties:
      accountID:
        type: string
      autoCreateNetworkMapStatus:
        $ref: '#/definitions/v2_onboarding.AutoCreatedNetworkMapStatus'
      chaosAdvanceConfiguration:
        $ref: '#/definitions/v2_onboarding.ChaosInfraAdvanceConfiguration'
      createdAt:
        type: integer
      createdBy:
        type: string
      ddciID:
        type: string
      discoveredServiceStatus:
        $ref: '#/definitions/v2_onboarding.DiscoveredService'
      discoveryAdvanceConfiguration:
        $ref: '#/definitions/database.AgentConfiguration'
      environmentRef:
        type: string
      infrastructureRef:
        type: string
      isRemoved:
        type: boolean
      mode:
        $ref: '#/definitions/v2_onboarding.OnboardingMode'
      namespace:
        type: string
      onboardingID:
        type: string
      orgID:
        type: string
      projectID:
        type: string
      runSafeExperimentStatus:
        $ref: '#/definitions/v2_onboarding.RunSafeExperimentStatus'
      serviceAccount:
        type: string
      status:
        $ref: '#/definitions/v2_onboarding.V2OnboardingStatus'
      targetNetworkMapStatus:
        $ref: '#/definitions/v2_onboarding.TargetNetworkMapStatus'
      updatedAt:
        type: integer
      updatedBy:
        type: string
    type: object
  v2_onboarding.V2OnboardingList:
    properties:
      data:
        items:
          $ref: '#/definitions/v2_onboarding.V2Onboarding'
        type: array
      page:
        $ref: '#/definitions/github_com_harness_hce-saas_graphql_server_api.Pagination'
    type: object
  v2_onboarding.V2OnboardingRequest:
    properties:
      chaosAdvanceConfiguration:
        $ref: '#/definitions/v2_onboarding.ChaosInfraAdvanceConfiguration'
      discoveryAdvanceConfiguration:
        $ref: '#/definitions/database.AgentConfiguration'
      environmentRef:
        type: string
      infrastructureRef:
        type: string
      mode:
        $ref: '#/definitions/v2_onboarding.OnboardingMode'
      serviceAccount:
        type: string
    required:
      - environmentRef
      - infrastructureRef
      - mode
    type: object
  v2_onboarding.V2OnboardingStatus:
    enum:
      - COMPLETED
      - RUNNING
      - PENDING
      - QUEUED
      - NA
      - ERRORED
    type: string
    x-enum-varnames:
      - COMPLETED
      - RUNNING
      - PENDING
      - QUEUED
      - NA
      - ERRORED
info:
  contact: {}
  title: Chaos Manager API
  version: "1.0"
paths:
  /experimentHelperImageVersion:
    get:
      description: Get experiment helper image version
      operationId: getExperimentHelperImageVersion
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.ExperimentHelperImageVersion'
      summary: Get experiment helper image version
  /rest/chaos-experiment-run/report/{experimentRunId}/{notifyId}:
    get:
      description: Generate and return kubernetesV1 chaos experiment run report
      operationId: GetChaosExperimentRunReport
      parameters:
        - description: experimentRunId for kubernetesV1 experiment run report generation
          in: path
          name: experimentRunId
          required: true
          type: string
        - description: notifyId for kubernetesV1 experiment run report generation
          in: path
          name: notifyId
          required: true
          type: string
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
      produces:
        - application/pdf
      responses:
        "200":
          description: OK
          schema:
            type: file
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      summary: Generate and return kubernetesV1 chaos experiment run report
  /rest/chaosDashboards:
    get:
      description: Get chaos dashboard
      operationId: getChaosDashboard
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.Dashboard'
            type: array
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Get chaos dashboard
  /rest/genai/sgp/generate:
    post:
      description: Get security governance conditions template
      operationId: getSGPTemplateByGenAI
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/security_governance.Condition'
      summary: Get security governance conditions template
  /rest/imageRegistry:
    get:
      description: Get image registry
      operationId: getImageRegistry
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.ImageRegistryDetails'
      summary: Get image registry
  /rest/overview/experiment-stats:
    get:
      description: Get resource usage
      operationId: getExperimentRunsOverviewStats
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.ChaosExperimentRunsStatsResponse'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Get chaos experiment run overview stats
  /rest/service/{accountID}:
    get:
      description: Get service details for account
      operationId: getAccountServiceDetails
      parameters:
        - description: ID of the account
          in: path
          name: accountID
          required: true
          type: string
        - default: 0
          description: page number
          in: query
          name: page
          required: true
          type: integer
        - default: 10
          description: limit per page
          in: query
          name: limit
          required: true
          type: integer
        - description: start time in unix format in milliseconds
          in: query
          name: startTime
          required: true
          type: integer
        - description: end time in unix format in milliseconds
          in: query
          name: endTime
          required: true
          type: integer
        - description: search based on service name
          in: query
          name: service
          type: string
        - description: search based on service type
          in: query
          name: serviceType
          type: string
        - default: false
          description: sort the response in ascending order
          in: query
          name: sortAscending
          type: boolean
        - default: faultsRan
          description: 'sort the response w.r.t field: faultsRan, experiments, experimentsRan'
          enum:
            - experimentsRan
            - experiments
            - faultsRan
          in: query
          name: sortField
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/chaosserviceusage.ServiceDataResponse'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Get service usage details for account in the requested time frame
  /rest/service/overall/stats/{accountID}:
    get:
      description: Get overall service usage stats by type for account
      operationId: getOverallServiceUsageStats
      parameters:
        - description: ID of the account
          in: path
          name: accountID
          required: true
          type: string
        - description: start time in unix format in milliseconds
          in: query
          name: startTime
          required: true
          type: integer
        - description: end time in unix format in milliseconds
          in: query
          name: endTime
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/chaosserviceusage.OverallServiceUsageStats'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Get the overall service usage stats by type related to requested account
  /rest/service/report/{accountID}:
    get:
      description: Generates service usage report for account in a given timeframe
        in csv format
      operationId: getServiceUsageReport
      parameters:
        - description: ID of the account
          in: path
          name: accountID
          required: true
          type: string
        - description: start time in unix format in milliseconds
          in: query
          name: startTime
          required: true
          type: integer
        - description: end time in unix format in milliseconds
          in: query
          name: endTime
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                type: string
              type: array
            type: array
        "500":
          description: Internal Server Error
      summary: Generates service usage report in csv format
  /rest/service/stats/{accountID}:
    get:
      description: Get service usage stats for account
      operationId: getAccountServiceUsageStats
      parameters:
        - description: ID of the account
          in: path
          name: accountID
          required: true
          type: string
        - description: group by period (day/month)
          in: query
          name: groupBy
          required: true
          type: string
        - description: start time in unix format in milliseconds
          in: query
          name: startTime
          required: true
          type: integer
        - description: end time in unix format in milliseconds
          in: query
          name: endTime
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/chaosserviceusage.UsageStats'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Get the service usage stats related to requested account grouped by
        day or month
  /rest/usage:
    get:
      description: Get resource usage
      operationId: getResourceUsage
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.CHAOSLicenseUsageDTO'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Get resource usage
  /rest/v2/applicationmaps:
    post:
      description: List target network maps with chaos context
      operationId: listTargetNetworkMaps
      parameters:
        - description: list Target Network Maps request
          in: body
          name: request"
          required: true
          schema:
            $ref: '#/definitions/networkmap.ListTargetNetworkMapRequest'
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
        - default: 0
          description: page number
          in: query
          name: page
          required: true
          type: integer
        - default: 10
          description: limit per page
          in: query
          name: limit
          required: true
          type: integer
        - description: search based on name
          in: query
          name: search
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/networkmap.ListTargetNetworkMapResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      summary: List target network maps with chaos context
  /rest/v2/applicationmaps/{applicationmapid}:
    delete:
      description: Delete application network map with chaos context
      operationId: deleteTargetNetworkMap
      parameters:
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
        - description: environment id that want to access the resource
          in: query
          name: environmentIdentifier
          required: true
          type: string
        - description: infra id that want to access the resource
          in: query
          name: infraId
          required: true
          type: string
        - description: Application map ID
          in: path
          name: applicationmapid
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      summary: Delete application network map with chaos context
    get:
      description: Get target network map with chaos context
      operationId: getTargetNetworkMap
      parameters:
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
        - description: environment id that want to access the resource
          in: query
          name: environmentIdentifier
          required: true
          type: string
        - description: infra id that want to access the resource
          in: query
          name: infraId
          required: true
          type: string
        - description: Application map ID
          in: path
          name: applicationmapid
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/networkmap.GetTargetNetworkMapResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      summary: Get target network map with chaos context
  /rest/v2/applicationmaps/{applicationmapid}/canretry:
    get:
      description: can retry or not chaos experiment creation for the given target
        network map
      operationId: canRetryExperimentCreation
      parameters:
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
        - description: environment id that want to access the resource
          in: query
          name: environmentIdentifier
          required: true
          type: string
        - description: infra id that want to access the resource
          in: query
          name: infraId
          required: true
          type: string
        - description: Application map ID
          in: path
          name: applicationmapid
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/networkmap.CanRetryExperimentCreationResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      summary: can retry or not chaos experiment creation for the given target network
        map
  /rest/v2/applicationmaps/{applicationmapid}/retry:
    post:
      description: retry chaos experiment creation for the given target network map
      operationId: retryExperimentCreation
      parameters:
        - description: Retry experiment creation request
          in: body
          name: request"
          required: true
          schema:
            $ref: '#/definitions/networkmap.RetryExperimentCreationRequest'
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
        - description: environment id that want to access the resource
          in: query
          name: environmentIdentifier
          required: true
          type: string
        - description: infra id that want to access the resource
          in: query
          name: infraId
          required: true
          type: string
        - description: Application map ID
          in: path
          name: applicationmapid
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/networkmap.RetryExperimentCreationResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      summary: retry chaos experiment creation for the given target network map
  /rest/v2/applicationmaps/{applicationmapid}/targetservices:
    get:
      description: Get target discovered service with chaos context
      operationId: listService
      parameters:
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
        - description: environment id that want to access the resource
          in: query
          name: environmentIdentifier
          required: true
          type: string
        - description: infra id that want to access the resource
          in: query
          name: infraId
          required: true
          type: string
        - description: Application map ID
          in: path
          name: applicationmapid
          required: true
          type: string
        - default: 0
          description: page number
          in: query
          name: page
          required: true
          type: integer
        - default: 10
          description: limit per page
          in: query
          name: limit
          required: true
          type: integer
        - description: search based on name
          in: query
          name: search
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/networkmap.ListTargetServiceResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      summary: List target discovered service with chaos context
  /rest/v2/applicationmaps/{applicationmapid}/targetservices/{targetserviceid}:
    get:
      description: Get target discovered service with chaos context
      operationId: getServiceResponse
      parameters:
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
        - description: environment id that want to access the resource
          in: query
          name: environmentIdentifier
          required: true
          type: string
        - description: infra id that want to access the resource
          in: query
          name: infraId
          required: true
          type: string
        - description: Application map ID
          in: path
          name: applicationmapid
          required: true
          type: string
        - description: Target discovered service ID Identity
          in: path
          name: targetserviceid
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/networkmap.GetTargetServiceResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      summary: Get target discovered service with chaos context
  /rest/v2/bulkaction/bulkexperimentdelete:
    post:
      description: Deletes given experiments
      operationId: bulkExperimentDelete
      parameters:
        - description: Retry experiment creation request
          in: body
          name: experiments"
          required: true
          schema:
            $ref: '#/definitions/bulkaction.BulkDeleteExperimetsInput'
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/bulkaction.BulkDeleteExperimetsResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      summary: Deletes given experiments
  /rest/v2/bulkaction/bulkexperimenttagsadd:
    post:
      description: Adds tags in given experiments
      operationId: bulkExperimentTagAdd
      parameters:
        - description: Retry experiment creation request
          in: body
          name: experiments"
          required: true
          schema:
            $ref: '#/definitions/bulkaction.BulkAddTagsInExperimetsInput'
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/bulkaction.BulkAddTagsInExperimetsResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      summary: Adds tags in given experiments
  /rest/v2/experiment:
    get:
      description: Get list of Chaos V2 Experiments
      operationId: listChaosV2Experiment
      parameters:
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
        - default: 0
          description: page number
          in: query
          name: page
          required: true
          type: integer
        - default: 10
          description: limit per page
          in: query
          name: limit
          required: true
          type: integer
        - description: filter based on start time
          in: query
          name: startDate
          type: string
        - description: filter based on end time
          in: query
          name: endDate
          type: string
        - description: search based on experiment name
          in: query
          name: experimentName
          type: string
        - description: search based on infra name
          in: query
          name: infraName
          type: string
        - description: filter based on infraId
          in: query
          name: infraId
          type: string
        - description: filter based on infra state
          in: query
          name: infraActive
          type: boolean
        - description: filter based on tags
          in: query
          name: tags
          type: string
        - description: filter based on experimentID
          in: query
          name: experimentIds
          type: string
        - description: filter based on environmentID
          in: query
          name: environmentIdentifier
          type: string
        - description: filter experiments based on experiment ids
          in: query
          name: targetNetworkMapIds
          type: string
        - description: filter based on status
          in: query
          name: status
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ListExperimentV2Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      summary: Get list of Chaos V2 Experiments
    post:
      description: Save a chaos v2 experiment
      operationId: saveChaosV2Experiment
      parameters:
        - description: Save Experiment
          in: body
          name: experiment"
          required: true
          schema:
            $ref: '#/definitions/types.ExperimentCreationRequest'
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ExperimentCreationResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      summary: Save a chaos v2 experiment
  /rest/v2/experiment/{experimentId}:
    delete:
      description: Delete Chaos V2 experiment
      operationId: deleteChaosV2Experiment
      parameters:
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
        - description: experiment id that will be used to delete the experiment
          in: path
          name: experimentId
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.DeleteChaosV2ExperimentResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      summary: Delete Chaos V2 experiment
    get:
      description: Get a chaos v2 experiment
      operationId: getChaosV2Experiment
      parameters:
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
        - description: experimentId to be fetched
          in: path
          name: experimentId
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.GetExperimentV2Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      summary: Get a chaos v2 experiment
  /rest/v2/experiment/{experimentId}/stop:
    post:
      description: Stop Chaos V2 experiment
      operationId: stopChaosV2Experiment
      parameters:
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
        - description: experiment id that will be used to stop the experiment
          in: path
          name: experimentId
          required: true
          type: string
        - description: experiment run id that will be used to stop the experiment run
          in: query
          name: experimentRunId
          required: true
          type: string
        - description: notify id that will be used to stop the experiment run
          in: query
          name: notifyId
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.StopChaosV2ExperimentResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      summary: Stop Chaos V2 experiment
  /rest/v2/experiment/bulk/run:
    post:
      description: Create pipeline to run experiments in bulk
      operationId: createChaosExperimentPipeline
      parameters:
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
        - description: object containing pipeline id along with metadata
          in: body
          name: experimentSpec
          required: true
          schema:
            $ref: '#/definitions/pipelines.ChaosPipelineInput'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pipelines.CreatePipelineResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      summary: Create pipeline to run experiments in bulk
  /rest/v2/experiment/cron:
    post:
      description: Update a chaos v2 cron experiment
      operationId: updateChaosV2CronExperiment
      parameters:
        - description: Update Cron V2 Experiment
          in: body
          name: experiment"
          required: true
          schema:
            $ref: '#/definitions/types.UpdateCronExperimentStateRequest'
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.UpdateCronExperimentStateResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      summary: Update a chaos v2 cron experiment
  /rest/v2/experiment/run/{experimentId}:
    post:
      description: Run a chaos v2 experiment
      operationId: runChaosV2Experiment
      parameters:
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
        - description: experimentId to be executed
          in: path
          name: experimentId
          required: true
          type: string
        - description: experimentId to be executed
          in: query
          name: isOnboardingRun
          required: true
          type: boolean
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ReRunChaosWorkflowResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      summary: Run a chaos v2 experiment
  /rest/v2/gameday:
    post:
      description: Create a chaos v2 gameday
      operationId: createGamedayV2
      parameters:
        - description: Create Gameday
          in: body
          name: '"createGameday"'
          required: true
          schema:
            $ref: '#/definitions/types.CreateGamedayRequest'
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.CreateGamedayResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      summary: Create a chaos v2 gameday
    put:
      description: Update a chaos v2 gameday
      operationId: updateGamedayV2
      parameters:
        - description: Update Gameday
          in: body
          name: '"updateGameday"'
          required: true
          schema:
            $ref: '#/definitions/types.UpdateGamedayRequest'
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      summary: Update a chaos v2 gameday
  /rest/v2/gameday/{gamedayId}:
    delete:
      description: Get a chaos v2 Gameday
      operationId: deleteGamedayV2
      parameters:
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
        - description: gamedayId of gameday to be deleted
          in: path
          name: gamedayId
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      summary: Get a chaos v2 Gameday
    get:
      description: Get a chaos v2 Gameday
      operationId: GetGamedayV2
      parameters:
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
        - description: gamedayId to be fetched
          in: path
          name: gamedayId
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.GetGamedayResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      summary: Get a chaos v2 Gameday
  /rest/v2/gameday/{gamedayId}/run:
    post:
      description: Create a chaos v2 gameday run
      operationId: createGamedayRunV2
      parameters:
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
        - description: gamedayId to be run
          in: path
          name: gamedayId
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.CreateGamedayRunResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      summary: Create a chaos v2 gameday run
  /rest/v2/gameday/{gamedayId}/run/{gamedayRunId}:
    get:
      description: Fetch a chaos v2 gameday run
      operationId: getGamedayRunV2
      parameters:
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
        - description: gamedayId of the run
          in: path
          name: gamedayId
          required: true
          type: string
        - description: gamedayRunId to be run
          in: path
          name: gamedayRunId
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Run'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      summary: Fetch a chaos v2 gameday run
    put:
      description: Update a chaos v2 gameday run
      operationId: updateGamedayRunV2
      parameters:
        - description: Update Gameday Run
          in: body
          name: run"
          required: true
          schema:
            $ref: '#/definitions/types.UpdateGameDayRunRequest'
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
        - description: gamedayId of the run
          in: path
          name: gamedayId
          required: true
          type: string
        - description: gamedayRunId to be updated
          in: path
          name: gamedayRunId
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      summary: Update a chaos v2 gameday run
  /rest/v2/gameday/{gamedayId}/run_approval/{gamedayRunId}:
    put:
      description: Update a chaos v2 gameday run
      operationId: updateGamedayRunStakeHolderActionsV2
      parameters:
        - description: Update Gameday Run Stakeholder action
          in: body
          name: action"
          required: true
          schema:
            $ref: '#/definitions/types.UpdateStakeHolderActionRequest'
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
        - description: gamedayId of the run
          in: path
          name: gamedayId
          required: true
          type: string
        - description: gamedayRunId to be updated
          in: path
          name: gamedayRunId
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      summary: Update a chaos v2 gameday run
  /rest/v2/gameday/{gamedayId}/run_checklist/{gamedayRunId}:
    put:
      description: Update a chaos v2 gameday run
      operationId: updateGamedayRunPrerequisitesV2
      parameters:
        - description: Update Gameday Run Prerequisite
          in: body
          name: prerequisites"
          required: true
          schema:
            $ref: '#/definitions/types.UpdatePrerequisiteRequest'
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
        - description: gamedayId of the run
          in: path
          name: gamedayId
          required: true
          type: string
        - description: gamedayRunId to be updated
          in: path
          name: gamedayRunId
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      summary: Update a chaos v2 gameday run
  /rest/v2/gameday/{gamedayId}/runs:
    get:
      description: Fetch chaos v2 gameday runs
      operationId: listGamedayRunV2
      parameters:
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
        - description: gamedayId of the run
          in: path
          name: gamedayId
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ListGamedayRunV2Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      summary: Fetch chaos v2 gameday runs
  /rest/v2/gamedays:
    get:
      description: Get list of Chaos V2 Gamedays
      operationId: listGamedayV2
      parameters:
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
        - default: 0
          description: page number
          in: query
          name: page
          required: true
          type: integer
        - default: 10
          description: limit per page
          in: query
          name: limit
          required: true
          type: integer
        - description: search based on gameday name
          in: query
          name: gamedayName
          type: string
        - default: false
          description: sort the response in ascending order
          in: query
          name: sortAscending
          type: boolean
        - default: UPDATED_AT
          description: 'sort the response w.r.t field: CREATED_AT/UPDATED_AT/NAME'
          enum:
            - NAME
            - CREATED_AT
            - UPDATED_AT
          in: query
          name: sortField
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ListGamedayV2Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      summary: Get list of Chaos V2 Gamedays
  /rest/v2/harness-infrastructures:
    get:
      description: List harness infras
      operationId: listHarnessInfra
      parameters:
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
        - description: environment id that want to access the resource
          in: query
          name: environmentIdentifier
          required: true
          type: string
        - default: 0
          description: page number
          in: query
          name: page
          required: true
          type: integer
        - default: 10
          description: limit per page
          in: query
          name: limit
          required: true
          type: integer
        - description: search based on name
          in: query
          name: search
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.ListHarnessInfrastructureResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      summary: List harness infras
  /rest/v2/infrastructure:
    post:
      description: Register a new v2 infra
      operationId: registerInfraV2
      parameters:
        - description: Register Infra V2
          in: body
          name: request"
          required: true
          schema:
            $ref: '#/definitions/infra_v2.RegisterInfrastructureV2Request'
        - description: correlation id is used to debug micro svc communication
          in: query
          name: correlationID
          type: string
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/infra_v2.RegisterInfrastructureV2Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      security:
        - ApiKeyAuth: []
      summary: Register a new v2 infra
    put:
      description: Update a new v2 infra
      operationId: updateInfraV2
      parameters:
        - description: update Infra V2
          in: body
          name: request"
          required: true
          schema:
            $ref: '#/definitions/infra_v2.UpdateKubernetesInfrastructureV2Request'
        - description: correlation id is used to debug micro svc communication
          in: query
          name: correlationID
          type: string
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/infra_v2.UpdateKubernetesInfrastructureV2Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      summary: Update a new v2 infra
  /rest/v2/infrastructure/{identity}:
    delete:
      description: Delete a new v2 infra
      operationId: deleteInfraV2
      parameters:
        - description: Chaos V2 Infra Identity
          in: path
          name: identity
          required: true
          type: string
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/infra_v2.DeleteKubernetesInfraV2Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      summary: Delete a v2 infra
    get:
      description: Get a new v2 infra
      operationId: getInfraV2
      parameters:
        - description: Chaos V2 Infra Identity
          in: path
          name: identity
          required: true
          type: string
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
        - description: environment identifier to filter resource
          in: query
          name: environmentIdentifier
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/infra_v2.KubernetesInfrastructureV2Details'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      summary: Get a new v2 infra
  /rest/v2/infrastructure/{identity}/connector:
    get:
      description: Get Connector For Infra
      operationId: getConnectorForInfra
      parameters:
        - description: Chaos V2 Infra Identity
          in: path
          name: identity
          required: true
          type: string
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
        - description: environment id that want to access the resource
          in: query
          name: environmentIdentifier
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.GetHarnessInfrastructureResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      summary: Get Connector For Infra
  /rest/v2/infrastructures:
    post:
      description: List a new v2 infra
      operationId: listInfraV2
      parameters:
        - description: list Infra V2
          in: body
          name: request"
          required: true
          schema:
            $ref: '#/definitions/infra_v2.ListKubernetesInfraV2Request'
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
        - description: include legacy infra details
          in: query
          name: includeLegacyInfra
          type: boolean
        - description: filter infra
          in: query
          name: environmentIdentifier
          type: string
        - default: 0
          description: page number
          in: query
          name: page
          required: true
          type: integer
        - default: 10
          description: limit per page
          in: query
          name: limit
          required: true
          type: integer
        - description: search based on name
          in: query
          name: search
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/infra_v2.ListKubernetesInfraV2Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      summary: List a new v2 infra
  /rest/v2/infrastructures/chaos-enabled:
    post:
      description: List a new v2 infra
      operationId: listChaosEnabledInfraV2
      parameters:
        - description: list Infra V2
          in: body
          name: request"
          required: true
          schema:
            $ref: '#/definitions/infra_v2.ListKubernetesInfraV2Request'
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
        - description: filter infra
          in: query
          name: environmentIdentifier
          type: string
        - default: 0
          description: page number
          in: query
          name: page
          required: true
          type: integer
        - default: 10
          description: limit per page
          in: query
          name: limit
          required: true
          type: integer
        - description: search based on name
          in: query
          name: search
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/infra_v2.ListKubernetesInfraV2Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      summary: List a new v2 infra
  /rest/v2/list-infras:
    post:
      deprecated: true
      description: Get list of active unused connector
      operationId: listK8sInfrasV2
      parameters:
        - description: List Infra
          in: body
          name: request"
          required: true
          schema:
            $ref: '#/definitions/model.ListInfraRequest'
        - description: correlation id is used to debug micro svc communication
          in: query
          name: correlationID
          type: string
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ListInfraResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      summary: Get list of active unused connector
  /rest/v2/note:
    patch:
      description: Update a resource note
      operationId: updateNote
      parameters:
        - description: Update a note
          in: body
          name: '"updateNote"'
          required: true
          schema:
            $ref: '#/definitions/types.UpdateNoteRequest'
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      summary: Update a resource note
  /rest/v2/notes:
    get:
      description: Get a chaos resource Note
      operationId: getNote
      parameters:
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
        - description: gamedayRunID as filter for summary notes
          in: query
          name: gamedayRunID
          type: string
        - description: experimentRunId as filter for experiment run notes
          in: query
          name: experimentRunId
          type: string
        - description: experimentId as filter for gameday experiment notes
          in: query
          name: experimentId
          type: string
        - description: type of note
          enum:
            - experiment-run
            - gameday-run-summary
            - gameday-run-experiment
          in: query
          name: noteType
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Notes'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      summary: Get a chaos resource Note
    post:
      description: Add a resource note
      operationId: addNote
      parameters:
        - description: Create Gameday
          in: body
          name: note"
          required: true
          schema:
            $ref: '#/definitions/types.CreateNoteRequest'
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.CreateNoteResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      summary: Add a resource note
  /rest/v2/onboarding:
    get:
      description: Get V2 Onboarding
      operationId: listV2Onboarding
      parameters:
        - default: 0
          description: page number
          in: query
          name: page
          required: true
          type: integer
        - default: 10
          description: limit per page
          in: query
          name: limit
          required: true
          type: integer
        - description: corelation id is used to debug micro svc communication
          in: query
          name: corelationID
          type: string
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
        - description: search for the onboarding
          in: query
          name: search
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2_onboarding.V2OnboardingList'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      summary: Get V2 Onboarding
    post:
      description: Create V2 Onboarding
      operationId: createV2Onboarding
      parameters:
        - description: Create Onboarding
          in: body
          name: onboarding"
          required: true
          schema:
            $ref: '#/definitions/v2_onboarding.V2OnboardingRequest'
        - description: corelation id is used to debug micro svc communication
          in: query
          name: corelationID
          type: string
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2_onboarding.V2Onboarding'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      summary: Create V2 Onboarding
  /rest/v2/onboarding-confirm-discovery/{onboardingid}:
    post:
      description: confirm discovery step in manual onboarding
      operationId: onboardingConfirmDiscovery
      parameters:
        - description: onboarding id
          in: path
          name: onboardingid
          required: true
          type: string
        - description: corelation id is used to debug micro svc communication
          in: query
          name: corelationID
          type: string
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2_onboarding.ConfirmDiscoveryResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      summary: confirm discovery step in manual onboarding
  /rest/v2/onboarding-confirm-experiment-creation/{onboardingid}:
    post:
      description: confirm experiment creation step in manual onboarding
      operationId: onboardingConfirmExperimentCreation
      parameters:
        - description: onboarding id
          in: path
          name: onboardingid
          required: true
          type: string
        - description: corelation id is used to debug micro svc communication
          in: query
          name: corelationID
          type: string
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
        - description: Onboarding Confirm ExperimentCreation
          in: body
          name: ExperimentCreation"
          required: true
          schema:
            $ref: '#/definitions/v2_onboarding.ConfirmExperimentCreationRequest'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2_onboarding.ConfirmExperimentCreationResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      summary: confirm experiment creation step in manual onboarding
  /rest/v2/onboarding-confirm-experiment-run/{onboardingid}:
    post:
      description: confirm experiment run step in manual onboarding
      operationId: onboardingConfirmExperimentRun
      parameters:
        - description: onboarding id
          in: path
          name: onboardingid
          required: true
          type: string
        - description: corelation id is used to debug micro svc communication
          in: query
          name: corelationID
          type: string
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2_onboarding.ConfirmExperimentRunResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      summary: confirm experiment run step in manual onboarding
  /rest/v2/onboarding-confirm-networkmap/{onboardingid}:
    post:
      description: confirm network map creation step in manual onboarding
      operationId: onboardingConfirmNetworkMap
      parameters:
        - description: onboarding id
          in: path
          name: onboardingid
          required: true
          type: string
        - description: Onboarding Confirm NetworkMap
          in: body
          name: NetworkMap"
          required: true
          schema:
            $ref: '#/definitions/v2_onboarding.ConfirmNetworkMapRequest'
        - description: corelation id is used to debug micro svc communication
          in: query
          name: corelationID
          type: string
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2_onboarding.ConfirmNetworkMapResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      summary: confirm network map creation step in manual onboarding
  /rest/v2/onboarding/{onboardingid}:
    get:
      description: Get V2 Onboarding
      operationId: getV2Onboarding
      parameters:
        - description: onboarding id
          in: path
          name: onboardingid
          required: true
          type: string
        - description: corelation id is used to debug micro svc communication
          in: query
          name: corelationID
          type: string
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2_onboarding.V2Onboarding'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      summary: Get V2 Onboarding
  /rest/v2/onboarding/{onboardingid}/experiments:
    get:
      description: Get V2 Onboarding experiments
      operationId: getOnboardingExperiments
      parameters:
        - description: onboarding id
          in: path
          name: onboardingid
          required: true
          type: string
        - description: corelation id is used to debug micro svc communication
          in: query
          name: corelationID
          type: string
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          type: string
        - default: 0
          description: page number
          in: query
          name: page
          required: true
          type: integer
        - default: 5
          description: limit per page
          in: query
          name: limit
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2_onboarding.OnboardingExperimentResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      summary: Get V2 Onboarding experiments
  /rest/v2/onboarding/{onboardingid}/stop:
    post:
      description: Stop V2 Onboarding experiments
      operationId: stopOnboardingExperiments
      parameters:
        - description: onboarding id
          in: path
          name: onboardingid
          required: true
          type: string
        - description: corelation id is used to debug micro svc communication
          in: query
          name: corelationID
          type: string
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      summary: Stop V2 Onboarding experiments
  /v1/notification-experiments:
    get:
      consumes:
        - application/json
      description: List all experiments with active infrastructures in minimal format
        for notification service
      operationId: listExperimentsWithActiveInfrasMinimalNotification
      parameters:
        - description: account id is the account where you want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id is the organization where you want to access
            the resource
          in: query
          name: orgIdentifier
          required: true
          type: string
        - description: project id is the project where you want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
        - default: 0
          description: page number
          in: query
          name: page
          type: integer
        - default: 15
          description: limit per page
          in: query
          name: limit
          type: integer
        - description: search filter based on name
          in: query
          name: experimentName
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.ListExperimentsWithActiveInfrasMinimalNotificationResponse'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
        - ApiKeyAuth: []
      summary: List chaos experiments with active infrastructures in minimal format
        for notification service
      tags:
        - listExperimentsMinimalNotification
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: X-API-Key
    type: apiKey
  BasicAuth:
    type: basic
swagger: "2.0"