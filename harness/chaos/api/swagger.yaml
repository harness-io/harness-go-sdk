openapi: 3.0.1
info:
  title: Chaos Manager API
  contact: {}
  version: "1.0"
servers:
- url: /api/manager
paths:
  /rest/v2/infrastructure:
    put:
      tags:
      - chaos-sdk
      summary: Update a new v2 infra
      description: Update a new v2 infra
      operationId: updateInfraV2
      parameters:
      - name: correlationID
        in: query
        description: correlation id is used to debug micro svc communication
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: update Infra V2
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/infra_v2.UpdateKubernetesInfrastructureV2Request'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/infra_v2.UpdateKubernetesInfrastructureV2Response'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.RestError'
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: request"
    post:
      tags:
      - chaos-sdk
      summary: Register a new v2 infra
      description: Register a new v2 infra
      operationId: registerInfraV2
      parameters:
      - name: correlationID
        in: query
        description: correlation id is used to debug micro svc communication
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: Register Infra V2
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/infra_v2.RegisterInfrastructureV2Request'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/infra_v2.RegisterInfrastructureV2Response'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.RestError'
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: request"
  /rest/v2/infrastructure/{environmentIdentifier}/{identity}:
    delete:
      tags:
      - chaos-sdk
      summary: Delete a v2 infra
      description: Delete a new v2 infra
      operationId: deleteInfraV2
      parameters:
      - name: identity
        in: path
        description: Chaos V2 Infra Identity
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: environmentIdentifier
        in: path
        description: Chaos V2 Environment Identity
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/infra_v2.DeleteKubernetesInfraV2Response'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.RestError'
      security:
      - ApiKeyAuth: []
  /rest/v2/infrastructure/{identity}:
    get:
      tags:
      - chaos-sdk
      summary: Get a new v2 infra
      description: Get a new v2 infra
      operationId: getInfraV2
      parameters:
      - name: identity
        in: path
        description: Chaos V2 Infra Identity
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: environmentIdentifier
        in: query
        description: environment identifier to filter resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/infra_v2.KubernetesInfrastructureV2Details'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.RestError'
      security:
      - ApiKeyAuth: []
  /rest/v2/infrastructures:
    post:
      tags:
      - chaos-sdk
      summary: List a new v2 infra
      description: List a new v2 infra
      operationId: listInfraV2
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: includeLegacyInfra
        in: query
        description: include legacy infra details
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: environmentIdentifier
        in: query
        description: filter infra
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: page number
        required: true
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: limit per page
        required: true
        style: form
        explode: true
        schema:
          type: integer
          default: 10
      - name: search
        in: query
        description: search based on name
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: list Infra V2
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/infra_v2.ListKubernetesInfraV2Request'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/infra_v2.ListKubernetesInfraV2Response'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.RestError'
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: request"
components:
  schemas:
    api.RestError:
      type: object
      properties:
        description:
          type: string
        message:
          type: string
    github_com_harness_hce-saas_hce-sdk_types_api_k8sifs_image_registry.ScopedIdentifiers:
      type: object
      properties:
        accountIdentifier:
          type: string
          description: Harness AccountID
        orgIdentifier:
          type: string
          description: Harness OrgID
        projectIdentifier:
          type: string
          description: Harness projectID
      example:
        orgIdentifier: orgIdentifier
        accountIdentifier: accountIdentifier
        projectIdentifier: projectIdentifier
    image_registry.CustomImagesRequest:
      type: object
      properties:
        ddcr:
          type: string
        ddcrFault:
          type: string
        ddcrLib:
          type: string
        logWatcher:
          type: string
      example:
        ddcr: ddcr
        ddcrFault: ddcrFault
        ddcrLib: ddcrLib
        logWatcher: logWatcher
    image_registry.ImageRegistryV2:
      type: object
      properties:
        createdAt:
          type: string
        createdBy:
          $ref: '#/components/schemas/image_registry.UserDetails'
        customImages:
          $ref: '#/components/schemas/image_registry.CustomImagesRequest'
        identifier:
          $ref: '#/components/schemas/github_com_harness_hce-saas_hce-sdk_types_api_k8sifs_image_registry.ScopedIdentifiers'
        infraID:
          type: string
        isDefault:
          type: boolean
        isOverrideAllowed:
          type: boolean
        isPrivate:
          type: boolean
        registryAccount:
          type: string
        registryServer:
          type: string
        secretName:
          type: string
        updatedAt:
          type: string
        updatedBy:
          $ref: '#/components/schemas/image_registry.UserDetails'
        useCustomImages:
          type: boolean
      example:
        identifier:
          orgIdentifier: orgIdentifier
          accountIdentifier: accountIdentifier
          projectIdentifier: projectIdentifier
        secretName: secretName
        updatedBy: null
        customImages:
          ddcr: ddcr
          ddcrFault: ddcrFault
          ddcrLib: ddcrLib
          logWatcher: logWatcher
        isPrivate: true
        createdAt: createdAt
        registryAccount: registryAccount
        isDefault: true
        isOverrideAllowed: true
        createdBy:
          userID: userID
          email: email
          username: username
        useCustomImages: true
        registryServer: registryServer
        infraID: infraID
        updatedAt: updatedAt
    image_registry.UserDetails:
      type: object
      properties:
        email:
          type: string
        userID:
          type: string
        username:
          type: string
      example:
        userID: userID
        email: email
        username: username
    infra_v2.DeleteKubernetesInfraV2Response:
      type: object
      properties:
        correlationId:
          type: string
        identity:
          type: string
        message:
          type: string
      example:
        identity: identity
        correlationId: correlationId
        message: message
    infra_v2.Env:
      type: object
      properties:
        key:
          type: string
        name:
          type: string
        value:
          type: string
        valueFrom:
          $ref: '#/components/schemas/infra_v2.EnvValueFrom'
      example:
        name: name
        value: value
        key: key
        valueFrom: configMapKeyRef
    infra_v2.EnvValueFrom:
      type: string
      enum:
      - configMapKeyRef
      - secretKeyRef
      - value
      - valueFrom
      x-enum-varnames:
      - EnvValueFromConfigMapKeyRef
      - EnvValueFromSecretKeyRef
      - EnvValueFromValue
      - EnvValueFromValueFrom
    infra_v2.Identifiers:
      type: object
      properties:
        accountIdentifier:
          type: string
        orgIdentifier:
          type: string
        projectIdentifier:
          type: string
      example:
        orgIdentifier: orgIdentifier
        accountIdentifier: accountIdentifier
        projectIdentifier: projectIdentifier
    infra_v2.InfraScope:
      type: string
      enum:
      - NAMESPACE
      - CLUSTER
      x-enum-varnames:
      - InfraScopeNamespace
      - InfraScopeCluster
    infra_v2.InfraStatus:
      type: string
      enum:
      - ACTIVE
      - INACTIVE
      - PENDING
      - UPGRADING
      - UPGRADE_REQUIRED
      x-enum-varnames:
      - InfraStatusActive
      - InfraStatusInactive
      - InfraStatusPending
      - InfraStatusUpgrading
      - InfraStatusUpgradeRequired
    infra_v2.InfraType:
      type: string
      enum:
      - KUBERNETES
      - KUBERNETESV2
      x-enum-varnames:
      - InfraTypeKubernetes
      - InfraTypeKubernetesV2
    infra_v2.InfraTypeFilter:
      type: string
      enum:
      - KUBERNETES
      - KUBERNETESV2
      - ALL
      x-enum-varnames:
      - InfraTypeFilterKubernetes
      - InfraTypeFilterKubernetesV2
      - InfraTypeFilterAll
    infra_v2.InstallationType:
      type: string
      enum:
      - CONNECTOR
      - MANIFEST
      - CONNECTOR_V2
      x-enum-varnames:
      - InstallationTypeConnector
      - InstallationTypeManifest
      - InstallationTypeConnectorV2
    infra_v2.KubernetesInfraV2FilterInput:
      type: object
      properties:
        infraScope:
          $ref: '#/components/schemas/infra_v2.InfraScope'
        infraTypeFilter:
          $ref: '#/components/schemas/infra_v2.InfraTypeFilter'
        tags:
          type: array
          items:
            type: string
    infra_v2.KubernetesInfrastructureV2Details:
      type: object
      properties:
        annotation:
          type: object
          additionalProperties:
            type: string
        containers:
          type: string
        createdAt:
          type: string
        createdBy:
          $ref: '#/components/schemas/infra_v2.UserDetails'
        deploymentType:
          type: string
        description:
          type: string
        discoveryAgentID:
          type: string
        env:
          type: array
          items:
            $ref: '#/components/schemas/infra_v2.Env'
        environmentID:
          type: string
        harnessInfraType:
          type: string
        identifier:
          $ref: '#/components/schemas/infra_v2.Identifiers'
        identity:
          type: string
        imageRegistry:
          $ref: '#/components/schemas/image_registry.ImageRegistryV2'
        infraID:
          type: string
        infraNamespace:
          type: string
        infraScope:
          $ref: '#/components/schemas/infra_v2.InfraScope'
        infraType:
          $ref: '#/components/schemas/infra_v2.InfraType'
        insecureSkipVerify:
          type: boolean
        installationType:
          $ref: '#/components/schemas/infra_v2.InstallationType'
        isChaosEnabled:
          type: boolean
        k8sConnectorID:
          type: string
        label:
          type: object
          additionalProperties:
            type: string
        lastHeartbeat:
          type: integer
        lastWorkflowTimestamp:
          type: string
        mtls:
          $ref: '#/components/schemas/infra_v2.MTLSConfiguration'
        name:
          type: string
        noOfSchedules:
          type: integer
        noOfWorkflows:
          type: integer
        nodeSelector:
          type: object
          additionalProperties:
            type: string
        platformName:
          type: string
        proxy:
          $ref: '#/components/schemas/infra_v2.ProxyConfiguration'
        runAsGroup:
          type: integer
        runAsUser:
          type: integer
        serviceAccount:
          type: string
        status:
          $ref: '#/components/schemas/infra_v2.InfraStatus'
        tags:
          type: array
          items:
            type: string
        tolerations:
          type: array
          items:
            $ref: '#/components/schemas/v1.Toleration'
        updateStatus:
          $ref: '#/components/schemas/infra_v2.UpdateStatus'
        updatedAt:
          type: string
        updatedBy:
          $ref: '#/components/schemas/infra_v2.UserDetails'
        upgrade:
          $ref: '#/components/schemas/infra_v2.Upgrade'
        version:
          type: string
        volumeMounts:
          type: array
          items:
            $ref: '#/components/schemas/v1.VolumeMount'
        volumes:
          type: array
          items:
            $ref: '#/components/schemas/infra_v2.Volumes'
      example:
        isChaosEnabled: true
        discoveryAgentID: discoveryAgentID
        k8sConnectorID: k8sConnectorID
        lastHeartbeat: 0
        noOfWorkflows: 1
        description: description
        nodeSelector:
          key: nodeSelector
        volumeMounts:
        - mountPath: mountPath
          mountPropagation: ""
          name: name
          readOnly: true
          subPath: subPath
          subPathExpr: subPathExpr
        - mountPath: mountPath
          mountPropagation: ""
          name: name
          readOnly: true
          subPath: subPath
          subPathExpr: subPathExpr
        createdAt: createdAt
        tolerations:
        - effect: ""
          tolerationSeconds: 2
          value: value
          key: key
          operator: ""
        - effect: ""
          tolerationSeconds: 2
          value: value
          key: key
          operator: ""
        harnessInfraType: harnessInfraType
        identity: identity
        platformName: platformName
        infraID: infraID
        mtls:
          secretName: secretName
          certPath: certPath
          keyPath: keyPath
          url: url
        updatedAt: updatedAt
        annotation:
          key: annotation
        identifier:
          orgIdentifier: orgIdentifier
          accountIdentifier: accountIdentifier
          projectIdentifier: projectIdentifier
        noOfSchedules: 6
        updatedBy: null
        upgrade:
          isAutoUpgradeEnabled: true
          status: UPGRADING_INFRA
        infraNamespace: infraNamespace
        volumes:
        - sizeLimit: sizeLimit
          name: name
        - sizeLimit: sizeLimit
          name: name
        serviceAccount: serviceAccount
        label:
          key: label
        env:
        - name: name
          value: value
          key: key
          valueFrom: configMapKeyRef
        - name: name
          value: value
          key: key
          valueFrom: configMapKeyRef
        version: version
        lastWorkflowTimestamp: lastWorkflowTimestamp
        runAsGroup: 5
        infraScope: NAMESPACE
        tags:
        - tags
        - tags
        runAsUser: 5
        proxy:
          httpProxy: httpProxy
          httpsProxy: httpsProxy
          noProxy: noProxy
          url: url
        deploymentType: deploymentType
        environmentID: environmentID
        imageRegistry:
          identifier:
            orgIdentifier: orgIdentifier
            accountIdentifier: accountIdentifier
            projectIdentifier: projectIdentifier
          secretName: secretName
          updatedBy: null
          customImages:
            ddcr: ddcr
            ddcrFault: ddcrFault
            ddcrLib: ddcrLib
            logWatcher: logWatcher
          isPrivate: true
          createdAt: createdAt
          registryAccount: registryAccount
          isDefault: true
          isOverrideAllowed: true
          createdBy:
            userID: userID
            email: email
            username: username
          useCustomImages: true
          registryServer: registryServer
          infraID: infraID
          updatedAt: updatedAt
        installationType: CONNECTOR
        createdBy:
          name: name
          email: email
          username: username
        updateStatus: AVAILABLE
        insecureSkipVerify: true
        name: name
        containers: containers
        infraType: KUBERNETES
        status: ACTIVE
    infra_v2.ListKubernetesInfraV2Request:
      type: object
      properties:
        filter:
          $ref: '#/components/schemas/infra_v2.KubernetesInfraV2FilterInput'
        identifier:
          $ref: '#/components/schemas/infra_v2.Identifiers'
    infra_v2.ListKubernetesInfraV2Response:
      type: object
      properties:
        infras:
          type: array
          items:
            $ref: '#/components/schemas/infra_v2.KubernetesInfrastructureV2Details'
        pagination:
          $ref: '#/components/schemas/infra_v2.Pagination'
        totalNoOfInfrastructures:
          type: integer
      example:
        pagination:
          limit: 0
          page: 6
        infras:
        - isChaosEnabled: true
          discoveryAgentID: discoveryAgentID
          k8sConnectorID: k8sConnectorID
          lastHeartbeat: 0
          noOfWorkflows: 1
          description: description
          nodeSelector:
            key: nodeSelector
          volumeMounts:
          - mountPath: mountPath
            mountPropagation: ""
            name: name
            readOnly: true
            subPath: subPath
            subPathExpr: subPathExpr
          - mountPath: mountPath
            mountPropagation: ""
            name: name
            readOnly: true
            subPath: subPath
            subPathExpr: subPathExpr
          createdAt: createdAt
          tolerations:
          - effect: ""
            tolerationSeconds: 2
            value: value
            key: key
            operator: ""
          - effect: ""
            tolerationSeconds: 2
            value: value
            key: key
            operator: ""
          harnessInfraType: harnessInfraType
          identity: identity
          platformName: platformName
          infraID: infraID
          mtls:
            secretName: secretName
            certPath: certPath
            keyPath: keyPath
            url: url
          updatedAt: updatedAt
          annotation:
            key: annotation
          identifier:
            orgIdentifier: orgIdentifier
            accountIdentifier: accountIdentifier
            projectIdentifier: projectIdentifier
          noOfSchedules: 6
          updatedBy: null
          upgrade:
            isAutoUpgradeEnabled: true
            status: UPGRADING_INFRA
          infraNamespace: infraNamespace
          volumes:
          - sizeLimit: sizeLimit
            name: name
          - sizeLimit: sizeLimit
            name: name
          serviceAccount: serviceAccount
          label:
            key: label
          env:
          - name: name
            value: value
            key: key
            valueFrom: configMapKeyRef
          - name: name
            value: value
            key: key
            valueFrom: configMapKeyRef
          version: version
          lastWorkflowTimestamp: lastWorkflowTimestamp
          runAsGroup: 5
          infraScope: NAMESPACE
          tags:
          - tags
          - tags
          runAsUser: 5
          proxy:
            httpProxy: httpProxy
            httpsProxy: httpsProxy
            noProxy: noProxy
            url: url
          deploymentType: deploymentType
          environmentID: environmentID
          imageRegistry:
            identifier:
              orgIdentifier: orgIdentifier
              accountIdentifier: accountIdentifier
              projectIdentifier: projectIdentifier
            secretName: secretName
            updatedBy: null
            customImages:
              ddcr: ddcr
              ddcrFault: ddcrFault
              ddcrLib: ddcrLib
              logWatcher: logWatcher
            isPrivate: true
            createdAt: createdAt
            registryAccount: registryAccount
            isDefault: true
            isOverrideAllowed: true
            createdBy:
              userID: userID
              email: email
              username: username
            useCustomImages: true
            registryServer: registryServer
            infraID: infraID
            updatedAt: updatedAt
          installationType: CONNECTOR
          createdBy:
            name: name
            email: email
            username: username
          updateStatus: AVAILABLE
          insecureSkipVerify: true
          name: name
          containers: containers
          infraType: KUBERNETES
          status: ACTIVE
        - isChaosEnabled: true
          discoveryAgentID: discoveryAgentID
          k8sConnectorID: k8sConnectorID
          lastHeartbeat: 0
          noOfWorkflows: 1
          description: description
          nodeSelector:
            key: nodeSelector
          volumeMounts:
          - mountPath: mountPath
            mountPropagation: ""
            name: name
            readOnly: true
            subPath: subPath
            subPathExpr: subPathExpr
          - mountPath: mountPath
            mountPropagation: ""
            name: name
            readOnly: true
            subPath: subPath
            subPathExpr: subPathExpr
          createdAt: createdAt
          tolerations:
          - effect: ""
            tolerationSeconds: 2
            value: value
            key: key
            operator: ""
          - effect: ""
            tolerationSeconds: 2
            value: value
            key: key
            operator: ""
          harnessInfraType: harnessInfraType
          identity: identity
          platformName: platformName
          infraID: infraID
          mtls:
            secretName: secretName
            certPath: certPath
            keyPath: keyPath
            url: url
          updatedAt: updatedAt
          annotation:
            key: annotation
          identifier:
            orgIdentifier: orgIdentifier
            accountIdentifier: accountIdentifier
            projectIdentifier: projectIdentifier
          noOfSchedules: 6
          updatedBy: null
          upgrade:
            isAutoUpgradeEnabled: true
            status: UPGRADING_INFRA
          infraNamespace: infraNamespace
          volumes:
          - sizeLimit: sizeLimit
            name: name
          - sizeLimit: sizeLimit
            name: name
          serviceAccount: serviceAccount
          label:
            key: label
          env:
          - name: name
            value: value
            key: key
            valueFrom: configMapKeyRef
          - name: name
            value: value
            key: key
            valueFrom: configMapKeyRef
          version: version
          lastWorkflowTimestamp: lastWorkflowTimestamp
          runAsGroup: 5
          infraScope: NAMESPACE
          tags:
          - tags
          - tags
          runAsUser: 5
          proxy:
            httpProxy: httpProxy
            httpsProxy: httpsProxy
            noProxy: noProxy
            url: url
          deploymentType: deploymentType
          environmentID: environmentID
          imageRegistry:
            identifier:
              orgIdentifier: orgIdentifier
              accountIdentifier: accountIdentifier
              projectIdentifier: projectIdentifier
            secretName: secretName
            updatedBy: null
            customImages:
              ddcr: ddcr
              ddcrFault: ddcrFault
              ddcrLib: ddcrLib
              logWatcher: logWatcher
            isPrivate: true
            createdAt: createdAt
            registryAccount: registryAccount
            isDefault: true
            isOverrideAllowed: true
            createdBy:
              userID: userID
              email: email
              username: username
            useCustomImages: true
            registryServer: registryServer
            infraID: infraID
            updatedAt: updatedAt
          installationType: CONNECTOR
          createdBy:
            name: name
            email: email
            username: username
          updateStatus: AVAILABLE
          insecureSkipVerify: true
          name: name
          containers: containers
          infraType: KUBERNETES
          status: ACTIVE
        totalNoOfInfrastructures: 1
    infra_v2.MTLSConfiguration:
      type: object
      properties:
        certPath:
          type: string
        keyPath:
          type: string
        secretName:
          type: string
        url:
          type: string
      example:
        secretName: secretName
        certPath: certPath
        keyPath: keyPath
        url: url
    infra_v2.Pagination:
      type: object
      properties:
        limit:
          type: integer
        page:
          type: integer
      example:
        limit: 0
        page: 6
    infra_v2.ProxyConfiguration:
      type: object
      properties:
        httpProxy:
          type: string
        httpsProxy:
          type: string
        noProxy:
          type: string
        url:
          type: string
      example:
        httpProxy: httpProxy
        httpsProxy: httpsProxy
        noProxy: noProxy
        url: url
    infra_v2.RegisterInfrastructureV2Request:
      type: object
      properties:
        annotation:
          type: object
          additionalProperties:
            type: string
        containers:
          type: string
        correlationId:
          type: string
        description:
          type: string
        discoveryAgentID:
          type: string
        env:
          type: array
          items:
            $ref: '#/components/schemas/infra_v2.Env'
        environmentID:
          type: string
        identity:
          type: string
        imageRegistry:
          $ref: '#/components/schemas/image_registry.ImageRegistryV2'
        infraID:
          type: string
        infraNamespace:
          type: string
        infraScope:
          $ref: '#/components/schemas/infra_v2.InfraScope'
        infraType:
          $ref: '#/components/schemas/infra_v2.InfraType'
        insecureSkipVerify:
          type: boolean
        k8sConnectorID:
          type: string
        label:
          type: object
          additionalProperties:
            type: string
        mtls:
          $ref: '#/components/schemas/infra_v2.MTLSConfiguration'
        name:
          type: string
        nodeSelector:
          type: object
          additionalProperties:
            type: string
        proxy:
          $ref: '#/components/schemas/infra_v2.ProxyConfiguration'
        runAsGroup:
          type: integer
        runAsUser:
          type: integer
        serviceAccount:
          type: string
        tags:
          type: array
          items:
            type: string
        tolerations:
          type: array
          items:
            $ref: '#/components/schemas/v1.Toleration'
        volumeMounts:
          type: array
          items:
            $ref: '#/components/schemas/v1.VolumeMount'
        volumes:
          type: array
          items:
            $ref: '#/components/schemas/infra_v2.Volumes'
    infra_v2.RegisterInfrastructureV2Response:
      type: object
      properties:
        identity:
          type: string
        name:
          type: string
        token:
          type: string
      example:
        identity: identity
        name: name
        token: token
    infra_v2.UpdateKubernetesInfrastructureV2Request:
      type: object
      properties:
        annotation:
          type: object
          additionalProperties:
            type: string
        containers:
          type: string
        correlationId:
          type: string
        description:
          type: string
        env:
          type: array
          items:
            $ref: '#/components/schemas/infra_v2.Env'
        environmentID:
          type: string
        identity:
          type: string
        imageRegistry:
          $ref: '#/components/schemas/image_registry.ImageRegistryV2'
        infraNamespace:
          type: string
        insecureSkipVerify:
          type: boolean
        label:
          type: object
          additionalProperties:
            type: string
        mtls:
          $ref: '#/components/schemas/infra_v2.MTLSConfiguration'
        name:
          type: string
        nodeSelector:
          type: object
          additionalProperties:
            type: string
        proxy:
          $ref: '#/components/schemas/infra_v2.ProxyConfiguration'
        runAsGroup:
          type: integer
        runAsUser:
          type: integer
        serviceAccount:
          type: string
        tags:
          type: array
          items:
            type: string
        tolerations:
          type: array
          items:
            $ref: '#/components/schemas/v1.Toleration'
        volumeMounts:
          type: array
          items:
            $ref: '#/components/schemas/v1.VolumeMount'
        volumes:
          type: array
          items:
            $ref: '#/components/schemas/infra_v2.Volumes'
    infra_v2.UpdateKubernetesInfrastructureV2Response:
      type: object
      properties:
        correlationId:
          type: string
        message:
          type: string
      example:
        correlationId: correlationId
        message: message
    infra_v2.UpdateStatus:
      type: string
      enum:
      - AVAILABLE
      - MANDATORY
      - NOT_REQUIRED
      x-enum-varnames:
      - UpdateStatusAvailable
      - UpdateStatusMandatory
      - UpdateStatusNotRequired
    infra_v2.Upgrade:
      type: object
      properties:
        isAutoUpgradeEnabled:
          type: boolean
        status:
          $ref: '#/components/schemas/infra_v2.UpgradeStatus'
      example:
        isAutoUpgradeEnabled: true
        status: UPGRADING_INFRA
    infra_v2.UpgradeStatus:
      type: string
      enum:
      - UPGRADING_INFRA
      - UPGRADE_SKIPPED
      - UPGRADE_SUCCESSFUL
      - UPGRADE_FAILED
      - DETECTING_UPGRADER
      - UPGRADER_DISABLED
      x-enum-varnames:
      - UpgradeStatusUpgrading
      - UpgradeStatusSkipped
      - UpgradeStatusSuccessful
      - UpgradeStatusFailed
      - UpgradeStatusDetecting
      - UpgradeStatusDisabled
    infra_v2.UserDetails:
      type: object
      properties:
        email:
          type: string
        name:
          type: string
        username:
          type: string
      example:
        name: name
        email: email
        username: username
    infra_v2.Volumes:
      type: object
      properties:
        name:
          type: string
        sizeLimit:
          type: string
      example:
        sizeLimit: sizeLimit
        name: name
    v1.MountPropagationMode:
      type: string
      enum:
      - None
      - HostToContainer
      - Bidirectional
      x-enum-varnames:
      - MountPropagationNone
      - MountPropagationHostToContainer
      - MountPropagationBidirectional
    v1.TaintEffect:
      type: string
      enum:
      - NoSchedule
      - PreferNoSchedule
      - NoExecute
      x-enum-varnames:
      - TaintEffectNoSchedule
      - TaintEffectPreferNoSchedule
      - TaintEffectNoExecute
    v1.Toleration:
      type: object
      properties:
        effect:
          type: object
          description: |-
            Effect indicates the taint effect to match. Empty means match all taint effects.
            When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
            +optional
          allOf:
          - $ref: '#/components/schemas/v1.TaintEffect'
        key:
          type: string
          description: |-
            Key is the taint key that the toleration applies to. Empty means match all taint keys.
            If the key is empty, operator must be Exists; this combination means to match all values and all keys.
            +optional
        operator:
          type: object
          description: |-
            Operator represents a key's relationship to the value.
            Valid operators are Exists and Equal. Defaults to Equal.
            Exists is equivalent to wildcard for value, so that a pod can
            tolerate all taints of a particular category.
            +optional
          allOf:
          - $ref: '#/components/schemas/v1.TolerationOperator'
        tolerationSeconds:
          type: integer
          description: |-
            TolerationSeconds represents the period of time the toleration (which must be
            of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
            it is not set, which means tolerate the taint forever (do not evict). Zero and
            negative values will be treated as 0 (evict immediately) by the system.
            +optional
        value:
          type: string
          description: |-
            Value is the taint value the toleration matches to.
            If the operator is Exists, the value should be empty, otherwise just a regular string.
            +optional
      example:
        effect: ""
        tolerationSeconds: 2
        value: value
        key: key
        operator: ""
    v1.TolerationOperator:
      type: string
      enum:
      - Exists
      - Equal
      x-enum-varnames:
      - TolerationOpExists
      - TolerationOpEqual
    v1.VolumeMount:
      type: object
      properties:
        mountPath:
          type: string
          description: |-
            Path within the container at which the volume should be mounted.  Must
            not contain ':'.
        mountPropagation:
          type: object
          description: |-
            mountPropagation determines how mounts are propagated from the host
            to container and the other way around.
            When not set, MountPropagationNone is used.
            This field is beta in 1.10.
            +optional
          allOf:
          - $ref: '#/components/schemas/v1.MountPropagationMode'
        name:
          type: string
          description: This must match the Name of a Volume.
        readOnly:
          type: boolean
          description: |-
            Mounted read-only if true, read-write otherwise (false or unspecified).
            Defaults to false.
            +optional
        subPath:
          type: string
          description: |-
            Path within the volume from which the container's volume should be mounted.
            Defaults to "" (volume's root).
            +optional
        subPathExpr:
          type: string
          description: |-
            Expanded path within the volume from which the container's volume should be mounted.
            Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
            Defaults to "" (volume's root).
            SubPathExpr and SubPath are mutually exclusive.
            +optional
      example:
        mountPath: mountPath
        mountPropagation: ""
        name: name
        readOnly: true
        subPath: subPath
        subPathExpr: subPathExpr
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: X-API-Key
      in: header
    BasicAuth:
      type: http
      scheme: basic
x-original-swagger-version: "2.0"
