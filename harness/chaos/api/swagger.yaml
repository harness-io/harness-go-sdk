basePath: /api/manager
definitions:
  api.RestError:
    properties:
      description:
        type: string
      message:
        type: string
    type: object
  github_com_harness_hce-saas_hce-sdk_types_api_k8sifs_image_registry.ScopedIdentifiers:
    properties:
      accountIdentifier:
        description: Harness AccountID
        type: string
      orgIdentifier:
        description: Harness OrgID
        type: string
      projectIdentifier:
        description: Harness projectID
        type: string
    type: object
  image_registry.CustomImagesRequest:
    properties:
      ddcr:
        type: string
      ddcrFault:
        type: string
      ddcrLib:
        type: string
      logWatcher:
        type: string
    type: object
  image_registry.ImageRegistryV2:
    properties:
      createdAt:
        type: string
      createdBy:
        $ref: '#/definitions/image_registry.UserDetails'
      customImages:
        $ref: '#/definitions/image_registry.CustomImagesRequest'
      identifier:
        $ref: '#/definitions/github_com_harness_hce-saas_hce-sdk_types_api_k8sifs_image_registry.ScopedIdentifiers'
      infraID:
        type: string
      isDefault:
        type: boolean
      isOverrideAllowed:
        type: boolean
      isPrivate:
        type: boolean
      registryAccount:
        type: string
      registryServer:
        type: string
      secretName:
        type: string
      updatedAt:
        type: string
      updatedBy:
        $ref: '#/definitions/image_registry.UserDetails'
      useCustomImages:
        type: boolean
    type: object
  image_registry.UserDetails:
    properties:
      email:
        type: string
      userID:
        type: string
      username:
        type: string
    type: object
  infra_v2.DeleteKubernetesInfraV2Response:
    properties:
      correlationId:
        type: string
      identity:
        type: string
      message:
        type: string
    type: object
  infra_v2.Env:
    properties:
      key:
        type: string
      name:
        type: string
      value:
        type: string
      valueFrom:
        $ref: '#/definitions/infra_v2.EnvValueFrom'
    type: object
  infra_v2.EnvValueFrom:
    enum:
      - configMapKeyRef
      - secretKeyRef
      - value
      - valueFrom
    type: string
    x-enum-varnames:
      - EnvValueFromConfigMapKeyRef
      - EnvValueFromSecretKeyRef
      - EnvValueFromValue
      - EnvValueFromValueFrom
  infra_v2.Identifiers:
    properties:
      accountIdentifier:
        type: string
      orgIdentifier:
        type: string
      projectIdentifier:
        type: string
    type: object
  infra_v2.InfraScope:
    enum:
      - NAMESPACE
      - CLUSTER
    type: string
    x-enum-varnames:
      - InfraScopeNamespace
      - InfraScopeCluster
  infra_v2.InfraStatus:
    enum:
      - ACTIVE
      - INACTIVE
      - PENDING
      - UPGRADING
      - UPGRADE_REQUIRED
    type: string
    x-enum-varnames:
      - InfraStatusActive
      - InfraStatusInactive
      - InfraStatusPending
      - InfraStatusUpgrading
      - InfraStatusUpgradeRequired
  infra_v2.InfraType:
    enum:
      - KUBERNETES
      - KUBERNETESV2
    type: string
    x-enum-varnames:
      - InfraTypeKubernetes
      - InfraTypeKubernetesV2
  infra_v2.InfraTypeFilter:
    enum:
      - KUBERNETES
      - KUBERNETESV2
      - ALL
    type: string
    x-enum-varnames:
      - InfraTypeFilterKubernetes
      - InfraTypeFilterKubernetesV2
      - InfraTypeFilterAll
  infra_v2.InstallationType:
    enum:
      - CONNECTOR
      - MANIFEST
      - CONNECTOR_V2
    type: string
    x-enum-varnames:
      - InstallationTypeConnector
      - InstallationTypeManifest
      - InstallationTypeConnectorV2
  infra_v2.KubernetesInfraV2FilterInput:
    properties:
      infraScope:
        $ref: '#/definitions/infra_v2.InfraScope'
      infraTypeFilter:
        $ref: '#/definitions/infra_v2.InfraTypeFilter'
      tags:
        items:
          type: string
        type: array
    type: object
  infra_v2.KubernetesInfrastructureV2Details:
    properties:
      annotation:
        additionalProperties:
          type: string
        type: object
      containers:
        type: string
      createdAt:
        type: string
      createdBy:
        $ref: '#/definitions/infra_v2.UserDetails'
      deploymentType:
        type: string
      description:
        type: string
      discoveryAgentID:
        type: string
      env:
        items:
          $ref: '#/definitions/infra_v2.Env'
        type: array
      environmentID:
        type: string
      harnessInfraType:
        type: string
      identifier:
        $ref: '#/definitions/infra_v2.Identifiers'
      identity:
        type: string
      imageRegistry:
        $ref: '#/definitions/image_registry.ImageRegistryV2'
      infraID:
        type: string
      infraNamespace:
        type: string
      infraScope:
        $ref: '#/definitions/infra_v2.InfraScope'
      infraType:
        $ref: '#/definitions/infra_v2.InfraType'
      insecureSkipVerify:
        type: boolean
      installationType:
        $ref: '#/definitions/infra_v2.InstallationType'
      isChaosEnabled:
        type: boolean
      k8sConnectorID:
        type: string
      label:
        additionalProperties:
          type: string
        type: object
      lastHeartbeat:
        type: integer
      lastWorkflowTimestamp:
        type: string
      mtls:
        $ref: '#/definitions/infra_v2.MTLSConfiguration'
      name:
        type: string
      noOfSchedules:
        type: integer
      noOfWorkflows:
        type: integer
      nodeSelector:
        additionalProperties:
          type: string
        type: object
      platformName:
        type: string
      proxy:
        $ref: '#/definitions/infra_v2.ProxyConfiguration'
      runAsGroup:
        type: integer
      runAsUser:
        type: integer
      serviceAccount:
        type: string
      status:
        $ref: '#/definitions/infra_v2.InfraStatus'
      tags:
        items:
          type: string
        type: array
      tolerations:
        items:
          $ref: '#/definitions/v1.Toleration'
        type: array
      updateStatus:
        $ref: '#/definitions/infra_v2.UpdateStatus'
      updatedAt:
        type: string
      updatedBy:
        $ref: '#/definitions/infra_v2.UserDetails'
      upgrade:
        $ref: '#/definitions/infra_v2.Upgrade'
      version:
        type: string
      volumeMounts:
        items:
          $ref: '#/definitions/v1.VolumeMount'
        type: array
      volumes:
        items:
          $ref: '#/definitions/infra_v2.Volumes'
        type: array
    type: object
  infra_v2.ListKubernetesInfraV2Request:
    properties:
      filter:
        $ref: '#/definitions/infra_v2.KubernetesInfraV2FilterInput'
      identifier:
        $ref: '#/definitions/infra_v2.Identifiers'
    type: object
  infra_v2.ListKubernetesInfraV2Response:
    properties:
      infras:
        items:
          $ref: '#/definitions/infra_v2.KubernetesInfrastructureV2Details'
        type: array
      pagination:
        $ref: '#/definitions/infra_v2.Pagination'
      totalNoOfInfrastructures:
        type: integer
    type: object
  infra_v2.MTLSConfiguration:
    properties:
      certPath:
        type: string
      keyPath:
        type: string
      secretName:
        type: string
      url:
        type: string
    type: object
  infra_v2.Pagination:
    properties:
      limit:
        type: integer
      page:
        type: integer
    type: object
  infra_v2.ProxyConfiguration:
    properties:
      httpProxy:
        type: string
      httpsProxy:
        type: string
      noProxy:
        type: string
      url:
        type: string
    type: object
  infra_v2.RegisterInfrastructureV2Request:
    properties:
      annotation:
        additionalProperties:
          type: string
        type: object
      containers:
        type: string
      correlationId:
        type: string
      description:
        type: string
      discoveryAgentID:
        type: string
      env:
        items:
          $ref: '#/definitions/infra_v2.Env'
        type: array
      environmentID:
        type: string
      identifier:
        $ref: '#/definitions/infra_v2.Identifiers'
      identity:
        type: string
      imageRegistry:
        $ref: '#/definitions/image_registry.ImageRegistryV2'
      infraID:
        type: string
      infraNamespace:
        type: string
      infraScope:
        $ref: '#/definitions/infra_v2.InfraScope'
      infraType:
        $ref: '#/definitions/infra_v2.InfraType'
      insecureSkipVerify:
        type: boolean
      k8sConnectorID:
        type: string
      label:
        additionalProperties:
          type: string
        type: object
      mtls:
        $ref: '#/definitions/infra_v2.MTLSConfiguration'
      name:
        type: string
      nodeSelector:
        additionalProperties:
          type: string
        type: object
      proxy:
        $ref: '#/definitions/infra_v2.ProxyConfiguration'
      runAsGroup:
        type: integer
      runAsUser:
        type: integer
      serviceAccount:
        type: string
      tags:
        items:
          type: string
        type: array
      tolerations:
        items:
          $ref: '#/definitions/v1.Toleration'
        type: array
      volumeMounts:
        items:
          $ref: '#/definitions/v1.VolumeMount'
        type: array
      volumes:
        items:
          $ref: '#/definitions/infra_v2.Volumes'
        type: array
    type: object
  infra_v2.RegisterInfrastructureV2Response:
    properties:
      identity:
        type: string
      name:
        type: string
      token:
        type: string
    type: object
  infra_v2.UpdateKubernetesInfrastructureV2Request:
    properties:
      annotation:
        additionalProperties:
          type: string
        type: object
      containers:
        type: string
      correlationId:
        type: string
      description:
        type: string
      env:
        items:
          $ref: '#/definitions/infra_v2.Env'
        type: array
      environmentID:
        type: string
      identity:
        type: string
      imageRegistry:
        $ref: '#/definitions/image_registry.ImageRegistryV2'
      infraNamespace:
        type: string
      insecureSkipVerify:
        type: boolean
      label:
        additionalProperties:
          type: string
        type: object
      mtls:
        $ref: '#/definitions/infra_v2.MTLSConfiguration'
      name:
        type: string
      nodeSelector:
        additionalProperties:
          type: string
        type: object
      proxy:
        $ref: '#/definitions/infra_v2.ProxyConfiguration'
      runAsGroup:
        type: integer
      runAsUser:
        type: integer
      serviceAccount:
        type: string
      tags:
        items:
          type: string
        type: array
      tolerations:
        items:
          $ref: '#/definitions/v1.Toleration'
        type: array
      volumeMounts:
        items:
          $ref: '#/definitions/v1.VolumeMount'
        type: array
      volumes:
        items:
          $ref: '#/definitions/infra_v2.Volumes'
        type: array
    type: object
  infra_v2.UpdateKubernetesInfrastructureV2Response:
    properties:
      correlationId:
        type: string
      message:
        type: string
    type: object
  infra_v2.UpdateStatus:
    enum:
      - AVAILABLE
      - MANDATORY
      - NOT_REQUIRED
    type: string
    x-enum-varnames:
      - UpdateStatusAvailable
      - UpdateStatusMandatory
      - UpdateStatusNotRequired
  infra_v2.Upgrade:
    properties:
      isAutoUpgradeEnabled:
        type: boolean
      status:
        $ref: '#/definitions/infra_v2.UpgradeStatus'
    type: object
  infra_v2.UpgradeStatus:
    enum:
      - UPGRADING_INFRA
      - UPGRADE_SKIPPED
      - UPGRADE_SUCCESSFUL
      - UPGRADE_FAILED
      - DETECTING_UPGRADER
      - UPGRADER_DISABLED
    type: string
    x-enum-varnames:
      - UpgradeStatusUpgrading
      - UpgradeStatusSkipped
      - UpgradeStatusSuccessful
      - UpgradeStatusFailed
      - UpgradeStatusDetecting
      - UpgradeStatusDisabled
  infra_v2.UserDetails:
    properties:
      email:
        type: string
      name:
        type: string
      username:
        type: string
    type: object
  infra_v2.Volumes:
    properties:
      name:
        type: string
      sizeLimit:
        type: string
    type: object
  v1.MountPropagationMode:
    enum:
      - None
      - HostToContainer
      - Bidirectional
    type: string
    x-enum-varnames:
      - MountPropagationNone
      - MountPropagationHostToContainer
      - MountPropagationBidirectional
  v1.TaintEffect:
    enum:
      - NoSchedule
      - PreferNoSchedule
      - NoExecute
    type: string
    x-enum-varnames:
      - TaintEffectNoSchedule
      - TaintEffectPreferNoSchedule
      - TaintEffectNoExecute
  v1.Toleration:
    properties:
      effect:
        allOf:
          - $ref: '#/definitions/v1.TaintEffect'
        description: |-
          Effect indicates the taint effect to match. Empty means match all taint effects.
          When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
          +optional
      key:
        description: |-
          Key is the taint key that the toleration applies to. Empty means match all taint keys.
          If the key is empty, operator must be Exists; this combination means to match all values and all keys.
          +optional
        type: string
      operator:
        allOf:
          - $ref: '#/definitions/v1.TolerationOperator'
        description: |-
          Operator represents a key's relationship to the value.
          Valid operators are Exists and Equal. Defaults to Equal.
          Exists is equivalent to wildcard for value, so that a pod can
          tolerate all taints of a particular category.
          +optional
      tolerationSeconds:
        description: |-
          TolerationSeconds represents the period of time the toleration (which must be
          of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
          it is not set, which means tolerate the taint forever (do not evict). Zero and
          negative values will be treated as 0 (evict immediately) by the system.
          +optional
        type: integer
      value:
        description: |-
          Value is the taint value the toleration matches to.
          If the operator is Exists, the value should be empty, otherwise just a regular string.
          +optional
        type: string
    type: object
  v1.TolerationOperator:
    enum:
      - Exists
      - Equal
    type: string
    x-enum-varnames:
      - TolerationOpExists
      - TolerationOpEqual
  v1.VolumeMount:
    properties:
      mountPath:
        description: |-
          Path within the container at which the volume should be mounted.  Must
          not contain ':'.
        type: string
      mountPropagation:
        allOf:
          - $ref: '#/definitions/v1.MountPropagationMode'
        description: |-
          mountPropagation determines how mounts are propagated from the host
          to container and the other way around.
          When not set, MountPropagationNone is used.
          This field is beta in 1.10.
          +optional
      name:
        description: This must match the Name of a Volume.
        type: string
      readOnly:
        description: |-
          Mounted read-only if true, read-write otherwise (false or unspecified).
          Defaults to false.
          +optional
        type: boolean
      subPath:
        description: |-
          Path within the volume from which the container's volume should be mounted.
          Defaults to "" (volume's root).
          +optional
        type: string
      subPathExpr:
        description: |-
          Expanded path within the volume from which the container's volume should be mounted.
          Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
          Defaults to "" (volume's root).
          SubPathExpr and SubPath are mutually exclusive.
          +optional
        type: string
    type: object
info:
  contact: {}
  title: Chaos Manager API
  version: "1.0"
paths:
  /rest/v2/infrastructure:
    post:
      consumes:
        - application/json
      description: Register a new v2 infra
      operationId: registerInfraV2
      parameters:
        - description: Register Infra V2
          in: body
          name: request"
          required: true
          schema:
            $ref: '#/definitions/infra_v2.RegisterInfrastructureV2Request'
        - description: correlation id is used to debug micro svc communication
          in: query
          name: correlationID
          type: string
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/infra_v2.RegisterInfrastructureV2Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      security:
        - ApiKeyAuth: []
      summary: Register a new v2 infra
      tags:
        - chaos-sdk
    put:
      consumes:
        - application/json
      description: Update a new v2 infra
      operationId: updateInfraV2
      parameters:
        - description: update Infra V2
          in: body
          name: request"
          required: true
          schema:
            $ref: '#/definitions/infra_v2.UpdateKubernetesInfrastructureV2Request'
        - description: correlation id is used to debug micro svc communication
          in: query
          name: correlationID
          type: string
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/infra_v2.UpdateKubernetesInfrastructureV2Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      security:
        - ApiKeyAuth: []
      summary: Update a new v2 infra
      tags:
        - chaos-sdk
  /rest/v2/infrastructure/{environmentIdentifier}/{identity}:
    delete:
      consumes:
        - application/json
      description: Delete a new v2 infra
      operationId: deleteInfraV2
      parameters:
        - description: Chaos V2 Infra Identity
          in: path
          name: identity
          required: true
          type: string
        - description: Chaos V2 Environment Identity
          in: path
          name: environmentIdentifier
          required: true
          type: string
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/infra_v2.DeleteKubernetesInfraV2Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      security:
        - ApiKeyAuth: []
      summary: Delete a v2 infra
      tags:
        - chaos-sdk
  /rest/v2/infrastructure/{identity}:
    get:
      consumes:
        - application/json
      description: Get a new v2 infra
      operationId: getInfraV2
      parameters:
        - description: Chaos V2 Infra Identity
          in: path
          name: identity
          required: true
          type: string
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
        - description: environment identifier to filter resource
          in: query
          name: environmentIdentifier
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/infra_v2.KubernetesInfrastructureV2Details'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      security:
        - ApiKeyAuth: []
      summary: Get a new v2 infra
      tags:
        - chaos-sdk
  /rest/v2/infrastructures:
    post:
      description: List a new v2 infra
      operationId: listInfraV2
      parameters:
        - description: list Infra V2
          in: body
          name: request"
          required: true
          schema:
            $ref: '#/definitions/infra_v2.ListKubernetesInfraV2Request'
        - description: account id that want to access the resource
          in: query
          name: accountIdentifier
          required: true
          type: string
        - description: organization id that want to access the resource
          in: query
          name: organizationIdentifier
          required: true
          type: string
        - description: project id that want to access the resource
          in: query
          name: projectIdentifier
          required: true
          type: string
        - description: include legacy infra details
          in: query
          name: includeLegacyInfra
          type: boolean
        - description: filter infra
          in: query
          name: environmentIdentifier
          type: string
        - default: 0
          description: page number
          in: query
          name: page
          required: true
          type: integer
        - default: 10
          description: limit per page
          in: query
          name: limit
          required: true
          type: integer
        - description: search based on name
          in: query
          name: search
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/infra_v2.ListKubernetesInfraV2Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RestError'
      security:
        - ApiKeyAuth: []
      summary: List a new v2 infra
      tags:
        - chaos-sdk
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: X-API-Key
    type: apiKey
  BasicAuth:
    type: basic
swagger: "2.0"
