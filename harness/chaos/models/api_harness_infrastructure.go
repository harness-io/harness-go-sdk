// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// APIHarnessInfrastructure api harness infrastructure
//
// swagger:model api.HarnessInfrastructure
type APIHarnessInfrastructure struct {

	// connector ref
	ConnectorRef string `json:"connectorRef,omitempty"`

	// environment ref
	EnvironmentRef string `json:"environmentRef,omitempty"`

	// identifier
	Identifier string `json:"identifier,omitempty"`

	// is compatible
	IsCompatible bool `json:"isCompatible,omitempty"`

	// is used
	IsUsed bool `json:"isUsed,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// namespace
	Namespace string `json:"namespace,omitempty"`

	// org identifier
	OrgIdentifier string `json:"orgIdentifier,omitempty"`

	// project identifier
	ProjectIdentifier string `json:"projectIdentifier,omitempty"`

	// service account
	ServiceAccount string `json:"serviceAccount,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this api harness infrastructure
func (m *APIHarnessInfrastructure) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this api harness infrastructure based on context it is used
func (m *APIHarnessInfrastructure) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *APIHarnessInfrastructure) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *APIHarnessInfrastructure) UnmarshalBinary(b []byte) error {
	var res APIHarnessInfrastructure
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
