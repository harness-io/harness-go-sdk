// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ChaosserviceusagePeriodicStats chaosserviceusage periodic stats
//
// swagger:model chaosserviceusage.PeriodicStats
type ChaosserviceusagePeriodicStats struct {

	// service stats by type
	ServiceStatsByType *ChaosserviceusageServiceStatsByType `json:"serviceStatsByType,omitempty"`

	// timestamp
	Timestamp int64 `json:"timestamp,omitempty"`

	// total consumption
	TotalConsumption float64 `json:"totalConsumption,omitempty"`
}

// Validate validates this chaosserviceusage periodic stats
func (m *ChaosserviceusagePeriodicStats) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateServiceStatsByType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ChaosserviceusagePeriodicStats) validateServiceStatsByType(formats strfmt.Registry) error {
	if swag.IsZero(m.ServiceStatsByType) { // not required
		return nil
	}

	if m.ServiceStatsByType != nil {
		if err := m.ServiceStatsByType.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("serviceStatsByType")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("serviceStatsByType")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this chaosserviceusage periodic stats based on the context it is used
func (m *ChaosserviceusagePeriodicStats) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateServiceStatsByType(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ChaosserviceusagePeriodicStats) contextValidateServiceStatsByType(ctx context.Context, formats strfmt.Registry) error {

	if m.ServiceStatsByType != nil {

		if swag.IsZero(m.ServiceStatsByType) { // not required
			return nil
		}

		if err := m.ServiceStatsByType.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("serviceStatsByType")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("serviceStatsByType")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ChaosserviceusagePeriodicStats) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ChaosserviceusagePeriodicStats) UnmarshalBinary(b []byte) error {
	var res ChaosserviceusagePeriodicStats
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
