// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// HandlersMinimalNotificationWorkflow handlers minimal notification workflow
//
// swagger:model handlers.MinimalNotificationWorkflow
type HandlersMinimalNotificationWorkflow struct {

	// ID of the infra
	InfraID string `json:"infraID,omitempty"`

	// Name of the infrastructure
	InfraName string `json:"infraName,omitempty"`

	// Name of the workflow
	Name string `json:"name,omitempty"`

	// Tags of the workflow
	Tags []string `json:"tags"`

	// ID of the workflow
	WorkflowID string `json:"workflowID,omitempty"`
}

// Validate validates this handlers minimal notification workflow
func (m *HandlersMinimalNotificationWorkflow) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this handlers minimal notification workflow based on context it is used
func (m *HandlersMinimalNotificationWorkflow) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *HandlersMinimalNotificationWorkflow) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *HandlersMinimalNotificationWorkflow) UnmarshalBinary(b []byte) error {
	var res HandlersMinimalNotificationWorkflow
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
