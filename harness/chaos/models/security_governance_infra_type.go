// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// SecurityGovernanceInfraType security governance infra type
//
// swagger:model security_governance.InfraType
type SecurityGovernanceInfraType string

func NewSecurityGovernanceInfraType(value SecurityGovernanceInfraType) *SecurityGovernanceInfraType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated SecurityGovernanceInfraType.
func (m SecurityGovernanceInfraType) Pointer() *SecurityGovernanceInfraType {
	return &m
}

const (

	// SecurityGovernanceInfraTypeKubernetes captures enum value "Kubernetes"
	SecurityGovernanceInfraTypeKubernetes SecurityGovernanceInfraType = "Kubernetes"

	// SecurityGovernanceInfraTypeKubernetesV2 captures enum value "KubernetesV2"
	SecurityGovernanceInfraTypeKubernetesV2 SecurityGovernanceInfraType = "KubernetesV2"

	// SecurityGovernanceInfraTypeLinux captures enum value "Linux"
	SecurityGovernanceInfraTypeLinux SecurityGovernanceInfraType = "Linux"

	// SecurityGovernanceInfraTypeWindows captures enum value "Windows"
	SecurityGovernanceInfraTypeWindows SecurityGovernanceInfraType = "Windows"
)

// for schema
var securityGovernanceInfraTypeEnum []interface{}

func init() {
	var res []SecurityGovernanceInfraType
	if err := json.Unmarshal([]byte(`["Kubernetes","KubernetesV2","Linux","Windows"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		securityGovernanceInfraTypeEnum = append(securityGovernanceInfraTypeEnum, v)
	}
}

func (m SecurityGovernanceInfraType) validateSecurityGovernanceInfraTypeEnum(path, location string, value SecurityGovernanceInfraType) error {
	if err := validate.EnumCase(path, location, value, securityGovernanceInfraTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this security governance infra type
func (m SecurityGovernanceInfraType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateSecurityGovernanceInfraTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this security governance infra type based on context it is used
func (m SecurityGovernanceInfraType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
