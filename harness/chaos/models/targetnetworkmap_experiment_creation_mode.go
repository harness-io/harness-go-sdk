// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// TargetnetworkmapExperimentCreationMode targetnetworkmap experiment creation mode
//
// swagger:model targetnetworkmap.ExperimentCreationMode
type TargetnetworkmapExperimentCreationMode string

func NewTargetnetworkmapExperimentCreationMode(value TargetnetworkmapExperimentCreationMode) *TargetnetworkmapExperimentCreationMode {
	return &value
}

// Pointer returns a pointer to a freshly-allocated TargetnetworkmapExperimentCreationMode.
func (m TargetnetworkmapExperimentCreationMode) Pointer() *TargetnetworkmapExperimentCreationMode {
	return &m
}

const (

	// TargetnetworkmapExperimentCreationModeBasic captures enum value "Basic"
	TargetnetworkmapExperimentCreationModeBasic TargetnetworkmapExperimentCreationMode = "Basic"

	// TargetnetworkmapExperimentCreationModeIntermediate captures enum value "Intermediate"
	TargetnetworkmapExperimentCreationModeIntermediate TargetnetworkmapExperimentCreationMode = "Intermediate"

	// TargetnetworkmapExperimentCreationModeAdvanced captures enum value "Advanced"
	TargetnetworkmapExperimentCreationModeAdvanced TargetnetworkmapExperimentCreationMode = "Advanced"
)

// for schema
var targetnetworkmapExperimentCreationModeEnum []interface{}

func init() {
	var res []TargetnetworkmapExperimentCreationMode
	if err := json.Unmarshal([]byte(`["Basic","Intermediate","Advanced"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		targetnetworkmapExperimentCreationModeEnum = append(targetnetworkmapExperimentCreationModeEnum, v)
	}
}

func (m TargetnetworkmapExperimentCreationMode) validateTargetnetworkmapExperimentCreationModeEnum(path, location string, value TargetnetworkmapExperimentCreationMode) error {
	if err := validate.EnumCase(path, location, value, targetnetworkmapExperimentCreationModeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this targetnetworkmap experiment creation mode
func (m TargetnetworkmapExperimentCreationMode) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateTargetnetworkmapExperimentCreationModeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this targetnetworkmap experiment creation mode based on context it is used
func (m TargetnetworkmapExperimentCreationMode) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
