// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// V1AzureDataDiskKind v1 azure data disk kind
//
// swagger:model v1.AzureDataDiskKind
type V1AzureDataDiskKind string

func NewV1AzureDataDiskKind(value V1AzureDataDiskKind) *V1AzureDataDiskKind {
	return &value
}

// Pointer returns a pointer to a freshly-allocated V1AzureDataDiskKind.
func (m V1AzureDataDiskKind) Pointer() *V1AzureDataDiskKind {
	return &m
}

const (

	// V1AzureDataDiskKindShared captures enum value "Shared"
	V1AzureDataDiskKindShared V1AzureDataDiskKind = "Shared"

	// V1AzureDataDiskKindDedicated captures enum value "Dedicated"
	V1AzureDataDiskKindDedicated V1AzureDataDiskKind = "Dedicated"

	// V1AzureDataDiskKindManaged captures enum value "Managed"
	V1AzureDataDiskKindManaged V1AzureDataDiskKind = "Managed"
)

// for schema
var v1AzureDataDiskKindEnum []interface{}

func init() {
	var res []V1AzureDataDiskKind
	if err := json.Unmarshal([]byte(`["Shared","Dedicated","Managed"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v1AzureDataDiskKindEnum = append(v1AzureDataDiskKindEnum, v)
	}
}

func (m V1AzureDataDiskKind) validateV1AzureDataDiskKindEnum(path, location string, value V1AzureDataDiskKind) error {
	if err := validate.EnumCase(path, location, value, v1AzureDataDiskKindEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this v1 azure data disk kind
func (m V1AzureDataDiskKind) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateV1AzureDataDiskKindEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this v1 azure data disk kind based on context it is used
func (m V1AzureDataDiskKind) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
