// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// V1ServiceAffinity v1 service affinity
//
// swagger:model v1.ServiceAffinity
type V1ServiceAffinity string

func NewV1ServiceAffinity(value V1ServiceAffinity) *V1ServiceAffinity {
	return &value
}

// Pointer returns a pointer to a freshly-allocated V1ServiceAffinity.
func (m V1ServiceAffinity) Pointer() *V1ServiceAffinity {
	return &m
}

const (

	// V1ServiceAffinityClientIP captures enum value "ClientIP"
	V1ServiceAffinityClientIP V1ServiceAffinity = "ClientIP"

	// V1ServiceAffinityNone captures enum value "None"
	V1ServiceAffinityNone V1ServiceAffinity = "None"
)

// for schema
var v1ServiceAffinityEnum []interface{}

func init() {
	var res []V1ServiceAffinity
	if err := json.Unmarshal([]byte(`["ClientIP","None"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v1ServiceAffinityEnum = append(v1ServiceAffinityEnum, v)
	}
}

func (m V1ServiceAffinity) validateV1ServiceAffinityEnum(path, location string, value V1ServiceAffinity) error {
	if err := validate.EnumCase(path, location, value, v1ServiceAffinityEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this v1 service affinity
func (m V1ServiceAffinity) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateV1ServiceAffinityEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this v1 service affinity based on context it is used
func (m V1ServiceAffinity) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
