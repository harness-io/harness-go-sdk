// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// V1ServiceInternalTrafficPolicyType v1 service internal traffic policy type
//
// swagger:model v1.ServiceInternalTrafficPolicyType
type V1ServiceInternalTrafficPolicyType string

func NewV1ServiceInternalTrafficPolicyType(value V1ServiceInternalTrafficPolicyType) *V1ServiceInternalTrafficPolicyType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated V1ServiceInternalTrafficPolicyType.
func (m V1ServiceInternalTrafficPolicyType) Pointer() *V1ServiceInternalTrafficPolicyType {
	return &m
}

const (

	// V1ServiceInternalTrafficPolicyTypeCluster captures enum value "Cluster"
	V1ServiceInternalTrafficPolicyTypeCluster V1ServiceInternalTrafficPolicyType = "Cluster"

	// V1ServiceInternalTrafficPolicyTypeLocal captures enum value "Local"
	V1ServiceInternalTrafficPolicyTypeLocal V1ServiceInternalTrafficPolicyType = "Local"
)

// for schema
var v1ServiceInternalTrafficPolicyTypeEnum []interface{}

func init() {
	var res []V1ServiceInternalTrafficPolicyType
	if err := json.Unmarshal([]byte(`["Cluster","Local"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v1ServiceInternalTrafficPolicyTypeEnum = append(v1ServiceInternalTrafficPolicyTypeEnum, v)
	}
}

func (m V1ServiceInternalTrafficPolicyType) validateV1ServiceInternalTrafficPolicyTypeEnum(path, location string, value V1ServiceInternalTrafficPolicyType) error {
	if err := validate.EnumCase(path, location, value, v1ServiceInternalTrafficPolicyTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this v1 service internal traffic policy type
func (m V1ServiceInternalTrafficPolicyType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateV1ServiceInternalTrafficPolicyTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this v1 service internal traffic policy type based on context it is used
func (m V1ServiceInternalTrafficPolicyType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
