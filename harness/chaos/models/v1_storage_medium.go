// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// V1StorageMedium v1 storage medium
//
// swagger:model v1.StorageMedium
type V1StorageMedium string

func NewV1StorageMedium(value V1StorageMedium) *V1StorageMedium {
	return &value
}

// Pointer returns a pointer to a freshly-allocated V1StorageMedium.
func (m V1StorageMedium) Pointer() *V1StorageMedium {
	return &m
}

const (

	// V1StorageMediumEmpty captures enum value ""
	V1StorageMediumEmpty V1StorageMedium = ""

	// V1StorageMediumMemory captures enum value "Memory"
	V1StorageMediumMemory V1StorageMedium = "Memory"

	// V1StorageMediumHugePages captures enum value "HugePages"
	V1StorageMediumHugePages V1StorageMedium = "HugePages"

	// V1StorageMediumHugePagesDash captures enum value "HugePages-"
	V1StorageMediumHugePagesDash V1StorageMedium = "HugePages-"
)

// for schema
var v1StorageMediumEnum []interface{}

func init() {
	var res []V1StorageMedium
	if err := json.Unmarshal([]byte(`["","Memory","HugePages","HugePages-"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v1StorageMediumEnum = append(v1StorageMediumEnum, v)
	}
}

func (m V1StorageMedium) validateV1StorageMediumEnum(path, location string, value V1StorageMedium) error {
	if err := validate.EnumCase(path, location, value, v1StorageMediumEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this v1 storage medium
func (m V1StorageMedium) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateV1StorageMediumEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this v1 storage medium based on context it is used
func (m V1StorageMedium) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
