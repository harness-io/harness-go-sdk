// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// V2OnboardingOnboardingMode v2 onboarding onboarding mode
//
// swagger:model v2_onboarding.OnboardingMode
type V2OnboardingOnboardingMode string

func NewV2OnboardingOnboardingMode(value V2OnboardingOnboardingMode) *V2OnboardingOnboardingMode {
	return &value
}

// Pointer returns a pointer to a freshly-allocated V2OnboardingOnboardingMode.
func (m V2OnboardingOnboardingMode) Pointer() *V2OnboardingOnboardingMode {
	return &m
}

const (

	// V2OnboardingOnboardingModeManual captures enum value "Manual"
	V2OnboardingOnboardingModeManual V2OnboardingOnboardingMode = "Manual"

	// V2OnboardingOnboardingModeAutomatic captures enum value "Automatic"
	V2OnboardingOnboardingModeAutomatic V2OnboardingOnboardingMode = "Automatic"
)

// for schema
var v2OnboardingOnboardingModeEnum []interface{}

func init() {
	var res []V2OnboardingOnboardingMode
	if err := json.Unmarshal([]byte(`["Manual","Automatic"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v2OnboardingOnboardingModeEnum = append(v2OnboardingOnboardingModeEnum, v)
	}
}

func (m V2OnboardingOnboardingMode) validateV2OnboardingOnboardingModeEnum(path, location string, value V2OnboardingOnboardingMode) error {
	if err := validate.EnumCase(path, location, value, v2OnboardingOnboardingModeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this v2 onboarding onboarding mode
func (m V2OnboardingOnboardingMode) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateV2OnboardingOnboardingModeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this v2 onboarding onboarding mode based on context it is used
func (m V2OnboardingOnboardingMode) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
