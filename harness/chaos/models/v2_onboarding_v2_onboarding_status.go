// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// V2OnboardingV2OnboardingStatus v2 onboarding v2 onboarding status
//
// swagger:model v2_onboarding.V2OnboardingStatus
type V2OnboardingV2OnboardingStatus string

func NewV2OnboardingV2OnboardingStatus(value V2OnboardingV2OnboardingStatus) *V2OnboardingV2OnboardingStatus {
	return &value
}

// Pointer returns a pointer to a freshly-allocated V2OnboardingV2OnboardingStatus.
func (m V2OnboardingV2OnboardingStatus) Pointer() *V2OnboardingV2OnboardingStatus {
	return &m
}

const (

	// V2OnboardingV2OnboardingStatusCOMPLETED captures enum value "COMPLETED"
	V2OnboardingV2OnboardingStatusCOMPLETED V2OnboardingV2OnboardingStatus = "COMPLETED"

	// V2OnboardingV2OnboardingStatusRUNNING captures enum value "RUNNING"
	V2OnboardingV2OnboardingStatusRUNNING V2OnboardingV2OnboardingStatus = "RUNNING"

	// V2OnboardingV2OnboardingStatusPENDING captures enum value "PENDING"
	V2OnboardingV2OnboardingStatusPENDING V2OnboardingV2OnboardingStatus = "PENDING"

	// V2OnboardingV2OnboardingStatusQUEUED captures enum value "QUEUED"
	V2OnboardingV2OnboardingStatusQUEUED V2OnboardingV2OnboardingStatus = "QUEUED"

	// V2OnboardingV2OnboardingStatusNA captures enum value "NA"
	V2OnboardingV2OnboardingStatusNA V2OnboardingV2OnboardingStatus = "NA"

	// V2OnboardingV2OnboardingStatusERRORED captures enum value "ERRORED"
	V2OnboardingV2OnboardingStatusERRORED V2OnboardingV2OnboardingStatus = "ERRORED"
)

// for schema
var v2OnboardingV2OnboardingStatusEnum []interface{}

func init() {
	var res []V2OnboardingV2OnboardingStatus
	if err := json.Unmarshal([]byte(`["COMPLETED","RUNNING","PENDING","QUEUED","NA","ERRORED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v2OnboardingV2OnboardingStatusEnum = append(v2OnboardingV2OnboardingStatusEnum, v)
	}
}

func (m V2OnboardingV2OnboardingStatus) validateV2OnboardingV2OnboardingStatusEnum(path, location string, value V2OnboardingV2OnboardingStatus) error {
	if err := validate.EnumCase(path, location, value, v2OnboardingV2OnboardingStatusEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this v2 onboarding v2 onboarding status
func (m V2OnboardingV2OnboardingStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateV2OnboardingV2OnboardingStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this v2 onboarding v2 onboarding status based on context it is used
func (m V2OnboardingV2OnboardingStatus) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
