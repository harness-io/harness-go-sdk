/*
 * CD NextGen API Reference
 *
 * This is the Open Api Spec 3 for the NextGen Manager. This is under active development. Beware of the breaking change with respect to the generated code stub  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * API version: 3.0
 * Contact: contact@harness.io
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package nextgen

type FieldDescriptor struct {
	Index           int32                 `json:"index,omitempty"`
	Proto           *FieldDescriptorProto `json:"proto,omitempty"`
	FullName        string                `json:"fullName,omitempty"`
	JsonName        string                `json:"jsonName,omitempty"`
	File            *FileDescriptor       `json:"file,omitempty"`
	ExtensionScope  *Descriptor           `json:"extensionScope,omitempty"`
	Type_           string                `json:"type,omitempty"`
	ContainingType  *Descriptor           `json:"containingType,omitempty"`
	MessageType     *Descriptor           `json:"messageType,omitempty"`
	ContainingOneof *OneofDescriptor      `json:"containingOneof,omitempty"`
	EnumType        *EnumDescriptor       `json:"enumType,omitempty"`
	DefaultValue    *interface{}          `json:"defaultValue,omitempty"`
	Repeated        bool                  `json:"repeated,omitempty"`
	JavaType        string                `json:"javaType,omitempty"`
	MapField        bool                  `json:"mapField,omitempty"`
	Options         *FieldOptions         `json:"options,omitempty"`
	Required        bool                  `json:"required,omitempty"`
	Optional        bool                  `json:"optional,omitempty"`
	Name            string                `json:"name,omitempty"`
	Number          int32                 `json:"number,omitempty"`
	Extension       bool                  `json:"extension,omitempty"`
	LiteType        string                `json:"liteType,omitempty"`
	Packed          bool                  `json:"packed,omitempty"`
	LiteJavaType    string                `json:"liteJavaType,omitempty"`
	Packable        bool                  `json:"packable,omitempty"`
}
